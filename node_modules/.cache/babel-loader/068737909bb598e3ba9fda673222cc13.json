{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rohat\\\\Desktop\\\\nft exercise\\\\reactApp\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport Form from './Form';\nimport NFTCard from './Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleResponse = response => {\n      this.setState({\n        response: response\n      });\n      this.setState({\n        NFTs: JSON.parse(response[\"data\"])[\"data\"]\n      });\n      console.log(JSON.parse(response[\"data\"])[\"rawData\"]);\n\n      for (var nft of JSON.parse(response[\"data\"])[\"rawData\"]) {\n        console.log(nft[\"metadata\"][\"image\"], nft[\"metadata\"][\"description\"]);\n      }\n    };\n\n    this.state = {\n      response: {},\n      NFTs: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"sm\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          my: 4\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          component: \"h1\",\n          gutterBottom: true,\n          children: \"NFT Searcher using WebSockets\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        getResponse: this.handleResponse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/rohat/Desktop/nft exercise/reactApp/src/App.js"],"names":["React","Component","Container","Typography","Box","Form","NFTCard","App","constructor","props","handleResponse","response","setState","NFTs","JSON","parse","console","log","nft","state","render","my"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,OAAP,MAAoB,QAApB;;;AAEA,MAAMC,GAAN,SAAkBN,SAAlB,CAA4B;AAC1BO,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SAQlBC,cARkB,GAQAC,QAAD,IAAa;AAC5B,WAAKC,QAAL,CAAc;AAACD,QAAAA,QAAQ,EAAGA;AAAZ,OAAd;AACA,WAAKC,QAAL,CAAc;AAACC,QAAAA,IAAI,EAAOC,IAAI,CAACC,KAAL,CAAWJ,QAAQ,CAAC,MAAD,CAAnB,EAA6B,MAA7B;AAAZ,OAAd;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACC,KAAL,CAAWJ,QAAQ,CAAC,MAAD,CAAnB,EAA6B,SAA7B,CAAZ;;AACA,WAAI,IAAIO,GAAR,IAAeJ,IAAI,CAACC,KAAL,CAAWJ,QAAQ,CAAC,MAAD,CAAnB,EAA6B,SAA7B,CAAf,EAAuD;AACrDK,QAAAA,OAAO,CAACC,GAAR,CAAYC,GAAG,CAAC,UAAD,CAAH,CAAgB,OAAhB,CAAZ,EAAqCA,GAAG,CAAC,UAAD,CAAH,CAAgB,aAAhB,CAArC;AACD;AACF,KAfiB;;AAEhB,SAAKC,KAAL,GAAW;AACTR,MAAAA,QAAQ,EAAE,EADD;AAETE,MAAAA,IAAI,EAAM;AAFD,KAAX;AAID;;AAWDO,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAC,IAApB;AAAA,8BACE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAAT;AAAA,+BACE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,IAApB;AAAyB,UAAA,SAAS,EAAC,IAAnC;AAAwC,UAAA,YAAY,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,IAAD;AAAM,QAAA,WAAW,EAAE,KAAKX;AAAxB;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AA9ByB;;AAiC5B,eAAeH,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport Form from './Form';\nimport NFTCard from './Card'\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state={\n      response: {},\n      NFTs:     [],\n    }\n  }\n  \n  handleResponse = (response) =>{\n    this.setState({response:  response});\n    this.setState({NFTs:      JSON.parse(response[\"data\"])[\"data\"]});\n    console.log(JSON.parse(response[\"data\"])[\"rawData\"]);\n    for(var nft of JSON.parse(response[\"data\"])[\"rawData\"]){\n      console.log(nft[\"metadata\"][\"image\"],nft[\"metadata\"][\"description\"]);\n    }\n  }\n\n  render() {\n    return (\n      <Container maxWidth=\"sm\">\n        <Box sx={{ my: 4 }}>\n          <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n            NFT Searcher using WebSockets\n          </Typography>\n        </Box>\n        <Form getResponse={this.handleResponse}/>\n        \n      </Container>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}