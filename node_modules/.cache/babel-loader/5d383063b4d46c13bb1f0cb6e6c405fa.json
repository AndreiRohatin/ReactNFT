{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rohat\\\\Desktop\\\\nft exercise\\\\reactApp\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Modal from '@mui/material/Modal';\nimport Box from '@mui/material/Box';\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\nimport Form from './Form';\nimport NFTCard from './Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 400,\n  bgcolor: '#42a9f3',\n  border: '2px solid #000',\n  boxShadow: 24,\n  p: 4\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleResponse = response => {\n      const rspv = JSON.parse(response[\"data\"]);\n      console.log(rspv);\n\n      if (rspv[\"isSuccessful\"]) {\n        this.setState({\n          isSuccessful: true\n        });\n        this.setState({\n          response: rspv[\"data\"]\n        });\n      } else {\n        this.setState({\n          isSuccessful: false\n        });\n        this.setState({\n          response: rspv[\"error\"]\n        });\n        this.setState({\n          modalOpen: true\n        });\n      }\n    };\n\n    this.state = {\n      response: {},\n      isSuccessful: null,\n      modalOpen: false\n    };\n  }\n\n  renderResponse() {\n    if (this.state.isSuccessful == true) {\n      return this.state.response.map(elm => /*#__PURE__*/_jsxDEV(NFTCard, {\n        NFT: elm,\n        sx: {\n          my: 10\n        },\n        className: \"col-4\"\n      }, elm[\"blockNumber\"], false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 45\n      }, this));\n    } else if (this.state.isSuccessful == false) {\n      return /*#__PURE__*/_jsxDEV(Modal, {\n        open: this.state.modalOpen //not a smart idea but it works for this case, we don't have more functionality so nothing is affected by this\n        ,\n        onClose: () => {\n          this.setState({\n            modalOpen: !this.state.modalOpen\n          });\n        },\n        \"aria-labelledby\": \"modal-modal-title\",\n        \"aria-describedby\": \"modal-modal-description\",\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          style: style,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            id: \"modal-modal-title\",\n            variant: \"h6\",\n            component: \"h2\",\n            children: \"Something gone wrong\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            id: \"modal-modal-description\",\n            sx: {\n              mt: 2\n            },\n            children: this.state.response[\"message\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          my: 4\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          component: \"h1\",\n          style: {\n            \"textAlign\": \"center\"\n          },\n          gutterBottom: true,\n          children: \"NFT Searcher using WebSockets\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        getResponse: this.handleResponse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: this.renderResponse()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/rohat/Desktop/nft exercise/reactApp/src/App.js"],"names":["React","Component","Modal","Box","Container","Typography","Form","NFTCard","style","position","top","left","transform","width","bgcolor","border","boxShadow","p","App","constructor","props","handleResponse","response","rspv","JSON","parse","console","log","setState","isSuccessful","modalOpen","state","renderResponse","map","elm","my","mt","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Modal                from '@mui/material/Modal';\nimport Box                  from '@mui/material/Box';\nimport Container            from '@mui/material/Container';\nimport Typography           from '@mui/material/Typography';\nimport Form                 from './Form';\nimport NFTCard              from './Card';\n\n\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 400,\n  bgcolor: '#42a9f3',\n  border: '2px solid #000',\n  boxShadow: 24,\n  p: 4,\n};\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state={\n      response:      {},\n      isSuccessful:  null,\n      modalOpen:     false,\n    }\n  }\n  \n  handleResponse = (response) =>{\n    const rspv = JSON.parse(response[\"data\"]);\n    console.log(rspv);\n    if(rspv[\"isSuccessful\"]){\n      this.setState({isSuccessful:  true});\n      this.setState({response:      rspv[\"data\"]});\n    }else{\n      this.setState({isSuccessful:  false});\n      this.setState({response:      rspv[\"error\"]});\n      this.setState({modalOpen:     true});\n    }\n  }\n\n  renderResponse(){\n    if(this.state.isSuccessful == true){\n      return(this.state.response.map(elm => <NFTCard key={elm[\"blockNumber\"]} NFT={elm}  sx={{ my: 10 }} className=\"col-4\" />));\n    }else if(this.state.isSuccessful == false){\n      return(\n        <Modal\n          open={this.state.modalOpen}\n          //not a smart idea but it works for this case, we don't have more functionality so nothing is affected by this\n          onClose={()=>{this.setState({modalOpen : !this.state.modalOpen})}}\n          aria-labelledby=\"modal-modal-title\"\n          aria-describedby=\"modal-modal-description\"\n        >\n        <Box style={style}>\n          <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Something gone wrong\n          </Typography>\n          <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n            {this.state.response[\"message\"]}\n          </Typography>\n        </Box>\n      </Modal>);\n    }\n  }\n\n  render() {\n    return (\n      <Container maxWidth=\"lg\">\n        <Box sx={{ my: 4 }}>\n          <Typography variant=\"h4\" component=\"h1\" style={{\"textAlign\":\"center\"}} gutterBottom>\n            NFT Searcher using WebSockets\n          </Typography>\n        </Box>\n        <Form getResponse={this.handleResponse} />\n        <div className=\"row\">\n          { this.renderResponse() }\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}