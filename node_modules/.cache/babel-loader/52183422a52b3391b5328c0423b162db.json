{"ast":null,"code":"(function () {\n  function r(e, n, t) {\n    function o(i, f) {\n      if (!n[i]) {\n        if (!e[i]) {\n          var c = \"function\" == typeof require && require;\n          if (!f && c) return c(i, !0);\n          if (u) return u(i, !0);\n          var a = new Error(\"Cannot find module '\" + i + \"'\");\n          throw a.code = \"MODULE_NOT_FOUND\", a;\n        }\n\n        var p = n[i] = {\n          exports: {}\n        };\n        e[i][0].call(p.exports, function (r) {\n          var n = e[i][1][r];\n          return o(n || r);\n        }, p, p.exports, r, e, n, t);\n      }\n\n      return n[i].exports;\n    }\n\n    for (var u = \"function\" == typeof require && require, i = 0; i < t.length; i++) o(t[i]);\n\n    return o;\n  }\n\n  return r;\n})()({\n  1: [function (require, module, exports) {\n    // base-x encoding / decoding\n    // Copyright (c) 2018 base-x contributors\n    // Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n    // Distributed under the MIT software license, see the accompanying\n    // file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n    const Buffer = require('safe-buffer').Buffer;\n\n    module.exports = function base(ALPHABET) {\n      if (ALPHABET.length >= 255) throw new TypeError('Alphabet too long');\n      const BASE_MAP = new Uint8Array(256);\n      BASE_MAP.fill(255);\n\n      for (let i = 0; i < ALPHABET.length; i++) {\n        const x = ALPHABET.charAt(i);\n        const xc = x.charCodeAt(0);\n        if (BASE_MAP[xc] !== 255) throw new TypeError(x + ' is ambiguous');\n        BASE_MAP[xc] = i;\n      }\n\n      const BASE = ALPHABET.length;\n      const LEADER = ALPHABET.charAt(0);\n      const FACTOR = Math.log(BASE) / Math.log(256); // log(BASE) / log(256), rounded up\n\n      const iFACTOR = Math.log(256) / Math.log(BASE); // log(256) / log(BASE), rounded up\n\n      function encode(source) {\n        if (!Buffer.isBuffer(source)) throw new TypeError('Expected Buffer');\n        if (source.length === 0) return ''; // Skip & count leading zeroes.\n\n        let zeroes = 0;\n        let length = 0;\n        let pbegin = 0;\n        const pend = source.length;\n\n        while (pbegin !== pend && source[pbegin] === 0) {\n          pbegin++;\n          zeroes++;\n        } // Allocate enough space in big-endian base58 representation.\n\n\n        const size = (pend - pbegin) * iFACTOR + 1 >>> 0;\n        const b58 = new Uint8Array(size); // Process the bytes.\n\n        while (pbegin !== pend) {\n          let carry = source[pbegin]; // Apply \"b58 = b58 * 256 + ch\".\n\n          let i = 0;\n\n          for (let it = size - 1; (carry !== 0 || i < length) && it !== -1; it--, i++) {\n            carry += 256 * b58[it] >>> 0;\n            b58[it] = carry % BASE >>> 0;\n            carry = carry / BASE >>> 0;\n          }\n\n          if (carry !== 0) throw new Error('Non-zero carry');\n          length = i;\n          pbegin++;\n        } // Skip leading zeroes in base58 result.\n\n\n        let it = size - length;\n\n        while (it !== size && b58[it] === 0) {\n          it++;\n        } // Translate the result into a string.\n\n\n        let str = LEADER.repeat(zeroes);\n\n        for (; it < size; ++it) str += ALPHABET.charAt(b58[it]);\n\n        return str;\n      }\n\n      function decodeUnsafe(source) {\n        if (typeof source !== 'string') throw new TypeError('Expected String');\n        if (source.length === 0) return Buffer.alloc(0);\n        let psz = 0; // Skip leading spaces.\n\n        if (source[psz] === ' ') return; // Skip and count leading '1's.\n\n        let zeroes = 0;\n        let length = 0;\n\n        while (source[psz] === LEADER) {\n          zeroes++;\n          psz++;\n        } // Allocate enough space in big-endian base256 representation.\n\n\n        const size = (source.length - psz) * FACTOR + 1 >>> 0; // log(58) / log(256), rounded up.\n\n        const b256 = new Uint8Array(size); // Process the characters.\n\n        while (source[psz]) {\n          // Decode character\n          let carry = BASE_MAP[source.charCodeAt(psz)]; // Invalid character\n\n          if (carry === 255) return;\n          let i = 0;\n\n          for (let it = size - 1; (carry !== 0 || i < length) && it !== -1; it--, i++) {\n            carry += BASE * b256[it] >>> 0;\n            b256[it] = carry % 256 >>> 0;\n            carry = carry / 256 >>> 0;\n          }\n\n          if (carry !== 0) throw new Error('Non-zero carry');\n          length = i;\n          psz++;\n        } // Skip trailing spaces.\n\n\n        if (source[psz] === ' ') return; // Skip leading zeroes in b256.\n\n        let it = size - length;\n\n        while (it !== size && b256[it] === 0) {\n          it++;\n        }\n\n        const vch = Buffer.allocUnsafe(zeroes + (size - it));\n        vch.fill(0x00, 0, zeroes);\n        let j = zeroes;\n\n        while (it !== size) {\n          vch[j++] = b256[it++];\n        }\n\n        return vch;\n      }\n\n      function decode(string) {\n        const buffer = decodeUnsafe(string);\n        if (buffer) return buffer;\n        throw new Error('Non-base' + BASE + ' character');\n      }\n\n      return {\n        encode: encode,\n        decodeUnsafe: decodeUnsafe,\n        decode: decode\n      };\n    };\n  }, {\n    \"safe-buffer\": 3\n  }],\n  2: [function (require, module, exports) {\n    /*\n     A JavaScript implementation of the SHA family of hashes, as\n     defined in FIPS PUB 180-4 and FIPS PUB 202, as well as the corresponding\n     HMAC implementation as defined in FIPS PUB 198a\n     Copyright Brian Turek 2008-2017\n     Distributed under the BSD License\n     See http://caligatio.github.com/jsSHA/ for more information\n     Several functions taken from Paul Johnston\n    */\n    'use strict';\n\n    (function (I) {\n      function w(c, a, d) {\n        var l = 0,\n            b = [],\n            g = 0,\n            f,\n            n,\n            k,\n            e,\n            h,\n            q,\n            y,\n            p,\n            m = !1,\n            t = [],\n            r = [],\n            u,\n            z = !1;\n        d = d || {};\n        f = d.encoding || \"UTF8\";\n        u = d.numRounds || 1;\n        if (u !== parseInt(u, 10) || 1 > u) throw Error(\"numRounds must a integer >= 1\");\n        if (0 === c.lastIndexOf(\"SHA-\", 0)) {\n          if (q = function (b, a) {\n            return A(b, a, c);\n          }, y = function (b, a, l, f) {\n            var g, e;\n            if (\"SHA-224\" === c || \"SHA-256\" === c) g = (a + 65 >>> 9 << 4) + 15, e = 16;else throw Error(\"Unexpected error in SHA-2 implementation\");\n\n            for (; b.length <= g;) b.push(0);\n\n            b[a >>> 5] |= 128 << 24 - a % 32;\n            a = a + l;\n            b[g] = a & 4294967295;\n            b[g - 1] = a / 4294967296 | 0;\n            l = b.length;\n\n            for (a = 0; a < l; a += e) f = A(b.slice(a, a + e), f, c);\n\n            if (\"SHA-224\" === c) b = [f[0], f[1], f[2], f[3], f[4], f[5], f[6]];else if (\"SHA-256\" === c) b = f;else throw Error(\"Unexpected error in SHA-2 implementation\");\n            return b;\n          }, p = function (b) {\n            return b.slice();\n          }, \"SHA-224\" === c) h = 512, e = 224;else if (\"SHA-256\" === c) h = 512, e = 256;else throw Error(\"Chosen SHA variant is not supported\");\n        } else throw Error(\"Chosen SHA variant is not supported\");\n        k = B(a, f);\n        n = x(c);\n\n        this.setHMACKey = function (b, a, g) {\n          var e;\n          if (!0 === m) throw Error(\"HMAC key already set\");\n          if (!0 === z) throw Error(\"Cannot set HMAC key after calling update\");\n          f = (g || {}).encoding || \"UTF8\";\n          a = B(a, f)(b);\n          b = a.binLen;\n          a = a.value;\n          e = h >>> 3;\n          g = e / 4 - 1;\n\n          if (e < b / 8) {\n            for (a = y(a, b, 0, x(c)); a.length <= g;) a.push(0);\n\n            a[g] &= 4294967040;\n          } else if (e > b / 8) {\n            for (; a.length <= g;) a.push(0);\n\n            a[g] &= 4294967040;\n          }\n\n          for (b = 0; b <= g; b += 1) t[b] = a[b] ^ 909522486, r[b] = a[b] ^ 1549556828;\n\n          n = q(t, n);\n          l = h;\n          m = !0;\n        };\n\n        this.update = function (a) {\n          var c,\n              f,\n              e,\n              d = 0,\n              p = h >>> 5;\n          c = k(a, b, g);\n          a = c.binLen;\n          f = c.value;\n          c = a >>> 5;\n\n          for (e = 0; e < c; e += p) d + h <= a && (n = q(f.slice(e, e + p), n), d += h);\n\n          l += d;\n          b = f.slice(d >>> 5);\n          g = a % h;\n          z = !0;\n        };\n\n        this.getHash = function (a, f) {\n          var d, h, k, q;\n          if (!0 === m) throw Error(\"Cannot call getHash after setting HMAC key\");\n          k = C(f);\n\n          switch (a) {\n            case \"HEX\":\n              d = function (a) {\n                return D(a, e, k);\n              };\n\n              break;\n\n            case \"B64\":\n              d = function (a) {\n                return E(a, e, k);\n              };\n\n              break;\n\n            case \"BYTES\":\n              d = function (a) {\n                return F(a, e);\n              };\n\n              break;\n\n            case \"ARRAYBUFFER\":\n              try {\n                h = new ArrayBuffer(0);\n              } catch (v) {\n                throw Error(\"ARRAYBUFFER not supported by this environment\");\n              }\n\n              d = function (a) {\n                return G(a, e);\n              };\n\n              break;\n\n            default:\n              throw Error(\"format must be HEX, B64, BYTES, or ARRAYBUFFER\");\n          }\n\n          q = y(b.slice(), g, l, p(n));\n\n          for (h = 1; h < u; h += 1) q = y(q, e, 0, x(c));\n\n          return d(q);\n        };\n\n        this.getHMAC = function (a, f) {\n          var d, k, t, u;\n          if (!1 === m) throw Error(\"Cannot call getHMAC without first setting HMAC key\");\n          t = C(f);\n\n          switch (a) {\n            case \"HEX\":\n              d = function (a) {\n                return D(a, e, t);\n              };\n\n              break;\n\n            case \"B64\":\n              d = function (a) {\n                return E(a, e, t);\n              };\n\n              break;\n\n            case \"BYTES\":\n              d = function (a) {\n                return F(a, e);\n              };\n\n              break;\n\n            case \"ARRAYBUFFER\":\n              try {\n                d = new ArrayBuffer(0);\n              } catch (v) {\n                throw Error(\"ARRAYBUFFER not supported by this environment\");\n              }\n\n              d = function (a) {\n                return G(a, e);\n              };\n\n              break;\n\n            default:\n              throw Error(\"outputFormat must be HEX, B64, BYTES, or ARRAYBUFFER\");\n          }\n\n          k = y(b.slice(), g, l, p(n));\n          u = q(r, x(c));\n          u = y(k, e, h, u);\n          return d(u);\n        };\n      }\n\n      function m() {}\n\n      function D(c, a, d) {\n        var l = \"\";\n        a /= 8;\n        var b, g;\n\n        for (b = 0; b < a; b += 1) g = c[b >>> 2] >>> 8 * (3 + b % 4 * -1), l += \"0123456789abcdef\".charAt(g >>> 4 & 15) + \"0123456789abcdef\".charAt(g & 15);\n\n        return d.outputUpper ? l.toUpperCase() : l;\n      }\n\n      function E(c, a, d) {\n        var l = \"\",\n            b = a / 8,\n            g,\n            f,\n            n;\n\n        for (g = 0; g < b; g += 3) for (f = g + 1 < b ? c[g + 1 >>> 2] : 0, n = g + 2 < b ? c[g + 2 >>> 2] : 0, n = (c[g >>> 2] >>> 8 * (3 + g % 4 * -1) & 255) << 16 | (f >>> 8 * (3 + (g + 1) % 4 * -1) & 255) << 8 | n >>> 8 * (3 + (g + 2) % 4 * -1) & 255, f = 0; 4 > f; f += 1) 8 * g + 6 * f <= a ? l += \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\".charAt(n >>> 6 * (3 - f) & 63) : l += d.b64Pad;\n\n        return l;\n      }\n\n      function F(c, a) {\n        var d = \"\",\n            l = a / 8,\n            b,\n            g;\n\n        for (b = 0; b < l; b += 1) g = c[b >>> 2] >>> 8 * (3 + b % 4 * -1) & 255, d += String.fromCharCode(g);\n\n        return d;\n      }\n\n      function G(c, a) {\n        var d = a / 8,\n            l,\n            b = new ArrayBuffer(d),\n            g;\n        g = new Uint8Array(b);\n\n        for (l = 0; l < d; l += 1) g[l] = c[l >>> 2] >>> 8 * (3 + l % 4 * -1) & 255;\n\n        return b;\n      }\n\n      function C(c) {\n        var a = {\n          outputUpper: !1,\n          b64Pad: \"=\",\n          shakeLen: -1\n        };\n        c = c || {};\n        a.outputUpper = c.outputUpper || !1;\n        !0 === c.hasOwnProperty(\"b64Pad\") && (a.b64Pad = c.b64Pad);\n        if (\"boolean\" !== typeof a.outputUpper) throw Error(\"Invalid outputUpper formatting option\");\n        if (\"string\" !== typeof a.b64Pad) throw Error(\"Invalid b64Pad formatting option\");\n        return a;\n      }\n\n      function B(c, a) {\n        var d;\n\n        switch (a) {\n          case \"UTF8\":\n          case \"UTF16BE\":\n          case \"UTF16LE\":\n            break;\n\n          default:\n            throw Error(\"encoding must be UTF8, UTF16BE, or UTF16LE\");\n        }\n\n        switch (c) {\n          case \"HEX\":\n            d = function (a, b, c) {\n              var f = a.length,\n                  d,\n                  k,\n                  e,\n                  h,\n                  q;\n              if (0 !== f % 2) throw Error(\"String of HEX type must be in byte increments\");\n              b = b || [0];\n              c = c || 0;\n              q = c >>> 3;\n\n              for (d = 0; d < f; d += 2) {\n                k = parseInt(a.substr(d, 2), 16);\n                if (isNaN(k)) throw Error(\"String of HEX type contains invalid characters\");\n                h = (d >>> 1) + q;\n\n                for (e = h >>> 2; b.length <= e;) b.push(0);\n\n                b[e] |= k << 8 * (3 + h % 4 * -1);\n              }\n\n              return {\n                value: b,\n                binLen: 4 * f + c\n              };\n            };\n\n            break;\n\n          case \"TEXT\":\n            d = function (c, b, d) {\n              var f,\n                  n,\n                  k = 0,\n                  e,\n                  h,\n                  q,\n                  m,\n                  p,\n                  r;\n              b = b || [0];\n              d = d || 0;\n              q = d >>> 3;\n              if (\"UTF8\" === a) for (r = 3, e = 0; e < c.length; e += 1) for (f = c.charCodeAt(e), n = [], 128 > f ? n.push(f) : 2048 > f ? (n.push(192 | f >>> 6), n.push(128 | f & 63)) : 55296 > f || 57344 <= f ? n.push(224 | f >>> 12, 128 | f >>> 6 & 63, 128 | f & 63) : (e += 1, f = 65536 + ((f & 1023) << 10 | c.charCodeAt(e) & 1023), n.push(240 | f >>> 18, 128 | f >>> 12 & 63, 128 | f >>> 6 & 63, 128 | f & 63)), h = 0; h < n.length; h += 1) {\n                p = k + q;\n\n                for (m = p >>> 2; b.length <= m;) b.push(0);\n\n                b[m] |= n[h] << 8 * (r + p % 4 * -1);\n                k += 1;\n              } else if (\"UTF16BE\" === a || \"UTF16LE\" === a) for (r = 2, n = \"UTF16LE\" === a && !0 || \"UTF16LE\" !== a && !1, e = 0; e < c.length; e += 1) {\n                f = c.charCodeAt(e);\n                !0 === n && (h = f & 255, f = h << 8 | f >>> 8);\n                p = k + q;\n\n                for (m = p >>> 2; b.length <= m;) b.push(0);\n\n                b[m] |= f << 8 * (r + p % 4 * -1);\n                k += 2;\n              }\n              return {\n                value: b,\n                binLen: 8 * k + d\n              };\n            };\n\n            break;\n\n          case \"B64\":\n            d = function (a, b, c) {\n              var f = 0,\n                  d,\n                  k,\n                  e,\n                  h,\n                  q,\n                  m,\n                  p;\n              if (-1 === a.search(/^[a-zA-Z0-9=+\\/]+$/)) throw Error(\"Invalid character in base-64 string\");\n              k = a.indexOf(\"=\");\n              a = a.replace(/\\=/g, \"\");\n              if (-1 !== k && k < a.length) throw Error(\"Invalid '=' found in base-64 string\");\n              b = b || [0];\n              c = c || 0;\n              m = c >>> 3;\n\n              for (k = 0; k < a.length; k += 4) {\n                q = a.substr(k, 4);\n\n                for (e = h = 0; e < q.length; e += 1) d = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\".indexOf(q[e]), h |= d << 18 - 6 * e;\n\n                for (e = 0; e < q.length - 1; e += 1) {\n                  p = f + m;\n\n                  for (d = p >>> 2; b.length <= d;) b.push(0);\n\n                  b[d] |= (h >>> 16 - 8 * e & 255) << 8 * (3 + p % 4 * -1);\n                  f += 1;\n                }\n              }\n\n              return {\n                value: b,\n                binLen: 8 * f + c\n              };\n            };\n\n            break;\n\n          case \"BYTES\":\n            d = function (a, b, c) {\n              var d, n, k, e, h;\n              b = b || [0];\n              c = c || 0;\n              k = c >>> 3;\n\n              for (n = 0; n < a.length; n += 1) d = a.charCodeAt(n), h = n + k, e = h >>> 2, b.length <= e && b.push(0), b[e] |= d << 8 * (3 + h % 4 * -1);\n\n              return {\n                value: b,\n                binLen: 8 * a.length + c\n              };\n            };\n\n            break;\n\n          case \"ARRAYBUFFER\":\n            try {\n              d = new ArrayBuffer(0);\n            } catch (l) {\n              throw Error(\"ARRAYBUFFER not supported by this environment\");\n            }\n\n            d = function (a, b, c) {\n              var d, n, k, e, h;\n              b = b || [0];\n              c = c || 0;\n              n = c >>> 3;\n              h = new Uint8Array(a);\n\n              for (d = 0; d < a.byteLength; d += 1) e = d + n, k = e >>> 2, b.length <= k && b.push(0), b[k] |= h[d] << 8 * (3 + e % 4 * -1);\n\n              return {\n                value: b,\n                binLen: 8 * a.byteLength + c\n              };\n            };\n\n            break;\n\n          default:\n            throw Error(\"format must be HEX, TEXT, B64, BYTES, or ARRAYBUFFER\");\n        }\n\n        return d;\n      }\n\n      function r(c, a) {\n        return c >>> a | c << 32 - a;\n      }\n\n      function J(c, a, d) {\n        return c & a ^ ~c & d;\n      }\n\n      function K(c, a, d) {\n        return c & a ^ c & d ^ a & d;\n      }\n\n      function L(c) {\n        return r(c, 2) ^ r(c, 13) ^ r(c, 22);\n      }\n\n      function M(c) {\n        return r(c, 6) ^ r(c, 11) ^ r(c, 25);\n      }\n\n      function N(c) {\n        return r(c, 7) ^ r(c, 18) ^ c >>> 3;\n      }\n\n      function O(c) {\n        return r(c, 17) ^ r(c, 19) ^ c >>> 10;\n      }\n\n      function P(c, a) {\n        var d = (c & 65535) + (a & 65535);\n        return ((c >>> 16) + (a >>> 16) + (d >>> 16) & 65535) << 16 | d & 65535;\n      }\n\n      function Q(c, a, d, l) {\n        var b = (c & 65535) + (a & 65535) + (d & 65535) + (l & 65535);\n        return ((c >>> 16) + (a >>> 16) + (d >>> 16) + (l >>> 16) + (b >>> 16) & 65535) << 16 | b & 65535;\n      }\n\n      function R(c, a, d, l, b) {\n        var g = (c & 65535) + (a & 65535) + (d & 65535) + (l & 65535) + (b & 65535);\n        return ((c >>> 16) + (a >>> 16) + (d >>> 16) + (l >>> 16) + (b >>> 16) + (g >>> 16) & 65535) << 16 | g & 65535;\n      }\n\n      function x(c) {\n        var a = [],\n            d;\n        if (0 === c.lastIndexOf(\"SHA-\", 0)) switch (a = [3238371032, 914150663, 812702999, 4144912697, 4290775857, 1750603025, 1694076839, 3204075428], d = [1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635, 1541459225], c) {\n          case \"SHA-224\":\n            break;\n\n          case \"SHA-256\":\n            a = d;\n            break;\n\n          case \"SHA-384\":\n            a = [new m(), new m(), new m(), new m(), new m(), new m(), new m(), new m()];\n            break;\n\n          case \"SHA-512\":\n            a = [new m(), new m(), new m(), new m(), new m(), new m(), new m(), new m()];\n            break;\n\n          default:\n            throw Error(\"Unknown SHA variant\");\n        } else throw Error(\"No SHA variants supported\");\n        return a;\n      }\n\n      function A(c, a, d) {\n        var l,\n            b,\n            g,\n            f,\n            n,\n            k,\n            e,\n            h,\n            m,\n            r,\n            p,\n            w,\n            t,\n            x,\n            u,\n            z,\n            A,\n            B,\n            C,\n            D,\n            E,\n            F,\n            v = [],\n            G;\n        if (\"SHA-224\" === d || \"SHA-256\" === d) r = 64, w = 1, F = Number, t = P, x = Q, u = R, z = N, A = O, B = L, C = M, E = K, D = J, G = H;else throw Error(\"Unexpected error in SHA-2 implementation\");\n        d = a[0];\n        l = a[1];\n        b = a[2];\n        g = a[3];\n        f = a[4];\n        n = a[5];\n        k = a[6];\n        e = a[7];\n\n        for (p = 0; p < r; p += 1) 16 > p ? (m = p * w, h = c.length <= m ? 0 : c[m], m = c.length <= m + 1 ? 0 : c[m + 1], v[p] = new F(h, m)) : v[p] = x(A(v[p - 2]), v[p - 7], z(v[p - 15]), v[p - 16]), h = u(e, C(f), D(f, n, k), G[p], v[p]), m = t(B(d), E(d, l, b)), e = k, k = n, n = f, f = t(g, h), g = b, b = l, l = d, d = t(h, m);\n\n        a[0] = t(d, a[0]);\n        a[1] = t(l, a[1]);\n        a[2] = t(b, a[2]);\n        a[3] = t(g, a[3]);\n        a[4] = t(f, a[4]);\n        a[5] = t(n, a[5]);\n        a[6] = t(k, a[6]);\n        a[7] = t(e, a[7]);\n        return a;\n      }\n\n      var H;\n      H = [1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298];\n      \"function\" === typeof define && define.amd ? define(function () {\n        return w;\n      }) : \"undefined\" !== typeof exports ? (\"undefined\" !== typeof module && module.exports && (module.exports = w), exports = w) : I.jsSHA = w;\n    })(this);\n  }, {}],\n  3: [function (require, module, exports) {\n    var buffer = require('buffer');\n\n    var Buffer = buffer.Buffer; // alternative to using Object.keys for old browsers\n\n    function copyProps(src, dst) {\n      for (var key in src) {\n        dst[key] = src[key];\n      }\n    }\n\n    if (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n      module.exports = buffer;\n    } else {\n      // Copy properties from require('buffer')\n      copyProps(buffer, exports);\n      exports.Buffer = SafeBuffer;\n    }\n\n    function SafeBuffer(arg, encodingOrOffset, length) {\n      return Buffer(arg, encodingOrOffset, length);\n    } // Copy static methods from Buffer\n\n\n    copyProps(Buffer, SafeBuffer);\n\n    SafeBuffer.from = function (arg, encodingOrOffset, length) {\n      if (typeof arg === 'number') {\n        throw new TypeError('Argument must not be a number');\n      }\n\n      return Buffer(arg, encodingOrOffset, length);\n    };\n\n    SafeBuffer.alloc = function (size, fill, encoding) {\n      if (typeof size !== 'number') {\n        throw new TypeError('Argument must be a number');\n      }\n\n      var buf = Buffer(size);\n\n      if (fill !== undefined) {\n        if (typeof encoding === 'string') {\n          buf.fill(fill, encoding);\n        } else {\n          buf.fill(fill);\n        }\n      } else {\n        buf.fill(0);\n      }\n\n      return buf;\n    };\n\n    SafeBuffer.allocUnsafe = function (size) {\n      if (typeof size !== 'number') {\n        throw new TypeError('Argument must be a number');\n      }\n\n      return Buffer(size);\n    };\n\n    SafeBuffer.allocUnsafeSlow = function (size) {\n      if (typeof size !== 'number') {\n        throw new TypeError('Argument must be a number');\n      }\n\n      return buffer.SlowBuffer(size);\n    };\n  }, {\n    \"buffer\": 22\n  }],\n  4: [function (require, module, exports) {\n    var base58 = require('./crypto/base58');\n\n    var segwit = require('./crypto/segwit_addr');\n\n    var cryptoUtils = require('./crypto/utils');\n\n    var DEFAULT_NETWORK_TYPE = 'prod';\n\n    function getDecoded(address) {\n      try {\n        return base58.decode(address);\n      } catch (e) {\n        // if decoding fails, assume invalid address\n        return null;\n      }\n    }\n\n    function getChecksum(hashFunction, payload) {\n      // Each currency may implement different hashing algorithm\n      switch (hashFunction) {\n        case 'blake256':\n          return cryptoUtils.blake256Checksum(payload);\n          break;\n\n        case 'sha256':\n        default:\n          return cryptoUtils.sha256Checksum(payload);\n      }\n    }\n\n    function getAddressType(address, currency) {\n      currency = currency || {}; // should be 25 bytes per btc address spec and 26 decred\n\n      var expectedLength = currency.expectedLength || 25;\n      var hashFunction = currency.hashFunction || 'sha256';\n      var decoded = getDecoded(address);\n\n      if (decoded) {\n        var length = decoded.length;\n\n        if (length !== expectedLength) {\n          return null;\n        }\n\n        var checksum = cryptoUtils.toHex(decoded.slice(length - 4, length)),\n            body = cryptoUtils.toHex(decoded.slice(0, length - 4)),\n            goodChecksum = getChecksum(hashFunction, body);\n        return checksum === goodChecksum ? cryptoUtils.toHex(decoded.slice(0, expectedLength - 24)) : null;\n      }\n\n      return null;\n    }\n\n    function isValidP2PKHandP2SHAddress(address, currency, networkType) {\n      networkType = networkType || DEFAULT_NETWORK_TYPE;\n      var correctAddressTypes;\n      var addressType = getAddressType(address, currency);\n\n      if (addressType) {\n        if (networkType === 'prod' || networkType === 'testnet') {\n          correctAddressTypes = currency.addressTypes[networkType];\n        } else {\n          correctAddressTypes = currency.addressTypes.prod.concat(currency.addressTypes.testnet);\n        }\n\n        return correctAddressTypes.indexOf(addressType) >= 0;\n      }\n\n      return false;\n    }\n\n    module.exports = {\n      isValidAddress: function (address, currency, networkType) {\n        return isValidP2PKHandP2SHAddress(address, currency, networkType) || segwit.isValidAddress(address, currency.segwitHrp);\n      }\n    };\n  }, {\n    \"./crypto/base58\": 5,\n    \"./crypto/segwit_addr\": 11,\n    \"./crypto/utils\": 13\n  }],\n  5: [function (require, module, exports) {\n    // Base58 encoding/decoding\n    // Originally written by Mike Hearn for BitcoinJ\n    // Copyright (c) 2011 Google Inc\n    // Ported to JavaScript by Stefan Thomas\n    // Merged Buffer refactorings from base58-native by Stephen Pair\n    // Copyright (c) 2013 BitPay Inc\n    var ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';\n    var ALPHABET_MAP = {};\n\n    for (var i = 0; i < ALPHABET.length; ++i) {\n      ALPHABET_MAP[ALPHABET.charAt(i)] = i;\n    }\n\n    var BASE = ALPHABET.length;\n    module.exports = {\n      decode: function (string) {\n        if (string.length === 0) return [];\n        var i,\n            j,\n            bytes = [0];\n\n        for (i = 0; i < string.length; ++i) {\n          var c = string[i];\n          if (!(c in ALPHABET_MAP)) throw new Error('Non-base58 character');\n\n          for (j = 0; j < bytes.length; ++j) bytes[j] *= BASE;\n\n          bytes[0] += ALPHABET_MAP[c];\n          var carry = 0;\n\n          for (j = 0; j < bytes.length; ++j) {\n            bytes[j] += carry;\n            carry = bytes[j] >> 8;\n            bytes[j] &= 0xff;\n          }\n\n          while (carry) {\n            bytes.push(carry & 0xff);\n            carry >>= 8;\n          }\n        } // deal with leading zeros\n\n\n        for (i = 0; string[i] === '1' && i < string.length - 1; ++i) {\n          bytes.push(0);\n        }\n\n        return bytes.reverse();\n      }\n    };\n  }, {}],\n  6: [function (require, module, exports) {\n    // Copyright (c) 2017 Pieter Wuille\n    //\n    // Permission is hereby granted, free of charge, to any person obtaining a copy\n    // of this software and associated documentation files (the \"Software\"), to deal\n    // in the Software without restriction, including without limitation the rights\n    // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n    // copies of the Software, and to permit persons to whom the Software is\n    // furnished to do so, subject to the following conditions:\n    //\n    // The above copyright notice and this permission notice shall be included in\n    // all copies or substantial portions of the Software.\n    //\n    // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n    // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n    // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n    // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n    // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n    // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n    // THE SOFTWARE.\n    var CHARSET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l';\n    var GENERATOR = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];\n    module.exports = {\n      decode: decode,\n      encode: encode\n    };\n\n    function polymod(values) {\n      var chk = 1;\n\n      for (var p = 0; p < values.length; ++p) {\n        var top = chk >> 25;\n        chk = (chk & 0x1ffffff) << 5 ^ values[p];\n\n        for (var i = 0; i < 5; ++i) {\n          if (top >> i & 1) {\n            chk ^= GENERATOR[i];\n          }\n        }\n      }\n\n      return chk;\n    }\n\n    function hrpExpand(hrp) {\n      var ret = [];\n      var p;\n\n      for (p = 0; p < hrp.length; ++p) {\n        ret.push(hrp.charCodeAt(p) >> 5);\n      }\n\n      ret.push(0);\n\n      for (p = 0; p < hrp.length; ++p) {\n        ret.push(hrp.charCodeAt(p) & 31);\n      }\n\n      return ret;\n    }\n\n    function verifyChecksum(hrp, data) {\n      return polymod(hrpExpand(hrp).concat(data)) === 1;\n    }\n\n    function createChecksum(hrp, data) {\n      var values = hrpExpand(hrp).concat(data).concat([0, 0, 0, 0, 0, 0]);\n      var mod = polymod(values) ^ 1;\n      var ret = [];\n\n      for (var p = 0; p < 6; ++p) {\n        ret.push(mod >> 5 * (5 - p) & 31);\n      }\n\n      return ret;\n    }\n\n    function encode(hrp, data) {\n      var combined = data.concat(createChecksum(hrp, data));\n      var ret = hrp + '1';\n\n      for (var p = 0; p < combined.length; ++p) {\n        ret += CHARSET.charAt(combined[p]);\n      }\n\n      return ret;\n    }\n\n    function decode(bechString) {\n      var p;\n      var has_lower = false;\n      var has_upper = false;\n\n      for (p = 0; p < bechString.length; ++p) {\n        if (bechString.charCodeAt(p) < 33 || bechString.charCodeAt(p) > 126) {\n          return null;\n        }\n\n        if (bechString.charCodeAt(p) >= 97 && bechString.charCodeAt(p) <= 122) {\n          has_lower = true;\n        }\n\n        if (bechString.charCodeAt(p) >= 65 && bechString.charCodeAt(p) <= 90) {\n          has_upper = true;\n        }\n      }\n\n      if (has_lower && has_upper) {\n        return null;\n      }\n\n      bechString = bechString.toLowerCase();\n      var pos = bechString.lastIndexOf('1');\n\n      if (pos < 1 || pos + 7 > bechString.length || bechString.length > 90) {\n        return null;\n      }\n\n      var hrp = bechString.substring(0, pos);\n      var data = [];\n\n      for (p = pos + 1; p < bechString.length; ++p) {\n        var d = CHARSET.indexOf(bechString.charAt(p));\n\n        if (d === -1) {\n          return null;\n        }\n\n        data.push(d);\n      }\n\n      if (!verifyChecksum(hrp, data)) {\n        return null;\n      }\n\n      return {\n        hrp: hrp,\n        data: data.slice(0, data.length - 6)\n      };\n    }\n  }, {}],\n  7: [function (require, module, exports) {\n    /*\n      JavaScript BigInteger library version 0.9.1\n      http://silentmatt.com/biginteger/\n      Copyright (c) 2009 Matthew Crumley <email@matthewcrumley.com>\n      Copyright (c) 2010,2011 by John Tobey <John.Tobey@gmail.com>\n      Licensed under the MIT license.\n      Support for arbitrary internal representation base was added by\n      Vitaly Magerya.\n    */\n\n    /*\n      File: biginteger.js\n      Exports:\n        <BigInteger>\n    */\n    (function (exports) {\n      \"use strict\";\n      /*\n          Class: BigInteger\n          An arbitrarily-large integer.\n          <BigInteger> objects should be considered immutable. None of the \"built-in\"\n          methods modify *this* or their arguments. All properties should be\n          considered private.\n          All the methods of <BigInteger> instances can be called \"statically\". The\n          static versions are convenient if you don't already have a <BigInteger>\n          object.\n          As an example, these calls are equivalent.\n          > BigInteger(4).multiply(5); // returns BigInteger(20);\n          > BigInteger.multiply(4, 5); // returns BigInteger(20);\n          > var a = 42;\n          > var a = BigInteger.toJSValue(\"0b101010\"); // Not completely useless...\n      */\n\n      var CONSTRUCT = {}; // Unique token to call \"private\" version of constructor\n\n      /*\n          Constructor: BigInteger()\n          Convert a value to a <BigInteger>.\n          Although <BigInteger()> is the constructor for <BigInteger> objects, it is\n          best not to call it as a constructor. If *n* is a <BigInteger> object, it is\n          simply returned as-is. Otherwise, <BigInteger()> is equivalent to <parse>\n          without a radix argument.\n          > var n0 = BigInteger();      // Same as <BigInteger.ZERO>\n          > var n1 = BigInteger(\"123\"); // Create a new <BigInteger> with value 123\n          > var n2 = BigInteger(123);   // Create a new <BigInteger> with value 123\n          > var n3 = BigInteger(n2);    // Return n2, unchanged\n          The constructor form only takes an array and a sign. *n* must be an\n          array of numbers in little-endian order, where each digit is between 0\n          and BigInteger.base.  The second parameter sets the sign: -1 for\n          negative, +1 for positive, or 0 for zero. The array is *not copied and\n          may be modified*. If the array contains only zeros, the sign parameter\n          is ignored and is forced to zero.\n          > new BigInteger([5], -1): create a new BigInteger with value -5\n          Parameters:\n              n - Value to convert to a <BigInteger>.\n          Returns:\n              A <BigInteger> value.\n          See Also:\n              <parse>, <BigInteger>\n      */\n\n      function BigInteger(n, s, token) {\n        if (token !== CONSTRUCT) {\n          if (n instanceof BigInteger) {\n            return n;\n          } else if (typeof n === \"undefined\") {\n            return ZERO;\n          }\n\n          return BigInteger.parse(n);\n        }\n\n        n = n || []; // Provide the nullary constructor for subclasses.\n\n        while (n.length && !n[n.length - 1]) {\n          --n.length;\n        }\n\n        this._d = n;\n        this._s = n.length ? s || 1 : 0;\n      }\n\n      BigInteger._construct = function (n, s) {\n        return new BigInteger(n, s, CONSTRUCT);\n      }; // Base-10 speedup hacks in parse, toString, exp10 and log functions\n      // require base to be a power of 10. 10^7 is the largest such power\n      // that won't cause a precision loss when digits are multiplied.\n\n\n      var BigInteger_base = 10000000;\n      var BigInteger_base_log10 = 7;\n      BigInteger.base = BigInteger_base;\n      BigInteger.base_log10 = BigInteger_base_log10;\n      var ZERO = new BigInteger([], 0, CONSTRUCT); // Constant: ZERO\n      // <BigInteger> 0.\n\n      BigInteger.ZERO = ZERO;\n      var ONE = new BigInteger([1], 1, CONSTRUCT); // Constant: ONE\n      // <BigInteger> 1.\n\n      BigInteger.ONE = ONE;\n      var M_ONE = new BigInteger(ONE._d, -1, CONSTRUCT); // Constant: M_ONE\n      // <BigInteger> -1.\n\n      BigInteger.M_ONE = M_ONE; // Constant: _0\n      // Shortcut for <ZERO>.\n\n      BigInteger._0 = ZERO; // Constant: _1\n      // Shortcut for <ONE>.\n\n      BigInteger._1 = ONE;\n      /*\n          Constant: small\n          Array of <BigIntegers> from 0 to 36.\n          These are used internally for parsing, but useful when you need a \"small\"\n          <BigInteger>.\n          See Also:\n              <ZERO>, <ONE>, <_0>, <_1>\n      */\n\n      BigInteger.small = [ZERO, ONE,\n      /* Assuming BigInteger_base > 36 */\n      new BigInteger([2], 1, CONSTRUCT), new BigInteger([3], 1, CONSTRUCT), new BigInteger([4], 1, CONSTRUCT), new BigInteger([5], 1, CONSTRUCT), new BigInteger([6], 1, CONSTRUCT), new BigInteger([7], 1, CONSTRUCT), new BigInteger([8], 1, CONSTRUCT), new BigInteger([9], 1, CONSTRUCT), new BigInteger([10], 1, CONSTRUCT), new BigInteger([11], 1, CONSTRUCT), new BigInteger([12], 1, CONSTRUCT), new BigInteger([13], 1, CONSTRUCT), new BigInteger([14], 1, CONSTRUCT), new BigInteger([15], 1, CONSTRUCT), new BigInteger([16], 1, CONSTRUCT), new BigInteger([17], 1, CONSTRUCT), new BigInteger([18], 1, CONSTRUCT), new BigInteger([19], 1, CONSTRUCT), new BigInteger([20], 1, CONSTRUCT), new BigInteger([21], 1, CONSTRUCT), new BigInteger([22], 1, CONSTRUCT), new BigInteger([23], 1, CONSTRUCT), new BigInteger([24], 1, CONSTRUCT), new BigInteger([25], 1, CONSTRUCT), new BigInteger([26], 1, CONSTRUCT), new BigInteger([27], 1, CONSTRUCT), new BigInteger([28], 1, CONSTRUCT), new BigInteger([29], 1, CONSTRUCT), new BigInteger([30], 1, CONSTRUCT), new BigInteger([31], 1, CONSTRUCT), new BigInteger([32], 1, CONSTRUCT), new BigInteger([33], 1, CONSTRUCT), new BigInteger([34], 1, CONSTRUCT), new BigInteger([35], 1, CONSTRUCT), new BigInteger([36], 1, CONSTRUCT)]; // Used for parsing/radix conversion\n\n      BigInteger.digits = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\".split(\"\");\n      /*\n          Method: toString\n          Convert a <BigInteger> to a string.\n          When *base* is greater than 10, letters are upper case.\n          Parameters:\n              base - Optional base to represent the number in (default is base 10).\n                     Must be between 2 and 36 inclusive, or an Error will be thrown.\n          Returns:\n              The string representation of the <BigInteger>.\n      */\n\n      BigInteger.prototype.toString = function (base) {\n        base = +base || 10;\n\n        if (base < 2 || base > 36) {\n          throw new Error(\"illegal radix \" + base + \".\");\n        }\n\n        if (this._s === 0) {\n          return \"0\";\n        }\n\n        if (base === 10) {\n          var str = this._s < 0 ? \"-\" : \"\";\n          str += this._d[this._d.length - 1].toString();\n\n          for (var i = this._d.length - 2; i >= 0; i--) {\n            var group = this._d[i].toString();\n\n            while (group.length < BigInteger_base_log10) group = '0' + group;\n\n            str += group;\n          }\n\n          return str;\n        } else {\n          var numerals = BigInteger.digits;\n          base = BigInteger.small[base];\n          var sign = this._s;\n          var n = this.abs();\n          var digits = [];\n          var digit;\n\n          while (n._s !== 0) {\n            var divmod = n.divRem(base);\n            n = divmod[0];\n            digit = divmod[1]; // TODO: This could be changed to unshift instead of reversing at the end.\n            // Benchmark both to compare speeds.\n\n            digits.push(numerals[digit.valueOf()]);\n          }\n\n          return (sign < 0 ? \"-\" : \"\") + digits.reverse().join(\"\");\n        }\n      }; // Verify strings for parsing\n\n\n      BigInteger.radixRegex = [/^$/, /^$/, /^[01]*$/, /^[012]*$/, /^[0-3]*$/, /^[0-4]*$/, /^[0-5]*$/, /^[0-6]*$/, /^[0-7]*$/, /^[0-8]*$/, /^[0-9]*$/, /^[0-9aA]*$/, /^[0-9abAB]*$/, /^[0-9abcABC]*$/, /^[0-9a-dA-D]*$/, /^[0-9a-eA-E]*$/, /^[0-9a-fA-F]*$/, /^[0-9a-gA-G]*$/, /^[0-9a-hA-H]*$/, /^[0-9a-iA-I]*$/, /^[0-9a-jA-J]*$/, /^[0-9a-kA-K]*$/, /^[0-9a-lA-L]*$/, /^[0-9a-mA-M]*$/, /^[0-9a-nA-N]*$/, /^[0-9a-oA-O]*$/, /^[0-9a-pA-P]*$/, /^[0-9a-qA-Q]*$/, /^[0-9a-rA-R]*$/, /^[0-9a-sA-S]*$/, /^[0-9a-tA-T]*$/, /^[0-9a-uA-U]*$/, /^[0-9a-vA-V]*$/, /^[0-9a-wA-W]*$/, /^[0-9a-xA-X]*$/, /^[0-9a-yA-Y]*$/, /^[0-9a-zA-Z]*$/];\n      /*\n          Function: parse\n          Parse a string into a <BigInteger>.\n          *base* is optional but, if provided, must be from 2 to 36 inclusive. If\n          *base* is not provided, it will be guessed based on the leading characters\n          of *s* as follows:\n          - \"0x\" or \"0X\": *base* = 16\n          - \"0c\" or \"0C\": *base* = 8\n          - \"0b\" or \"0B\": *base* = 2\n          - else: *base* = 10\n          If no base is provided, or *base* is 10, the number can be in exponential\n          form. For example, these are all valid:\n          > BigInteger.parse(\"1e9\");              // Same as \"1000000000\"\n          > BigInteger.parse(\"1.234*10^3\");       // Same as 1234\n          > BigInteger.parse(\"56789 * 10 ** -2\"); // Same as 567\n          If any characters fall outside the range defined by the radix, an exception\n          will be thrown.\n          Parameters:\n              s - The string to parse.\n              base - Optional radix (default is to guess based on *s*).\n          Returns:\n              a <BigInteger> instance.\n      */\n\n      BigInteger.parse = function (s, base) {\n        // Expands a number in exponential form to decimal form.\n        // expandExponential(\"-13.441*10^5\") === \"1344100\";\n        // expandExponential(\"1.12300e-1\") === \"0.112300\";\n        // expandExponential(1000000000000000000000000000000) === \"1000000000000000000000000000000\";\n        function expandExponential(str) {\n          str = str.replace(/\\s*[*xX]\\s*10\\s*(\\^|\\*\\*)\\s*/, \"e\");\n          return str.replace(/^([+\\-])?(\\d+)\\.?(\\d*)[eE]([+\\-]?\\d+)$/, function (x, s, n, f, c) {\n            c = +c;\n            var l = c < 0;\n            var i = n.length + c;\n            x = (l ? n : f).length;\n            c = (c = Math.abs(c)) >= x ? c - x + l : 0;\n            var z = new Array(c + 1).join(\"0\");\n            var r = n + f;\n            return (s || \"\") + (l ? r = z + r : r += z).substr(0, i += l ? z.length : 0) + (i < r.length ? \".\" + r.substr(i) : \"\");\n          });\n        }\n\n        s = s.toString();\n\n        if (typeof base === \"undefined\" || +base === 10) {\n          s = expandExponential(s);\n        }\n\n        var prefixRE;\n\n        if (typeof base === \"undefined\") {\n          prefixRE = '0[xcb]';\n        } else if (base == 16) {\n          prefixRE = '0x';\n        } else if (base == 8) {\n          prefixRE = '0c';\n        } else if (base == 2) {\n          prefixRE = '0b';\n        } else {\n          prefixRE = '';\n        }\n\n        var parts = new RegExp('^([+\\\\-]?)(' + prefixRE + ')?([0-9a-z]*)(?:\\\\.\\\\d*)?$', 'i').exec(s);\n\n        if (parts) {\n          var sign = parts[1] || \"+\";\n          var baseSection = parts[2] || \"\";\n          var digits = parts[3] || \"\";\n\n          if (typeof base === \"undefined\") {\n            // Guess base\n            if (baseSection === \"0x\" || baseSection === \"0X\") {\n              // Hex\n              base = 16;\n            } else if (baseSection === \"0c\" || baseSection === \"0C\") {\n              // Octal\n              base = 8;\n            } else if (baseSection === \"0b\" || baseSection === \"0B\") {\n              // Binary\n              base = 2;\n            } else {\n              base = 10;\n            }\n          } else if (base < 2 || base > 36) {\n            throw new Error(\"Illegal radix \" + base + \".\");\n          }\n\n          base = +base; // Check for digits outside the range\n\n          if (!BigInteger.radixRegex[base].test(digits)) {\n            throw new Error(\"Bad digit for radix \" + base);\n          } // Strip leading zeros, and convert to array\n\n\n          digits = digits.replace(/^0+/, \"\").split(\"\");\n\n          if (digits.length === 0) {\n            return ZERO;\n          } // Get the sign (we know it's not zero)\n\n\n          sign = sign === \"-\" ? -1 : 1; // Optimize 10\n\n          if (base == 10) {\n            var d = [];\n\n            while (digits.length >= BigInteger_base_log10) {\n              d.push(parseInt(digits.splice(digits.length - BigInteger.base_log10, BigInteger.base_log10).join(''), 10));\n            }\n\n            d.push(parseInt(digits.join(''), 10));\n            return new BigInteger(d, sign, CONSTRUCT);\n          } // Do the conversion\n\n\n          var d = ZERO;\n          base = BigInteger.small[base];\n          var small = BigInteger.small;\n\n          for (var i = 0; i < digits.length; i++) {\n            d = d.multiply(base).add(small[parseInt(digits[i], 36)]);\n          }\n\n          return new BigInteger(d._d, sign, CONSTRUCT);\n        } else {\n          throw new Error(\"Invalid BigInteger format: \" + s);\n        }\n      };\n      /*\n          Function: add\n          Add two <BigIntegers>.\n          Parameters:\n              n - The number to add to *this*. Will be converted to a <BigInteger>.\n          Returns:\n              The numbers added together.\n          See Also:\n              <subtract>, <multiply>, <quotient>, <next>\n      */\n\n\n      BigInteger.prototype.add = function (n) {\n        if (this._s === 0) {\n          return BigInteger(n);\n        }\n\n        n = BigInteger(n);\n\n        if (n._s === 0) {\n          return this;\n        }\n\n        if (this._s !== n._s) {\n          n = n.negate();\n          return this.subtract(n);\n        }\n\n        var a = this._d;\n        var b = n._d;\n        var al = a.length;\n        var bl = b.length;\n        var sum = new Array(Math.max(al, bl) + 1);\n        var size = Math.min(al, bl);\n        var carry = 0;\n        var digit;\n\n        for (var i = 0; i < size; i++) {\n          digit = a[i] + b[i] + carry;\n          sum[i] = digit % BigInteger_base;\n          carry = digit / BigInteger_base | 0;\n        }\n\n        if (bl > al) {\n          a = b;\n          al = bl;\n        }\n\n        for (i = size; carry && i < al; i++) {\n          digit = a[i] + carry;\n          sum[i] = digit % BigInteger_base;\n          carry = digit / BigInteger_base | 0;\n        }\n\n        if (carry) {\n          sum[i] = carry;\n        }\n\n        for (; i < al; i++) {\n          sum[i] = a[i];\n        }\n\n        return new BigInteger(sum, this._s, CONSTRUCT);\n      };\n      /*\n          Function: negate\n          Get the additive inverse of a <BigInteger>.\n          Returns:\n              A <BigInteger> with the same magnatude, but with the opposite sign.\n          See Also:\n              <abs>\n      */\n\n\n      BigInteger.prototype.negate = function () {\n        return new BigInteger(this._d, -this._s | 0, CONSTRUCT);\n      };\n      /*\n          Function: abs\n          Get the absolute value of a <BigInteger>.\n          Returns:\n              A <BigInteger> with the same magnatude, but always positive (or zero).\n          See Also:\n              <negate>\n      */\n\n\n      BigInteger.prototype.abs = function () {\n        return this._s < 0 ? this.negate() : this;\n      };\n      /*\n          Function: subtract\n          Subtract two <BigIntegers>.\n          Parameters:\n              n - The number to subtract from *this*. Will be converted to a <BigInteger>.\n          Returns:\n              The *n* subtracted from *this*.\n          See Also:\n              <add>, <multiply>, <quotient>, <prev>\n      */\n\n\n      BigInteger.prototype.subtract = function (n) {\n        if (this._s === 0) {\n          return BigInteger(n).negate();\n        }\n\n        n = BigInteger(n);\n\n        if (n._s === 0) {\n          return this;\n        }\n\n        if (this._s !== n._s) {\n          n = n.negate();\n          return this.add(n);\n        }\n\n        var m = this; // negative - negative => -|a| - -|b| => -|a| + |b| => |b| - |a|\n\n        if (this._s < 0) {\n          m = new BigInteger(n._d, 1, CONSTRUCT);\n          n = new BigInteger(this._d, 1, CONSTRUCT);\n        } // Both are positive => a - b\n\n\n        var sign = m.compareAbs(n);\n\n        if (sign === 0) {\n          return ZERO;\n        } else if (sign < 0) {\n          // swap m and n\n          var t = n;\n          n = m;\n          m = t;\n        } // a > b\n\n\n        var a = m._d;\n        var b = n._d;\n        var al = a.length;\n        var bl = b.length;\n        var diff = new Array(al); // al >= bl since a > b\n\n        var borrow = 0;\n        var i;\n        var digit;\n\n        for (i = 0; i < bl; i++) {\n          digit = a[i] - borrow - b[i];\n\n          if (digit < 0) {\n            digit += BigInteger_base;\n            borrow = 1;\n          } else {\n            borrow = 0;\n          }\n\n          diff[i] = digit;\n        }\n\n        for (i = bl; i < al; i++) {\n          digit = a[i] - borrow;\n\n          if (digit < 0) {\n            digit += BigInteger_base;\n          } else {\n            diff[i++] = digit;\n            break;\n          }\n\n          diff[i] = digit;\n        }\n\n        for (; i < al; i++) {\n          diff[i] = a[i];\n        }\n\n        return new BigInteger(diff, sign, CONSTRUCT);\n      };\n\n      (function () {\n        function addOne(n, sign) {\n          var a = n._d;\n          var sum = a.slice();\n          var carry = true;\n          var i = 0;\n\n          while (true) {\n            var digit = (a[i] || 0) + 1;\n            sum[i] = digit % BigInteger_base;\n\n            if (digit <= BigInteger_base - 1) {\n              break;\n            }\n\n            ++i;\n          }\n\n          return new BigInteger(sum, sign, CONSTRUCT);\n        }\n\n        function subtractOne(n, sign) {\n          var a = n._d;\n          var sum = a.slice();\n          var borrow = true;\n          var i = 0;\n\n          while (true) {\n            var digit = (a[i] || 0) - 1;\n\n            if (digit < 0) {\n              sum[i] = digit + BigInteger_base;\n            } else {\n              sum[i] = digit;\n              break;\n            }\n\n            ++i;\n          }\n\n          return new BigInteger(sum, sign, CONSTRUCT);\n        }\n        /*\n            Function: next\n            Get the next <BigInteger> (add one).\n            Returns:\n                *this* + 1.\n            See Also:\n                <add>, <prev>\n        */\n\n\n        BigInteger.prototype.next = function () {\n          switch (this._s) {\n            case 0:\n              return ONE;\n\n            case -1:\n              return subtractOne(this, -1);\n            // case 1:\n\n            default:\n              return addOne(this, 1);\n          }\n        };\n        /*\n            Function: prev\n            Get the previous <BigInteger> (subtract one).\n            Returns:\n                *this* - 1.\n            See Also:\n                <next>, <subtract>\n        */\n\n\n        BigInteger.prototype.prev = function () {\n          switch (this._s) {\n            case 0:\n              return M_ONE;\n\n            case -1:\n              return addOne(this, -1);\n            // case 1:\n\n            default:\n              return subtractOne(this, 1);\n          }\n        };\n      })();\n      /*\n          Function: compareAbs\n          Compare the absolute value of two <BigIntegers>.\n          Calling <compareAbs> is faster than calling <abs> twice, then <compare>.\n          Parameters:\n              n - The number to compare to *this*. Will be converted to a <BigInteger>.\n          Returns:\n              -1, 0, or +1 if *|this|* is less than, equal to, or greater than *|n|*.\n          See Also:\n              <compare>, <abs>\n      */\n\n\n      BigInteger.prototype.compareAbs = function (n) {\n        if (this === n) {\n          return 0;\n        }\n\n        if (!(n instanceof BigInteger)) {\n          if (!isFinite(n)) {\n            return isNaN(n) ? n : -1;\n          }\n\n          n = BigInteger(n);\n        }\n\n        if (this._s === 0) {\n          return n._s !== 0 ? -1 : 0;\n        }\n\n        if (n._s === 0) {\n          return 1;\n        }\n\n        var l = this._d.length;\n        var nl = n._d.length;\n\n        if (l < nl) {\n          return -1;\n        } else if (l > nl) {\n          return 1;\n        }\n\n        var a = this._d;\n        var b = n._d;\n\n        for (var i = l - 1; i >= 0; i--) {\n          if (a[i] !== b[i]) {\n            return a[i] < b[i] ? -1 : 1;\n          }\n        }\n\n        return 0;\n      };\n      /*\n          Function: compare\n          Compare two <BigIntegers>.\n          Parameters:\n              n - The number to compare to *this*. Will be converted to a <BigInteger>.\n          Returns:\n              -1, 0, or +1 if *this* is less than, equal to, or greater than *n*.\n          See Also:\n              <compareAbs>, <isPositive>, <isNegative>, <isUnit>\n      */\n\n\n      BigInteger.prototype.compare = function (n) {\n        if (this === n) {\n          return 0;\n        }\n\n        n = BigInteger(n);\n\n        if (this._s === 0) {\n          return -n._s;\n        }\n\n        if (this._s === n._s) {\n          // both positive or both negative\n          var cmp = this.compareAbs(n);\n          return cmp * this._s;\n        } else {\n          return this._s;\n        }\n      };\n      /*\n          Function: isUnit\n          Return true iff *this* is either 1 or -1.\n          Returns:\n              true if *this* compares equal to <BigInteger.ONE> or <BigInteger.M_ONE>.\n          See Also:\n              <isZero>, <isNegative>, <isPositive>, <compareAbs>, <compare>,\n              <BigInteger.ONE>, <BigInteger.M_ONE>\n      */\n\n\n      BigInteger.prototype.isUnit = function () {\n        return this === ONE || this === M_ONE || this._d.length === 1 && this._d[0] === 1;\n      };\n      /*\n          Function: multiply\n          Multiply two <BigIntegers>.\n          Parameters:\n              n - The number to multiply *this* by. Will be converted to a\n              <BigInteger>.\n          Returns:\n              The numbers multiplied together.\n          See Also:\n              <add>, <subtract>, <quotient>, <square>\n      */\n\n\n      BigInteger.prototype.multiply = function (n) {\n        // TODO: Consider adding Karatsuba multiplication for large numbers\n        if (this._s === 0) {\n          return ZERO;\n        }\n\n        n = BigInteger(n);\n\n        if (n._s === 0) {\n          return ZERO;\n        }\n\n        if (this.isUnit()) {\n          if (this._s < 0) {\n            return n.negate();\n          }\n\n          return n;\n        }\n\n        if (n.isUnit()) {\n          if (n._s < 0) {\n            return this.negate();\n          }\n\n          return this;\n        }\n\n        if (this === n) {\n          return this.square();\n        }\n\n        var r = this._d.length >= n._d.length;\n        var a = (r ? this : n)._d; // a will be longer than b\n\n        var b = (r ? n : this)._d;\n        var al = a.length;\n        var bl = b.length;\n        var pl = al + bl;\n        var partial = new Array(pl);\n        var i;\n\n        for (i = 0; i < pl; i++) {\n          partial[i] = 0;\n        }\n\n        for (i = 0; i < bl; i++) {\n          var carry = 0;\n          var bi = b[i];\n          var jlimit = al + i;\n          var digit;\n\n          for (var j = i; j < jlimit; j++) {\n            digit = partial[j] + bi * a[j - i] + carry;\n            carry = digit / BigInteger_base | 0;\n            partial[j] = digit % BigInteger_base | 0;\n          }\n\n          if (carry) {\n            digit = partial[j] + carry;\n            carry = digit / BigInteger_base | 0;\n            partial[j] = digit % BigInteger_base;\n          }\n        }\n\n        return new BigInteger(partial, this._s * n._s, CONSTRUCT);\n      }; // Multiply a BigInteger by a single-digit native number\n      // Assumes that this and n are >= 0\n      // This is not really intended to be used outside the library itself\n\n\n      BigInteger.prototype.multiplySingleDigit = function (n) {\n        if (n === 0 || this._s === 0) {\n          return ZERO;\n        }\n\n        if (n === 1) {\n          return this;\n        }\n\n        var digit;\n\n        if (this._d.length === 1) {\n          digit = this._d[0] * n;\n\n          if (digit >= BigInteger_base) {\n            return new BigInteger([digit % BigInteger_base | 0, digit / BigInteger_base | 0], 1, CONSTRUCT);\n          }\n\n          return new BigInteger([digit], 1, CONSTRUCT);\n        }\n\n        if (n === 2) {\n          return this.add(this);\n        }\n\n        if (this.isUnit()) {\n          return new BigInteger([n], 1, CONSTRUCT);\n        }\n\n        var a = this._d;\n        var al = a.length;\n        var pl = al + 1;\n        var partial = new Array(pl);\n\n        for (var i = 0; i < pl; i++) {\n          partial[i] = 0;\n        }\n\n        var carry = 0;\n\n        for (var j = 0; j < al; j++) {\n          digit = n * a[j] + carry;\n          carry = digit / BigInteger_base | 0;\n          partial[j] = digit % BigInteger_base | 0;\n        }\n\n        if (carry) {\n          partial[j] = carry;\n        }\n\n        return new BigInteger(partial, 1, CONSTRUCT);\n      };\n      /*\n          Function: square\n          Multiply a <BigInteger> by itself.\n          This is slightly faster than regular multiplication, since it removes the\n          duplicated multiplcations.\n          Returns:\n              > this.multiply(this)\n          See Also:\n              <multiply>\n      */\n\n\n      BigInteger.prototype.square = function () {\n        // Normally, squaring a 10-digit number would take 100 multiplications.\n        // Of these 10 are unique diagonals, of the remaining 90 (100-10), 45 are repeated.\n        // This procedure saves (N*(N-1))/2 multiplications, (e.g., 45 of 100 multiplies).\n        // Based on code by Gary Darby, Intellitech Systems Inc., www.DelphiForFun.org\n        if (this._s === 0) {\n          return ZERO;\n        }\n\n        if (this.isUnit()) {\n          return ONE;\n        }\n\n        var digits = this._d;\n        var length = digits.length;\n        var imult1 = new Array(length + length + 1);\n        var product, carry, k;\n        var i; // Calculate diagonal\n\n        for (i = 0; i < length; i++) {\n          k = i * 2;\n          product = digits[i] * digits[i];\n          carry = product / BigInteger_base | 0;\n          imult1[k] = product % BigInteger_base;\n          imult1[k + 1] = carry;\n        } // Calculate repeating part\n\n\n        for (i = 0; i < length; i++) {\n          carry = 0;\n          k = i * 2 + 1;\n\n          for (var j = i + 1; j < length; j++, k++) {\n            product = digits[j] * digits[i] * 2 + imult1[k] + carry;\n            carry = product / BigInteger_base | 0;\n            imult1[k] = product % BigInteger_base;\n          }\n\n          k = length + i;\n          var digit = carry + imult1[k];\n          carry = digit / BigInteger_base | 0;\n          imult1[k] = digit % BigInteger_base;\n          imult1[k + 1] += carry;\n        }\n\n        return new BigInteger(imult1, 1, CONSTRUCT);\n      };\n      /*\n          Function: quotient\n          Divide two <BigIntegers> and truncate towards zero.\n          <quotient> throws an exception if *n* is zero.\n          Parameters:\n              n - The number to divide *this* by. Will be converted to a <BigInteger>.\n          Returns:\n              The *this* / *n*, truncated to an integer.\n          See Also:\n              <add>, <subtract>, <multiply>, <divRem>, <remainder>\n      */\n\n\n      BigInteger.prototype.quotient = function (n) {\n        return this.divRem(n)[0];\n      };\n      /*\n          Function: divide\n          Deprecated synonym for <quotient>.\n      */\n\n\n      BigInteger.prototype.divide = BigInteger.prototype.quotient;\n      /*\n          Function: remainder\n          Calculate the remainder of two <BigIntegers>.\n          <remainder> throws an exception if *n* is zero.\n          Parameters:\n              n - The remainder after *this* is divided *this* by *n*. Will be\n                  converted to a <BigInteger>.\n          Returns:\n              *this* % *n*.\n          See Also:\n              <divRem>, <quotient>\n      */\n\n      BigInteger.prototype.remainder = function (n) {\n        return this.divRem(n)[1];\n      };\n      /*\n          Function: divRem\n          Calculate the integer quotient and remainder of two <BigIntegers>.\n          <divRem> throws an exception if *n* is zero.\n          Parameters:\n              n - The number to divide *this* by. Will be converted to a <BigInteger>.\n          Returns:\n              A two-element array containing the quotient and the remainder.\n              > a.divRem(b)\n              is exactly equivalent to\n              > [a.quotient(b), a.remainder(b)]\n              except it is faster, because they are calculated at the same time.\n          See Also:\n              <quotient>, <remainder>\n      */\n\n\n      BigInteger.prototype.divRem = function (n) {\n        n = BigInteger(n);\n\n        if (n._s === 0) {\n          throw new Error(\"Divide by zero\");\n        }\n\n        if (this._s === 0) {\n          return [ZERO, ZERO];\n        }\n\n        if (n._d.length === 1) {\n          return this.divRemSmall(n._s * n._d[0]);\n        } // Test for easy cases -- |n1| <= |n2|\n\n\n        switch (this.compareAbs(n)) {\n          case 0:\n            // n1 == n2\n            return [this._s === n._s ? ONE : M_ONE, ZERO];\n\n          case -1:\n            // |n1| < |n2|\n            return [ZERO, this];\n        }\n\n        var sign = this._s * n._s;\n        var a = n.abs();\n        var b_digits = this._d;\n        var b_index = b_digits.length;\n        var digits = n._d.length;\n        var quot = [];\n        var guess;\n        var part = new BigInteger([], 0, CONSTRUCT);\n\n        while (b_index) {\n          part._d.unshift(b_digits[--b_index]);\n\n          part = new BigInteger(part._d, 1, CONSTRUCT);\n\n          if (part.compareAbs(n) < 0) {\n            quot.push(0);\n            continue;\n          }\n\n          if (part._s === 0) {\n            guess = 0;\n          } else {\n            var xlen = part._d.length,\n                ylen = a._d.length;\n            var highx = part._d[xlen - 1] * BigInteger_base + part._d[xlen - 2];\n            var highy = a._d[ylen - 1] * BigInteger_base + a._d[ylen - 2];\n\n            if (part._d.length > a._d.length) {\n              // The length of part._d can either match a._d length,\n              // or exceed it by one.\n              highx = (highx + 1) * BigInteger_base;\n            }\n\n            guess = Math.ceil(highx / highy);\n          }\n\n          do {\n            var check = a.multiplySingleDigit(guess);\n\n            if (check.compareAbs(part) <= 0) {\n              break;\n            }\n\n            guess--;\n          } while (guess);\n\n          quot.push(guess);\n\n          if (!guess) {\n            continue;\n          }\n\n          var diff = part.subtract(check);\n          part._d = diff._d.slice();\n        }\n\n        return [new BigInteger(quot.reverse(), sign, CONSTRUCT), new BigInteger(part._d, this._s, CONSTRUCT)];\n      }; // Throws an exception if n is outside of (-BigInteger.base, -1] or\n      // [1, BigInteger.base).  It's not necessary to call this, since the\n      // other division functions will call it if they are able to.\n\n\n      BigInteger.prototype.divRemSmall = function (n) {\n        var r;\n        n = +n;\n\n        if (n === 0) {\n          throw new Error(\"Divide by zero\");\n        }\n\n        var n_s = n < 0 ? -1 : 1;\n        var sign = this._s * n_s;\n        n = Math.abs(n);\n\n        if (n < 1 || n >= BigInteger_base) {\n          throw new Error(\"Argument out of range\");\n        }\n\n        if (this._s === 0) {\n          return [ZERO, ZERO];\n        }\n\n        if (n === 1 || n === -1) {\n          return [sign === 1 ? this.abs() : new BigInteger(this._d, sign, CONSTRUCT), ZERO];\n        } // 2 <= n < BigInteger_base\n        // divide a single digit by a single digit\n\n\n        if (this._d.length === 1) {\n          var q = new BigInteger([this._d[0] / n | 0], 1, CONSTRUCT);\n          r = new BigInteger([this._d[0] % n | 0], 1, CONSTRUCT);\n\n          if (sign < 0) {\n            q = q.negate();\n          }\n\n          if (this._s < 0) {\n            r = r.negate();\n          }\n\n          return [q, r];\n        }\n\n        var digits = this._d.slice();\n\n        var quot = new Array(digits.length);\n        var part = 0;\n        var diff = 0;\n        var i = 0;\n        var guess;\n\n        while (digits.length) {\n          part = part * BigInteger_base + digits[digits.length - 1];\n\n          if (part < n) {\n            quot[i++] = 0;\n            digits.pop();\n            diff = BigInteger_base * diff + part;\n            continue;\n          }\n\n          if (part === 0) {\n            guess = 0;\n          } else {\n            guess = part / n | 0;\n          }\n\n          var check = n * guess;\n          diff = part - check;\n          quot[i++] = guess;\n\n          if (!guess) {\n            digits.pop();\n            continue;\n          }\n\n          digits.pop();\n          part = diff;\n        }\n\n        r = new BigInteger([diff], 1, CONSTRUCT);\n\n        if (this._s < 0) {\n          r = r.negate();\n        }\n\n        return [new BigInteger(quot.reverse(), sign, CONSTRUCT), r];\n      };\n      /*\n          Function: isEven\n          Return true iff *this* is divisible by two.\n          Note that <BigInteger.ZERO> is even.\n          Returns:\n              true if *this* is even, false otherwise.\n          See Also:\n              <isOdd>\n      */\n\n\n      BigInteger.prototype.isEven = function () {\n        var digits = this._d;\n        return this._s === 0 || digits.length === 0 || digits[0] % 2 === 0;\n      };\n      /*\n          Function: isOdd\n          Return true iff *this* is not divisible by two.\n          Returns:\n              true if *this* is odd, false otherwise.\n          See Also:\n              <isEven>\n      */\n\n\n      BigInteger.prototype.isOdd = function () {\n        return !this.isEven();\n      };\n      /*\n          Function: sign\n          Get the sign of a <BigInteger>.\n          Returns:\n              * -1 if *this* < 0\n              * 0 if *this* == 0\n              * +1 if *this* > 0\n          See Also:\n              <isZero>, <isPositive>, <isNegative>, <compare>, <BigInteger.ZERO>\n      */\n\n\n      BigInteger.prototype.sign = function () {\n        return this._s;\n      };\n      /*\n          Function: isPositive\n          Return true iff *this* > 0.\n          Returns:\n              true if *this*.compare(<BigInteger.ZERO>) == 1.\n          See Also:\n              <sign>, <isZero>, <isNegative>, <isUnit>, <compare>, <BigInteger.ZERO>\n      */\n\n\n      BigInteger.prototype.isPositive = function () {\n        return this._s > 0;\n      };\n      /*\n          Function: isNegative\n          Return true iff *this* < 0.\n          Returns:\n              true if *this*.compare(<BigInteger.ZERO>) == -1.\n          See Also:\n              <sign>, <isPositive>, <isZero>, <isUnit>, <compare>, <BigInteger.ZERO>\n      */\n\n\n      BigInteger.prototype.isNegative = function () {\n        return this._s < 0;\n      };\n      /*\n          Function: isZero\n          Return true iff *this* == 0.\n          Returns:\n              true if *this*.compare(<BigInteger.ZERO>) == 0.\n          See Also:\n              <sign>, <isPositive>, <isNegative>, <isUnit>, <BigInteger.ZERO>\n      */\n\n\n      BigInteger.prototype.isZero = function () {\n        return this._s === 0;\n      };\n      /*\n          Function: exp10\n          Multiply a <BigInteger> by a power of 10.\n          This is equivalent to, but faster than\n          > if (n >= 0) {\n          >     return this.multiply(BigInteger(\"1e\" + n));\n          > }\n          > else { // n <= 0\n          >     return this.quotient(BigInteger(\"1e\" + -n));\n          > }\n          Parameters:\n              n - The power of 10 to multiply *this* by. *n* is converted to a\n              javascipt number and must be no greater than <BigInteger.MAX_EXP>\n              (0x7FFFFFFF), or an exception will be thrown.\n          Returns:\n              *this* * (10 ** *n*), truncated to an integer if necessary.\n          See Also:\n              <pow>, <multiply>\n      */\n\n\n      BigInteger.prototype.exp10 = function (n) {\n        n = +n;\n\n        if (n === 0) {\n          return this;\n        }\n\n        if (Math.abs(n) > Number(MAX_EXP)) {\n          throw new Error(\"exponent too large in BigInteger.exp10\");\n        } // Optimization for this == 0. This also keeps us from having to trim zeros in the positive n case\n\n\n        if (this._s === 0) {\n          return ZERO;\n        }\n\n        if (n > 0) {\n          var k = new BigInteger(this._d.slice(), this._s, CONSTRUCT);\n\n          for (; n >= BigInteger_base_log10; n -= BigInteger_base_log10) {\n            k._d.unshift(0);\n          }\n\n          if (n == 0) return k;\n          k._s = 1;\n          k = k.multiplySingleDigit(Math.pow(10, n));\n          return this._s < 0 ? k.negate() : k;\n        } else if (-n >= this._d.length * BigInteger_base_log10) {\n          return ZERO;\n        } else {\n          var k = new BigInteger(this._d.slice(), this._s, CONSTRUCT);\n\n          for (n = -n; n >= BigInteger_base_log10; n -= BigInteger_base_log10) {\n            k._d.shift();\n          }\n\n          return n == 0 ? k : k.divRemSmall(Math.pow(10, n))[0];\n        }\n      };\n      /*\n          Function: pow\n          Raise a <BigInteger> to a power.\n          In this implementation, 0**0 is 1.\n          Parameters:\n              n - The exponent to raise *this* by. *n* must be no greater than\n              <BigInteger.MAX_EXP> (0x7FFFFFFF), or an exception will be thrown.\n          Returns:\n              *this* raised to the *nth* power.\n          See Also:\n              <modPow>\n      */\n\n\n      BigInteger.prototype.pow = function (n) {\n        if (this.isUnit()) {\n          if (this._s > 0) {\n            return this;\n          } else {\n            return BigInteger(n).isOdd() ? this : this.negate();\n          }\n        }\n\n        n = BigInteger(n);\n\n        if (n._s === 0) {\n          return ONE;\n        } else if (n._s < 0) {\n          if (this._s === 0) {\n            throw new Error(\"Divide by zero\");\n          } else {\n            return ZERO;\n          }\n        }\n\n        if (this._s === 0) {\n          return ZERO;\n        }\n\n        if (n.isUnit()) {\n          return this;\n        }\n\n        if (n.compareAbs(MAX_EXP) > 0) {\n          throw new Error(\"exponent too large in BigInteger.pow\");\n        }\n\n        var x = this;\n        var aux = ONE;\n        var two = BigInteger.small[2];\n\n        while (n.isPositive()) {\n          if (n.isOdd()) {\n            aux = aux.multiply(x);\n\n            if (n.isUnit()) {\n              return aux;\n            }\n          }\n\n          x = x.square();\n          n = n.quotient(two);\n        }\n\n        return aux;\n      };\n      /*\n          Function: modPow\n          Raise a <BigInteger> to a power (mod m).\n          Because it is reduced by a modulus, <modPow> is not limited by\n          <BigInteger.MAX_EXP> like <pow>.\n          Parameters:\n              exponent - The exponent to raise *this* by. Must be positive.\n              modulus - The modulus.\n          Returns:\n              *this* ^ *exponent* (mod *modulus*).\n          See Also:\n              <pow>, <mod>\n      */\n\n\n      BigInteger.prototype.modPow = function (exponent, modulus) {\n        var result = ONE;\n        var base = this;\n\n        while (exponent.isPositive()) {\n          if (exponent.isOdd()) {\n            result = result.multiply(base).remainder(modulus);\n          }\n\n          exponent = exponent.quotient(BigInteger.small[2]);\n\n          if (exponent.isPositive()) {\n            base = base.square().remainder(modulus);\n          }\n        }\n\n        return result;\n      };\n      /*\n          Function: log\n          Get the natural logarithm of a <BigInteger> as a native JavaScript number.\n          This is equivalent to\n          > Math.log(this.toJSValue())\n          but handles values outside of the native number range.\n          Returns:\n              log( *this* )\n          See Also:\n              <toJSValue>\n      */\n\n\n      BigInteger.prototype.log = function () {\n        switch (this._s) {\n          case 0:\n            return -Infinity;\n\n          case -1:\n            return NaN;\n\n          default: // Fall through.\n\n        }\n\n        var l = this._d.length;\n\n        if (l * BigInteger_base_log10 < 30) {\n          return Math.log(this.valueOf());\n        }\n\n        var N = Math.ceil(30 / BigInteger_base_log10);\n\n        var firstNdigits = this._d.slice(l - N);\n\n        return Math.log(new BigInteger(firstNdigits, 1, CONSTRUCT).valueOf()) + (l - N) * Math.log(BigInteger_base);\n      };\n      /*\n          Function: valueOf\n          Convert a <BigInteger> to a native JavaScript integer.\n          This is called automatically by JavaScipt to convert a <BigInteger> to a\n          native value.\n          Returns:\n              > parseInt(this.toString(), 10)\n          See Also:\n              <toString>, <toJSValue>\n      */\n\n\n      BigInteger.prototype.valueOf = function () {\n        return parseInt(this.toString(), 10);\n      };\n      /*\n          Function: toJSValue\n          Convert a <BigInteger> to a native JavaScript integer.\n          This is the same as valueOf, but more explicitly named.\n          Returns:\n              > parseInt(this.toString(), 10)\n          See Also:\n              <toString>, <valueOf>\n      */\n\n\n      BigInteger.prototype.toJSValue = function () {\n        return parseInt(this.toString(), 10);\n      };\n      /*\n       Function: lowVal\n       Author: Lucas Jones\n       */\n\n\n      BigInteger.prototype.lowVal = function () {\n        return this._d[0] || 0;\n      };\n\n      var MAX_EXP = BigInteger(0x7FFFFFFF); // Constant: MAX_EXP\n      // The largest exponent allowed in <pow> and <exp10> (0x7FFFFFFF or 2147483647).\n\n      BigInteger.MAX_EXP = MAX_EXP;\n\n      (function () {\n        function makeUnary(fn) {\n          return function (a) {\n            return fn.call(BigInteger(a));\n          };\n        }\n\n        function makeBinary(fn) {\n          return function (a, b) {\n            return fn.call(BigInteger(a), BigInteger(b));\n          };\n        }\n\n        function makeTrinary(fn) {\n          return function (a, b, c) {\n            return fn.call(BigInteger(a), BigInteger(b), BigInteger(c));\n          };\n        }\n\n        (function () {\n          var i, fn;\n          var unary = \"toJSValue,isEven,isOdd,sign,isZero,isNegative,abs,isUnit,square,negate,isPositive,toString,next,prev,log\".split(\",\");\n          var binary = \"compare,remainder,divRem,subtract,add,quotient,divide,multiply,pow,compareAbs\".split(\",\");\n          var trinary = [\"modPow\"];\n\n          for (i = 0; i < unary.length; i++) {\n            fn = unary[i];\n            BigInteger[fn] = makeUnary(BigInteger.prototype[fn]);\n          }\n\n          for (i = 0; i < binary.length; i++) {\n            fn = binary[i];\n            BigInteger[fn] = makeBinary(BigInteger.prototype[fn]);\n          }\n\n          for (i = 0; i < trinary.length; i++) {\n            fn = trinary[i];\n            BigInteger[fn] = makeTrinary(BigInteger.prototype[fn]);\n          }\n\n          BigInteger.exp10 = function (x, n) {\n            return BigInteger(x).exp10(n);\n          };\n        })();\n      })();\n\n      exports.JSBigInt = BigInteger; // exports.BigInteger changed to exports.JSBigInt\n    })(typeof exports !== 'undefined' ? exports : this);\n  }, {}],\n  8: [function (require, module, exports) {\n    (function (Buffer) {\n      'use strict';\n      /**\n       * Credits to https://github.com/cryptocoinjs/blake-hash\n       */\n\n      Blake256.sigma = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], [14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3], [11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4], [7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8], [9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13], [2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9], [12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11], [13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10], [6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5], [10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0], [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], [14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3], [11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4], [7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8], [9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13], [2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9]];\n      Blake256.u256 = [0x243f6a88, 0x85a308d3, 0x13198a2e, 0x03707344, 0xa4093822, 0x299f31d0, 0x082efa98, 0xec4e6c89, 0x452821e6, 0x38d01377, 0xbe5466cf, 0x34e90c6c, 0xc0ac29b7, 0xc97c50dd, 0x3f84d5b5, 0xb5470917];\n      Blake256.padding = new Buffer([0x80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\n\n      Blake256.prototype._length_carry = function (arr) {\n        for (var j = 0; j < arr.length; ++j) {\n          if (arr[j] < 0x0100000000) break;\n          arr[j] -= 0x0100000000;\n          arr[j + 1] += 1;\n        }\n      };\n\n      Blake256.prototype.update = function (data, encoding) {\n        data = new Buffer(data, encoding);\n        var block = this._block;\n        var offset = 0;\n\n        while (this._blockOffset + data.length - offset >= block.length) {\n          for (var i = this._blockOffset; i < block.length;) block[i++] = data[offset++];\n\n          this._length[0] += block.length * 8;\n\n          this._length_carry(this._length);\n\n          this._compress();\n\n          this._blockOffset = 0;\n        }\n\n        while (offset < data.length) block[this._blockOffset++] = data[offset++];\n\n        return this;\n      };\n\n      var zo = new Buffer([0x01]);\n      var oo = new Buffer([0x81]);\n\n      function rot(x, n) {\n        return (x << 32 - n | x >>> n) >>> 0;\n      }\n\n      function g(v, m, i, a, b, c, d, e) {\n        var sigma = Blake256.sigma;\n        var u256 = Blake256.u256;\n        v[a] = v[a] + ((m[sigma[i][e]] ^ u256[sigma[i][e + 1]]) >>> 0) + v[b] >>> 0;\n        v[d] = rot(v[d] ^ v[a], 16);\n        v[c] = v[c] + v[d] >>> 0;\n        v[b] = rot(v[b] ^ v[c], 12);\n        v[a] = v[a] + ((m[sigma[i][e + 1]] ^ u256[sigma[i][e]]) >>> 0) + v[b] >>> 0;\n        v[d] = rot(v[d] ^ v[a], 8);\n        v[c] = v[c] + v[d] >>> 0;\n        v[b] = rot(v[b] ^ v[c], 7);\n      }\n\n      function Blake256() {\n        this._h = [0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19];\n        this._s = [0, 0, 0, 0];\n        this._block = new Buffer(64);\n        this._blockOffset = 0;\n        this._length = [0, 0];\n        this._nullt = false;\n        this._zo = zo;\n        this._oo = oo;\n      }\n\n      Blake256.prototype._compress = function () {\n        var u256 = Blake256.u256;\n        var v = new Array(16);\n        var m = new Array(16);\n        var i;\n\n        for (i = 0; i < 16; ++i) m[i] = this._block.readUInt32BE(i * 4);\n\n        for (i = 0; i < 8; ++i) v[i] = this._h[i] >>> 0;\n\n        for (i = 8; i < 12; ++i) v[i] = (this._s[i - 8] ^ u256[i - 8]) >>> 0;\n\n        for (i = 12; i < 16; ++i) v[i] = u256[i - 8];\n\n        if (!this._nullt) {\n          v[12] = (v[12] ^ this._length[0]) >>> 0;\n          v[13] = (v[13] ^ this._length[0]) >>> 0;\n          v[14] = (v[14] ^ this._length[1]) >>> 0;\n          v[15] = (v[15] ^ this._length[1]) >>> 0;\n        }\n\n        for (i = 0; i < 14; ++i) {\n          /* column step */\n          g(v, m, i, 0, 4, 8, 12, 0);\n          g(v, m, i, 1, 5, 9, 13, 2);\n          g(v, m, i, 2, 6, 10, 14, 4);\n          g(v, m, i, 3, 7, 11, 15, 6);\n          /* diagonal step */\n\n          g(v, m, i, 0, 5, 10, 15, 8);\n          g(v, m, i, 1, 6, 11, 12, 10);\n          g(v, m, i, 2, 7, 8, 13, 12);\n          g(v, m, i, 3, 4, 9, 14, 14);\n        }\n\n        for (i = 0; i < 16; ++i) this._h[i % 8] = (this._h[i % 8] ^ v[i]) >>> 0;\n\n        for (i = 0; i < 8; ++i) this._h[i] = (this._h[i] ^ this._s[i % 4]) >>> 0;\n      };\n\n      Blake256.prototype._padding = function () {\n        var lo = this._length[0] + this._blockOffset * 8;\n        var hi = this._length[1];\n\n        if (lo >= 0x0100000000) {\n          lo -= 0x0100000000;\n          hi += 1;\n        }\n\n        var msglen = new Buffer(8);\n        msglen.writeUInt32BE(hi, 0);\n        msglen.writeUInt32BE(lo, 4);\n\n        if (this._blockOffset === 55) {\n          this._length[0] -= 8;\n          this.update(this._oo);\n        } else {\n          if (this._blockOffset < 55) {\n            if (this._blockOffset === 0) this._nullt = true;\n            this._length[0] -= (55 - this._blockOffset) * 8;\n            this.update(Blake256.padding.slice(0, 55 - this._blockOffset));\n          } else {\n            this._length[0] -= (64 - this._blockOffset) * 8;\n            this.update(Blake256.padding.slice(0, 64 - this._blockOffset));\n            this._length[0] -= 55 * 8;\n            this.update(Blake256.padding.slice(1, 1 + 55));\n            this._nullt = true;\n          }\n\n          this.update(this._zo);\n          this._length[0] -= 8;\n        }\n\n        this._length[0] -= 64;\n        this.update(msglen);\n      };\n\n      Blake256.prototype.digest = function (encoding) {\n        this._padding();\n\n        var buffer = new Buffer(32);\n\n        for (var i = 0; i < 8; ++i) buffer.writeUInt32BE(this._h[i], i * 4);\n\n        return buffer.toString(encoding);\n      };\n\n      module.exports = Blake256;\n    }).call(this, require(\"buffer\").Buffer);\n  }, {\n    \"buffer\": 22\n  }],\n  9: [function (require, module, exports) {\n    'use strict';\n    /**\n     * Credits to https://github.com/emilbayes/blake2b\n     *\n     * Copyright (c) 2017, Emil Bay github@tixz.dk\n     *\n     * Permission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies.\n     *\n     * THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n     */\n    // 64-bit unsigned addition\n    // Sets v[a,a+1] += v[b,b+1]\n    // v should be a Uint32Array\n\n    function ADD64AA(v, a, b) {\n      var o0 = v[a] + v[b];\n      var o1 = v[a + 1] + v[b + 1];\n\n      if (o0 >= 0x100000000) {\n        o1++;\n      }\n\n      v[a] = o0;\n      v[a + 1] = o1;\n    } // 64-bit unsigned addition\n    // Sets v[a,a+1] += b\n    // b0 is the low 32 bits of b, b1 represents the high 32 bits\n\n\n    function ADD64AC(v, a, b0, b1) {\n      var o0 = v[a] + b0;\n\n      if (b0 < 0) {\n        o0 += 0x100000000;\n      }\n\n      var o1 = v[a + 1] + b1;\n\n      if (o0 >= 0x100000000) {\n        o1++;\n      }\n\n      v[a] = o0;\n      v[a + 1] = o1;\n    } // Little-endian byte access\n\n\n    function B2B_GET32(arr, i) {\n      return arr[i] ^ arr[i + 1] << 8 ^ arr[i + 2] << 16 ^ arr[i + 3] << 24;\n    } // G Mixing function\n    // The ROTRs are inlined for speed\n\n\n    function B2B_G(a, b, c, d, ix, iy) {\n      var x0 = m[ix];\n      var x1 = m[ix + 1];\n      var y0 = m[iy];\n      var y1 = m[iy + 1];\n      ADD64AA(v, a, b); // v[a,a+1] += v[b,b+1] ... in JS we must store a uint64 as two uint32s\n\n      ADD64AC(v, a, x0, x1); // v[a, a+1] += x ... x0 is the low 32 bits of x, x1 is the high 32 bits\n      // v[d,d+1] = (v[d,d+1] xor v[a,a+1]) rotated to the right by 32 bits\n\n      var xor0 = v[d] ^ v[a];\n      var xor1 = v[d + 1] ^ v[a + 1];\n      v[d] = xor1;\n      v[d + 1] = xor0;\n      ADD64AA(v, c, d); // v[b,b+1] = (v[b,b+1] xor v[c,c+1]) rotated right by 24 bits\n\n      xor0 = v[b] ^ v[c];\n      xor1 = v[b + 1] ^ v[c + 1];\n      v[b] = xor0 >>> 24 ^ xor1 << 8;\n      v[b + 1] = xor1 >>> 24 ^ xor0 << 8;\n      ADD64AA(v, a, b);\n      ADD64AC(v, a, y0, y1); // v[d,d+1] = (v[d,d+1] xor v[a,a+1]) rotated right by 16 bits\n\n      xor0 = v[d] ^ v[a];\n      xor1 = v[d + 1] ^ v[a + 1];\n      v[d] = xor0 >>> 16 ^ xor1 << 16;\n      v[d + 1] = xor1 >>> 16 ^ xor0 << 16;\n      ADD64AA(v, c, d); // v[b,b+1] = (v[b,b+1] xor v[c,c+1]) rotated right by 63 bits\n\n      xor0 = v[b] ^ v[c];\n      xor1 = v[b + 1] ^ v[c + 1];\n      v[b] = xor1 >>> 31 ^ xor0 << 1;\n      v[b + 1] = xor0 >>> 31 ^ xor1 << 1;\n    } // Initialization Vector\n\n\n    var BLAKE2B_IV32 = new Uint32Array([0xF3BCC908, 0x6A09E667, 0x84CAA73B, 0xBB67AE85, 0xFE94F82B, 0x3C6EF372, 0x5F1D36F1, 0xA54FF53A, 0xADE682D1, 0x510E527F, 0x2B3E6C1F, 0x9B05688C, 0xFB41BD6B, 0x1F83D9AB, 0x137E2179, 0x5BE0CD19]);\n    var SIGMA8 = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3, 11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4, 7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8, 9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13, 2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9, 12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11, 13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10, 6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5, 10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3]; // These are offsets into a uint64 buffer.\n    // Multiply them all by 2 to make them offsets into a uint32 buffer,\n    // because this is Javascript and we don't have uint64s\n\n    var SIGMA82 = new Uint8Array(SIGMA8.map(function (x) {\n      return x * 2;\n    })); // Compression function. 'last' flag indicates last block.\n    // Note we're representing 16 uint64s as 32 uint32s\n\n    var v = new Uint32Array(32);\n    var m = new Uint32Array(32);\n\n    function blake2bCompress(ctx, last) {\n      var i = 0; // init work variables\n\n      for (i = 0; i < 16; i++) {\n        v[i] = ctx.h[i];\n        v[i + 16] = BLAKE2B_IV32[i];\n      } // low 64 bits of offset\n\n\n      v[24] = v[24] ^ ctx.t;\n      v[25] = v[25] ^ ctx.t / 0x100000000; // high 64 bits not supported, offset may not be higher than 2**53-1\n      // last block flag set ?\n\n      if (last) {\n        v[28] = ~v[28];\n        v[29] = ~v[29];\n      } // get little-endian words\n\n\n      for (i = 0; i < 32; i++) {\n        m[i] = B2B_GET32(ctx.b, 4 * i);\n      } // twelve rounds of mixing\n\n\n      for (i = 0; i < 12; i++) {\n        B2B_G(0, 8, 16, 24, SIGMA82[i * 16 + 0], SIGMA82[i * 16 + 1]);\n        B2B_G(2, 10, 18, 26, SIGMA82[i * 16 + 2], SIGMA82[i * 16 + 3]);\n        B2B_G(4, 12, 20, 28, SIGMA82[i * 16 + 4], SIGMA82[i * 16 + 5]);\n        B2B_G(6, 14, 22, 30, SIGMA82[i * 16 + 6], SIGMA82[i * 16 + 7]);\n        B2B_G(0, 10, 20, 30, SIGMA82[i * 16 + 8], SIGMA82[i * 16 + 9]);\n        B2B_G(2, 12, 22, 24, SIGMA82[i * 16 + 10], SIGMA82[i * 16 + 11]);\n        B2B_G(4, 14, 16, 26, SIGMA82[i * 16 + 12], SIGMA82[i * 16 + 13]);\n        B2B_G(6, 8, 18, 28, SIGMA82[i * 16 + 14], SIGMA82[i * 16 + 15]);\n      }\n\n      for (i = 0; i < 16; i++) {\n        ctx.h[i] = ctx.h[i] ^ v[i] ^ v[i + 16];\n      }\n    } // reusable parameter_block\n\n\n    var parameter_block = new Uint8Array([0, 0, 0, 0, //  0: outlen, keylen, fanout, depth\n    0, 0, 0, 0, //  4: leaf length, sequential mode\n    0, 0, 0, 0, //  8: node offset\n    0, 0, 0, 0, // 12: node offset\n    0, 0, 0, 0, // 16: node depth, inner length, rfu\n    0, 0, 0, 0, // 20: rfu\n    0, 0, 0, 0, // 24: rfu\n    0, 0, 0, 0, // 28: rfu\n    0, 0, 0, 0, // 32: salt\n    0, 0, 0, 0, // 36: salt\n    0, 0, 0, 0, // 40: salt\n    0, 0, 0, 0, // 44: salt\n    0, 0, 0, 0, // 48: personal\n    0, 0, 0, 0, // 52: personal\n    0, 0, 0, 0, // 56: personal\n    0, 0, 0, 0 // 60: personal\n    ]); // Creates a BLAKE2b hashing context\n    // Requires an output length between 1 and 64 bytes\n    // Takes an optional Uint8Array key\n\n    function Blake2b(outlen, key, salt, personal) {\n      // zero out parameter_block before usage\n      parameter_block.fill(0); // state, 'param block'\n\n      this.b = new Uint8Array(128);\n      this.h = new Uint32Array(16);\n      this.t = 0; // input count\n\n      this.c = 0; // pointer within buffer\n\n      this.outlen = outlen; // output length in bytes\n\n      parameter_block[0] = outlen;\n      if (key) parameter_block[1] = key.length;\n      parameter_block[2] = 1; // fanout\n\n      parameter_block[3] = 1; // depth\n\n      if (salt) parameter_block.set(salt, 32);\n      if (personal) parameter_block.set(personal, 48); // initialize hash state\n\n      for (var i = 0; i < 16; i++) {\n        this.h[i] = BLAKE2B_IV32[i] ^ B2B_GET32(parameter_block, i * 4);\n      } // key the hash, if applicable\n\n\n      if (key) {\n        blake2bUpdate(this, key); // at the end\n\n        this.c = 128;\n      }\n    }\n\n    Blake2b.prototype.update = function (input) {\n      blake2bUpdate(this, input);\n      return this;\n    };\n\n    Blake2b.prototype.digest = function (out) {\n      var buf = !out || out === 'binary' || out === 'hex' ? new Uint8Array(this.outlen) : out;\n      blake2bFinal(this, buf);\n      if (out === 'hex') return hexSlice(buf);\n      return buf;\n    };\n\n    Blake2b.prototype.final = Blake2b.prototype.digest; // Updates a BLAKE2b streaming hash\n    // Requires hash context and Uint8Array (byte array)\n\n    function blake2bUpdate(ctx, input) {\n      for (var i = 0; i < input.length; i++) {\n        if (ctx.c === 128) {\n          // buffer full ?\n          ctx.t += ctx.c; // add counters\n\n          blake2bCompress(ctx, false); // compress (not last)\n\n          ctx.c = 0; // counter to zero\n        }\n\n        ctx.b[ctx.c++] = input[i];\n      }\n    } // Completes a BLAKE2b streaming hash\n    // Returns a Uint8Array containing the message digest\n\n\n    function blake2bFinal(ctx, out) {\n      ctx.t += ctx.c; // mark last block offset\n\n      while (ctx.c < 128) {\n        // fill up with zeros\n        ctx.b[ctx.c++] = 0;\n      }\n\n      blake2bCompress(ctx, true); // final block flag = 1\n\n      for (var i = 0; i < ctx.outlen; i++) {\n        out[i] = ctx.h[i >> 2] >> 8 * (i & 3);\n      }\n\n      return out;\n    }\n\n    function hexSlice(buf) {\n      var str = '';\n\n      for (var i = 0; i < buf.length; i++) str += toHex(buf[i]);\n\n      return str;\n    }\n\n    function toHex(n) {\n      if (n < 16) return '0' + n.toString(16);\n      return n.toString(16);\n    }\n\n    module.exports = Blake2b;\n  }, {}],\n  10: [function (require, module, exports) {\n    var JSBigInt = require('./biginteger')['JSBigInt'];\n    /**\n    Copyright (c) 2017, moneroexamples\n    All rights reserved.\n    Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions are met:\n    1. Redistributions of source code must retain the above copyright notice, this\n    list of conditions and the following disclaimer.\n    2. Redistributions in binary form must reproduce the above copyright notice,\n    this list of conditions and the following disclaimer in the documentation\n    and/or other materials provided with the distribution.\n    3. Neither the name of the copyright holder nor the names of its contributors\n    may be used to endorse or promote products derived from this software without\n    specific prior written permission.\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n    ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n    WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n    DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n    FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n    DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n    SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n    CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n    OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n    OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n    Parts of the project are originally copyright (c) 2014-2017, MyMonero.com\n    */\n\n\n    var cnBase58 = function () {\n      var b58 = {};\n      var alphabet_str = \"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\";\n      var alphabet = [];\n\n      for (var i = 0; i < alphabet_str.length; i++) {\n        alphabet.push(alphabet_str.charCodeAt(i));\n      }\n\n      var encoded_block_sizes = [0, 2, 3, 5, 6, 7, 9, 10, 11];\n      var alphabet_size = alphabet.length;\n      var full_block_size = 8;\n      var full_encoded_block_size = 11;\n      var UINT64_MAX = new JSBigInt(2).pow(64);\n\n      function hextobin(hex) {\n        if (hex.length % 2 !== 0) throw \"Hex string has invalid length!\";\n        var res = new Uint8Array(hex.length / 2);\n\n        for (var i = 0; i < hex.length / 2; ++i) {\n          res[i] = parseInt(hex.slice(i * 2, i * 2 + 2), 16);\n        }\n\n        return res;\n      }\n\n      function bintohex(bin) {\n        var out = [];\n\n        for (var i = 0; i < bin.length; ++i) {\n          out.push((\"0\" + bin[i].toString(16)).slice(-2));\n        }\n\n        return out.join(\"\");\n      }\n\n      function strtobin(str) {\n        var res = new Uint8Array(str.length);\n\n        for (var i = 0; i < str.length; i++) {\n          res[i] = str.charCodeAt(i);\n        }\n\n        return res;\n      }\n\n      function bintostr(bin) {\n        var out = [];\n\n        for (var i = 0; i < bin.length; i++) {\n          out.push(String.fromCharCode(bin[i]));\n        }\n\n        return out.join(\"\");\n      }\n\n      function uint8_be_to_64(data) {\n        if (data.length < 1 || data.length > 8) {\n          throw \"Invalid input length\";\n        }\n\n        var res = JSBigInt.ZERO;\n        var twopow8 = new JSBigInt(2).pow(8);\n        var i = 0;\n\n        switch (9 - data.length) {\n          case 1:\n            res = res.add(data[i++]);\n\n          case 2:\n            res = res.multiply(twopow8).add(data[i++]);\n\n          case 3:\n            res = res.multiply(twopow8).add(data[i++]);\n\n          case 4:\n            res = res.multiply(twopow8).add(data[i++]);\n\n          case 5:\n            res = res.multiply(twopow8).add(data[i++]);\n\n          case 6:\n            res = res.multiply(twopow8).add(data[i++]);\n\n          case 7:\n            res = res.multiply(twopow8).add(data[i++]);\n\n          case 8:\n            res = res.multiply(twopow8).add(data[i++]);\n            break;\n\n          default:\n            throw \"Impossible condition\";\n        }\n\n        return res;\n      }\n\n      function uint64_to_8be(num, size) {\n        var res = new Uint8Array(size);\n\n        if (size < 1 || size > 8) {\n          throw \"Invalid input length\";\n        }\n\n        var twopow8 = new JSBigInt(2).pow(8);\n\n        for (var i = size - 1; i >= 0; i--) {\n          res[i] = num.remainder(twopow8).toJSValue();\n          num = num.divide(twopow8);\n        }\n\n        return res;\n      }\n\n      b58.encode_block = function (data, buf, index) {\n        if (data.length < 1 || data.length > full_encoded_block_size) {\n          throw \"Invalid block length: \" + data.length;\n        }\n\n        var num = uint8_be_to_64(data);\n        var i = encoded_block_sizes[data.length] - 1; // while num > 0\n\n        while (num.compare(0) === 1) {\n          var div = num.divRem(alphabet_size); // remainder = num % alphabet_size\n\n          var remainder = div[1]; // num = num / alphabet_size\n\n          num = div[0];\n          buf[index + i] = alphabet[remainder.toJSValue()];\n          i--;\n        }\n\n        return buf;\n      };\n\n      b58.encode = function (hex) {\n        var data = hextobin(hex);\n\n        if (data.length === 0) {\n          return \"\";\n        }\n\n        var full_block_count = Math.floor(data.length / full_block_size);\n        var last_block_size = data.length % full_block_size;\n        var res_size = full_block_count * full_encoded_block_size + encoded_block_sizes[last_block_size];\n        var res = new Uint8Array(res_size);\n        var i;\n\n        for (i = 0; i < res_size; ++i) {\n          res[i] = alphabet[0];\n        }\n\n        for (i = 0; i < full_block_count; i++) {\n          res = b58.encode_block(data.subarray(i * full_block_size, i * full_block_size + full_block_size), res, i * full_encoded_block_size);\n        }\n\n        if (last_block_size > 0) {\n          res = b58.encode_block(data.subarray(full_block_count * full_block_size, full_block_count * full_block_size + last_block_size), res, full_block_count * full_encoded_block_size);\n        }\n\n        return bintostr(res);\n      };\n\n      b58.decode_block = function (data, buf, index) {\n        if (data.length < 1 || data.length > full_encoded_block_size) {\n          throw \"Invalid block length: \" + data.length;\n        }\n\n        var res_size = encoded_block_sizes.indexOf(data.length);\n\n        if (res_size <= 0) {\n          throw \"Invalid block size\";\n        }\n\n        var res_num = new JSBigInt(0);\n        var order = new JSBigInt(1);\n\n        for (var i = data.length - 1; i >= 0; i--) {\n          var digit = alphabet.indexOf(data[i]);\n\n          if (digit < 0) {\n            throw \"Invalid symbol\";\n          }\n\n          var product = order.multiply(digit).add(res_num); // if product > UINT64_MAX\n\n          if (product.compare(UINT64_MAX) === 1) {\n            throw \"Overflow\";\n          }\n\n          res_num = product;\n          order = order.multiply(alphabet_size);\n        }\n\n        if (res_size < full_block_size && new JSBigInt(2).pow(8 * res_size).compare(res_num) <= 0) {\n          throw \"Overflow 2\";\n        }\n\n        buf.set(uint64_to_8be(res_num, res_size), index);\n        return buf;\n      };\n\n      b58.decode = function (enc) {\n        enc = strtobin(enc);\n\n        if (enc.length === 0) {\n          return \"\";\n        }\n\n        var full_block_count = Math.floor(enc.length / full_encoded_block_size);\n        var last_block_size = enc.length % full_encoded_block_size;\n        var last_block_decoded_size = encoded_block_sizes.indexOf(last_block_size);\n\n        if (last_block_decoded_size < 0) {\n          throw \"Invalid encoded length\";\n        }\n\n        var data_size = full_block_count * full_block_size + last_block_decoded_size;\n        var data = new Uint8Array(data_size);\n\n        for (var i = 0; i < full_block_count; i++) {\n          data = b58.decode_block(enc.subarray(i * full_encoded_block_size, i * full_encoded_block_size + full_encoded_block_size), data, i * full_block_size);\n        }\n\n        if (last_block_size > 0) {\n          data = b58.decode_block(enc.subarray(full_block_count * full_encoded_block_size, full_block_count * full_encoded_block_size + last_block_size), data, full_block_count * full_block_size);\n        }\n\n        return bintohex(data);\n      };\n\n      return b58;\n    }();\n\n    module.exports = cnBase58;\n  }, {\n    \"./biginteger\": 7\n  }],\n  11: [function (require, module, exports) {\n    // Copyright (c) 2017 Pieter Wuille\n    //\n    // Permission is hereby granted, free of charge, to any person obtaining a copy\n    // of this software and associated documentation files (the \"Software\"), to deal\n    // in the Software without restriction, including without limitation the rights\n    // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n    // copies of the Software, and to permit persons to whom the Software is\n    // furnished to do so, subject to the following conditions:\n    //\n    // The above copyright notice and this permission notice shall be included in\n    // all copies or substantial portions of the Software.\n    //\n    // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n    // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n    // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n    // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n    // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n    // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n    // THE SOFTWARE.\n    var bech32 = require('./bech32');\n\n    function convertbits(data, frombits, tobits, pad) {\n      var acc = 0;\n      var bits = 0;\n      var ret = [];\n      var maxv = (1 << tobits) - 1;\n\n      for (var p = 0; p < data.length; ++p) {\n        var value = data[p];\n\n        if (value < 0 || value >> frombits !== 0) {\n          return null;\n        }\n\n        acc = acc << frombits | value;\n        bits += frombits;\n\n        while (bits >= tobits) {\n          bits -= tobits;\n          ret.push(acc >> bits & maxv);\n        }\n      }\n\n      if (pad) {\n        if (bits > 0) {\n          ret.push(acc << tobits - bits & maxv);\n        }\n      } else if (bits >= frombits || acc << tobits - bits & maxv) {\n        return null;\n      }\n\n      return ret;\n    }\n\n    function decode(hrp, addr) {\n      var dec = bech32.decode(addr);\n\n      if (dec === null || dec.hrp !== hrp || dec.data.length < 1 || dec.data[0] > 16) {\n        return null;\n      }\n\n      var res = convertbits(dec.data.slice(1), 5, 8, false);\n\n      if (res === null || res.length < 2 || res.length > 40) {\n        return null;\n      }\n\n      if (dec.data[0] === 0 && res.length !== 20 && res.length !== 32) {\n        return null;\n      }\n\n      return {\n        version: dec.data[0],\n        program: res\n      };\n    }\n\n    function encode(hrp, version, program) {\n      var ret = bech32.encode(hrp, [version].concat(convertbits(program, 8, 5, true)));\n\n      if (decode(hrp, ret) === null) {\n        return null;\n      }\n\n      return ret;\n    }\n\n    function isValidAddress(address, hrp) {\n      var hrp = hrp || 'bc';\n      var ret = decode(hrp, address);\n\n      if (ret === null) {\n        hrp = 'tb';\n        ret = decode(hrp, address);\n      }\n\n      if (ret === null) {\n        return false;\n      }\n\n      var recreate = encode(hrp, ret.version, ret.program);\n      return recreate === address.toLowerCase();\n    }\n\n    module.exports = {\n      encode: encode,\n      decode: decode,\n      isValidAddress: isValidAddress\n    };\n  }, {\n    \"./bech32\": 6\n  }],\n  12: [function (require, module, exports) {\n    (function (process, global) {\n      /**\n       * [js-sha3]{@link https://github.com/emn178/js-sha3}\n       *\n       * @version 0.7.0\n       * @author Chen, Yi-Cyuan [emn178@gmail.com]\n       * @copyright Chen, Yi-Cyuan 2015-2017\n       * @license MIT\n       */\n\n      /*jslint bitwise: true */\n      'use strict';\n\n      var ERROR = 'input is invalid type';\n      var WINDOW = typeof window === 'object';\n      var root = WINDOW ? window : {};\n\n      if (root.JS_SHA3_NO_WINDOW) {\n        WINDOW = false;\n      }\n\n      var WEB_WORKER = !WINDOW && typeof self === 'object';\n      var NODE_JS = !root.JS_SHA3_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n\n      if (NODE_JS) {\n        root = global;\n      } else if (WEB_WORKER) {\n        root = self;\n      }\n\n      var ARRAY_BUFFER = !root.JS_SHA3_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\n      var HEX_CHARS = '0123456789abcdef'.split('');\n      var SHAKE_PADDING = [31, 7936, 2031616, 520093696];\n      var CSHAKE_PADDING = [4, 1024, 262144, 67108864];\n      var KECCAK_PADDING = [1, 256, 65536, 16777216];\n      var PADDING = [6, 1536, 393216, 100663296];\n      var SHIFT = [0, 8, 16, 24];\n      var RC = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649, 0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0, 2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771, 2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648, 2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648];\n      var BITS = [224, 256, 384, 512];\n      var SHAKE_BITS = [128, 256];\n      var OUTPUT_TYPES = ['hex', 'buffer', 'arrayBuffer', 'array', 'digest'];\n      var CSHAKE_BYTEPAD = {\n        '128': 168,\n        '256': 136\n      };\n\n      if (root.JS_SHA3_NO_NODE_JS || !Array.isArray) {\n        Array.isArray = function (obj) {\n          return Object.prototype.toString.call(obj) === '[object Array]';\n        };\n      }\n\n      if (ARRAY_BUFFER && (root.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {\n        ArrayBuffer.isView = function (obj) {\n          return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\n        };\n      }\n\n      var createOutputMethod = function (bits, padding, outputType) {\n        return function (message) {\n          return new Keccak(bits, padding, bits).update(message)[outputType]();\n        };\n      };\n\n      var createShakeOutputMethod = function (bits, padding, outputType) {\n        return function (message, outputBits) {\n          return new Keccak(bits, padding, outputBits).update(message)[outputType]();\n        };\n      };\n\n      var createCshakeOutputMethod = function (bits, padding, outputType) {\n        return function (message, outputBits, n, s) {\n          return methods['cshake' + bits].update(message, outputBits, n, s)[outputType]();\n        };\n      };\n\n      var createKmacOutputMethod = function (bits, padding, outputType) {\n        return function (key, message, outputBits, s) {\n          return methods['kmac' + bits].update(key, message, outputBits, s)[outputType]();\n        };\n      };\n\n      var createOutputMethods = function (method, createMethod, bits, padding) {\n        for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n          var type = OUTPUT_TYPES[i];\n          method[type] = createMethod(bits, padding, type);\n        }\n\n        return method;\n      };\n\n      var createMethod = function (bits, padding) {\n        var method = createOutputMethod(bits, padding, 'hex');\n\n        method.create = function () {\n          return new Keccak(bits, padding, bits);\n        };\n\n        method.update = function (message) {\n          return method.create().update(message);\n        };\n\n        return createOutputMethods(method, createOutputMethod, bits, padding);\n      };\n\n      var createShakeMethod = function (bits, padding) {\n        var method = createShakeOutputMethod(bits, padding, 'hex');\n\n        method.create = function (outputBits) {\n          return new Keccak(bits, padding, outputBits);\n        };\n\n        method.update = function (message, outputBits) {\n          return method.create(outputBits).update(message);\n        };\n\n        return createOutputMethods(method, createShakeOutputMethod, bits, padding);\n      };\n\n      var createCshakeMethod = function (bits, padding) {\n        var w = CSHAKE_BYTEPAD[bits];\n        var method = createCshakeOutputMethod(bits, padding, 'hex');\n\n        method.create = function (outputBits, n, s) {\n          if (!n && !s) {\n            return methods['shake' + bits].create(outputBits);\n          } else {\n            return new Keccak(bits, padding, outputBits).bytepad([n, s], w);\n          }\n        };\n\n        method.update = function (message, outputBits, n, s) {\n          return method.create(outputBits, n, s).update(message);\n        };\n\n        return createOutputMethods(method, createCshakeOutputMethod, bits, padding);\n      };\n\n      var createKmacMethod = function (bits, padding) {\n        var w = CSHAKE_BYTEPAD[bits];\n        var method = createKmacOutputMethod(bits, padding, 'hex');\n\n        method.create = function (key, outputBits, s) {\n          return new Kmac(bits, padding, outputBits).bytepad(['KMAC', s], w).bytepad([key], w);\n        };\n\n        method.update = function (key, message, outputBits, s) {\n          return method.create(key, outputBits, s).update(message);\n        };\n\n        return createOutputMethods(method, createKmacOutputMethod, bits, padding);\n      };\n\n      var algorithms = [{\n        name: 'keccak',\n        padding: KECCAK_PADDING,\n        bits: BITS,\n        createMethod: createMethod\n      }, {\n        name: 'sha3',\n        padding: PADDING,\n        bits: BITS,\n        createMethod: createMethod\n      }, {\n        name: 'shake',\n        padding: SHAKE_PADDING,\n        bits: SHAKE_BITS,\n        createMethod: createShakeMethod\n      }, {\n        name: 'cshake',\n        padding: CSHAKE_PADDING,\n        bits: SHAKE_BITS,\n        createMethod: createCshakeMethod\n      }, {\n        name: 'kmac',\n        padding: CSHAKE_PADDING,\n        bits: SHAKE_BITS,\n        createMethod: createKmacMethod\n      }];\n      var methods = {},\n          methodNames = [];\n\n      for (var i = 0; i < algorithms.length; ++i) {\n        var algorithm = algorithms[i];\n        var bits = algorithm.bits;\n\n        for (var j = 0; j < bits.length; ++j) {\n          var methodName = algorithm.name + '_' + bits[j];\n          methodNames.push(methodName);\n          methods[methodName] = algorithm.createMethod(bits[j], algorithm.padding);\n\n          if (algorithm.name !== 'sha3') {\n            var newMethodName = algorithm.name + bits[j];\n            methodNames.push(newMethodName);\n            methods[newMethodName] = methods[methodName];\n          }\n        }\n      }\n\n      function Keccak(bits, padding, outputBits) {\n        this.blocks = [];\n        this.s = [];\n        this.padding = padding;\n        this.outputBits = outputBits;\n        this.reset = true;\n        this.finalized = false;\n        this.block = 0;\n        this.start = 0;\n        this.blockCount = 1600 - (bits << 1) >> 5;\n        this.byteCount = this.blockCount << 2;\n        this.outputBlocks = outputBits >> 5;\n        this.extraBytes = (outputBits & 31) >> 3;\n\n        for (var i = 0; i < 50; ++i) {\n          this.s[i] = 0;\n        }\n      }\n\n      Keccak.prototype.update = function (message) {\n        if (this.finalized) {\n          return;\n        }\n\n        var notString,\n            type = typeof message;\n\n        if (type !== 'string') {\n          if (type === 'object') {\n            if (message === null) {\n              throw ERROR;\n            } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\n              message = new Uint8Array(message);\n            } else if (!Array.isArray(message)) {\n              if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {\n                throw ERROR;\n              }\n            }\n          } else {\n            throw ERROR;\n          }\n\n          notString = true;\n        }\n\n        var blocks = this.blocks,\n            byteCount = this.byteCount,\n            length = message.length,\n            blockCount = this.blockCount,\n            index = 0,\n            s = this.s,\n            i,\n            code;\n\n        while (index < length) {\n          if (this.reset) {\n            this.reset = false;\n            blocks[0] = this.block;\n\n            for (i = 1; i < blockCount + 1; ++i) {\n              blocks[i] = 0;\n            }\n          }\n\n          if (notString) {\n            for (i = this.start; index < length && i < byteCount; ++index) {\n              blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n            }\n          } else {\n            for (i = this.start; index < length && i < byteCount; ++index) {\n              code = message.charCodeAt(index);\n\n              if (code < 0x80) {\n                blocks[i >> 2] |= code << SHIFT[i++ & 3];\n              } else if (code < 0x800) {\n                blocks[i >> 2] |= (0xc0 | code >> 6) << SHIFT[i++ & 3];\n                blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];\n              } else if (code < 0xd800 || code >= 0xe000) {\n                blocks[i >> 2] |= (0xe0 | code >> 12) << SHIFT[i++ & 3];\n                blocks[i >> 2] |= (0x80 | code >> 6 & 0x3f) << SHIFT[i++ & 3];\n                blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];\n              } else {\n                code = 0x10000 + ((code & 0x3ff) << 10 | message.charCodeAt(++index) & 0x3ff);\n                blocks[i >> 2] |= (0xf0 | code >> 18) << SHIFT[i++ & 3];\n                blocks[i >> 2] |= (0x80 | code >> 12 & 0x3f) << SHIFT[i++ & 3];\n                blocks[i >> 2] |= (0x80 | code >> 6 & 0x3f) << SHIFT[i++ & 3];\n                blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];\n              }\n            }\n          }\n\n          this.lastByteIndex = i;\n\n          if (i >= byteCount) {\n            this.start = i - byteCount;\n            this.block = blocks[blockCount];\n\n            for (i = 0; i < blockCount; ++i) {\n              s[i] ^= blocks[i];\n            }\n\n            f(s);\n            this.reset = true;\n          } else {\n            this.start = i;\n          }\n        }\n\n        return this;\n      };\n\n      Keccak.prototype.encode = function (x, right) {\n        var o = x & 255,\n            n = 1;\n        var bytes = [o];\n        x = x >> 8;\n        o = x & 255;\n\n        while (o > 0) {\n          bytes.unshift(o);\n          x = x >> 8;\n          o = x & 255;\n          ++n;\n        }\n\n        if (right) {\n          bytes.push(n);\n        } else {\n          bytes.unshift(n);\n        }\n\n        this.update(bytes);\n        return bytes.length;\n      };\n\n      Keccak.prototype.encodeString = function (str) {\n        var notString,\n            type = typeof str;\n\n        if (type !== 'string') {\n          if (type === 'object') {\n            if (str === null) {\n              throw ERROR;\n            } else if (ARRAY_BUFFER && str.constructor === ArrayBuffer) {\n              str = new Uint8Array(str);\n            } else if (!Array.isArray(str)) {\n              if (!ARRAY_BUFFER || !ArrayBuffer.isView(str)) {\n                throw ERROR;\n              }\n            }\n          } else {\n            throw ERROR;\n          }\n\n          notString = true;\n        }\n\n        var bytes = 0,\n            length = str.length;\n\n        if (notString) {\n          bytes = length;\n        } else {\n          for (var i = 0; i < str.length; ++i) {\n            var code = str.charCodeAt(i);\n\n            if (code < 0x80) {\n              bytes += 1;\n            } else if (code < 0x800) {\n              bytes += 2;\n            } else if (code < 0xd800 || code >= 0xe000) {\n              bytes += 3;\n            } else {\n              code = 0x10000 + ((code & 0x3ff) << 10 | str.charCodeAt(++i) & 0x3ff);\n              bytes += 4;\n            }\n          }\n        }\n\n        bytes += this.encode(bytes * 8);\n        this.update(str);\n        return bytes;\n      };\n\n      Keccak.prototype.bytepad = function (strs, w) {\n        var bytes = this.encode(w);\n\n        for (var i = 0; i < strs.length; ++i) {\n          bytes += this.encodeString(strs[i]);\n        }\n\n        var paddingBytes = w - bytes % w;\n        var zeros = [];\n        zeros.length = paddingBytes;\n        this.update(zeros);\n        return this;\n      };\n\n      Keccak.prototype.finalize = function () {\n        if (this.finalized) {\n          return;\n        }\n\n        this.finalized = true;\n        var blocks = this.blocks,\n            i = this.lastByteIndex,\n            blockCount = this.blockCount,\n            s = this.s;\n        blocks[i >> 2] |= this.padding[i & 3];\n\n        if (this.lastByteIndex === this.byteCount) {\n          blocks[0] = blocks[blockCount];\n\n          for (i = 1; i < blockCount + 1; ++i) {\n            blocks[i] = 0;\n          }\n        }\n\n        blocks[blockCount - 1] |= 0x80000000;\n\n        for (i = 0; i < blockCount; ++i) {\n          s[i] ^= blocks[i];\n        }\n\n        f(s);\n      };\n\n      Keccak.prototype.toString = Keccak.prototype.hex = function () {\n        this.finalize();\n        var blockCount = this.blockCount,\n            s = this.s,\n            outputBlocks = this.outputBlocks,\n            extraBytes = this.extraBytes,\n            i = 0,\n            j = 0;\n        var hex = '',\n            block;\n\n        while (j < outputBlocks) {\n          for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n            block = s[i];\n            hex += HEX_CHARS[block >> 4 & 0x0F] + HEX_CHARS[block & 0x0F] + HEX_CHARS[block >> 12 & 0x0F] + HEX_CHARS[block >> 8 & 0x0F] + HEX_CHARS[block >> 20 & 0x0F] + HEX_CHARS[block >> 16 & 0x0F] + HEX_CHARS[block >> 28 & 0x0F] + HEX_CHARS[block >> 24 & 0x0F];\n          }\n\n          if (j % blockCount === 0) {\n            f(s);\n            i = 0;\n          }\n        }\n\n        if (extraBytes) {\n          block = s[i];\n          hex += HEX_CHARS[block >> 4 & 0x0F] + HEX_CHARS[block & 0x0F];\n\n          if (extraBytes > 1) {\n            hex += HEX_CHARS[block >> 12 & 0x0F] + HEX_CHARS[block >> 8 & 0x0F];\n          }\n\n          if (extraBytes > 2) {\n            hex += HEX_CHARS[block >> 20 & 0x0F] + HEX_CHARS[block >> 16 & 0x0F];\n          }\n        }\n\n        return hex;\n      };\n\n      Keccak.prototype.arrayBuffer = function () {\n        this.finalize();\n        var blockCount = this.blockCount,\n            s = this.s,\n            outputBlocks = this.outputBlocks,\n            extraBytes = this.extraBytes,\n            i = 0,\n            j = 0;\n        var bytes = this.outputBits >> 3;\n        var buffer;\n\n        if (extraBytes) {\n          buffer = new ArrayBuffer(outputBlocks + 1 << 2);\n        } else {\n          buffer = new ArrayBuffer(bytes);\n        }\n\n        var array = new Uint32Array(buffer);\n\n        while (j < outputBlocks) {\n          for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n            array[j] = s[i];\n          }\n\n          if (j % blockCount === 0) {\n            f(s);\n          }\n        }\n\n        if (extraBytes) {\n          array[i] = s[i];\n          buffer = buffer.slice(0, bytes);\n        }\n\n        return buffer;\n      };\n\n      Keccak.prototype.buffer = Keccak.prototype.arrayBuffer;\n\n      Keccak.prototype.digest = Keccak.prototype.array = function () {\n        this.finalize();\n        var blockCount = this.blockCount,\n            s = this.s,\n            outputBlocks = this.outputBlocks,\n            extraBytes = this.extraBytes,\n            i = 0,\n            j = 0;\n        var array = [],\n            offset,\n            block;\n\n        while (j < outputBlocks) {\n          for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n            offset = j << 2;\n            block = s[i];\n            array[offset] = block & 0xFF;\n            array[offset + 1] = block >> 8 & 0xFF;\n            array[offset + 2] = block >> 16 & 0xFF;\n            array[offset + 3] = block >> 24 & 0xFF;\n          }\n\n          if (j % blockCount === 0) {\n            f(s);\n          }\n        }\n\n        if (extraBytes) {\n          offset = j << 2;\n          block = s[i];\n          array[offset] = block & 0xFF;\n\n          if (extraBytes > 1) {\n            array[offset + 1] = block >> 8 & 0xFF;\n          }\n\n          if (extraBytes > 2) {\n            array[offset + 2] = block >> 16 & 0xFF;\n          }\n        }\n\n        return array;\n      };\n\n      function Kmac(bits, padding, outputBits) {\n        Keccak.call(this, bits, padding, outputBits);\n      }\n\n      Kmac.prototype = new Keccak();\n\n      Kmac.prototype.finalize = function () {\n        this.encode(this.outputBits, true);\n        return Keccak.prototype.finalize.call(this);\n      };\n\n      var f = function (s) {\n        var h, l, n, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9, b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17, b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33, b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;\n\n        for (n = 0; n < 48; n += 2) {\n          c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];\n          c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];\n          c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];\n          c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];\n          c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];\n          c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];\n          c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];\n          c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];\n          c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];\n          c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];\n          h = c8 ^ (c2 << 1 | c3 >>> 31);\n          l = c9 ^ (c3 << 1 | c2 >>> 31);\n          s[0] ^= h;\n          s[1] ^= l;\n          s[10] ^= h;\n          s[11] ^= l;\n          s[20] ^= h;\n          s[21] ^= l;\n          s[30] ^= h;\n          s[31] ^= l;\n          s[40] ^= h;\n          s[41] ^= l;\n          h = c0 ^ (c4 << 1 | c5 >>> 31);\n          l = c1 ^ (c5 << 1 | c4 >>> 31);\n          s[2] ^= h;\n          s[3] ^= l;\n          s[12] ^= h;\n          s[13] ^= l;\n          s[22] ^= h;\n          s[23] ^= l;\n          s[32] ^= h;\n          s[33] ^= l;\n          s[42] ^= h;\n          s[43] ^= l;\n          h = c2 ^ (c6 << 1 | c7 >>> 31);\n          l = c3 ^ (c7 << 1 | c6 >>> 31);\n          s[4] ^= h;\n          s[5] ^= l;\n          s[14] ^= h;\n          s[15] ^= l;\n          s[24] ^= h;\n          s[25] ^= l;\n          s[34] ^= h;\n          s[35] ^= l;\n          s[44] ^= h;\n          s[45] ^= l;\n          h = c4 ^ (c8 << 1 | c9 >>> 31);\n          l = c5 ^ (c9 << 1 | c8 >>> 31);\n          s[6] ^= h;\n          s[7] ^= l;\n          s[16] ^= h;\n          s[17] ^= l;\n          s[26] ^= h;\n          s[27] ^= l;\n          s[36] ^= h;\n          s[37] ^= l;\n          s[46] ^= h;\n          s[47] ^= l;\n          h = c6 ^ (c0 << 1 | c1 >>> 31);\n          l = c7 ^ (c1 << 1 | c0 >>> 31);\n          s[8] ^= h;\n          s[9] ^= l;\n          s[18] ^= h;\n          s[19] ^= l;\n          s[28] ^= h;\n          s[29] ^= l;\n          s[38] ^= h;\n          s[39] ^= l;\n          s[48] ^= h;\n          s[49] ^= l;\n          b0 = s[0];\n          b1 = s[1];\n          b32 = s[11] << 4 | s[10] >>> 28;\n          b33 = s[10] << 4 | s[11] >>> 28;\n          b14 = s[20] << 3 | s[21] >>> 29;\n          b15 = s[21] << 3 | s[20] >>> 29;\n          b46 = s[31] << 9 | s[30] >>> 23;\n          b47 = s[30] << 9 | s[31] >>> 23;\n          b28 = s[40] << 18 | s[41] >>> 14;\n          b29 = s[41] << 18 | s[40] >>> 14;\n          b20 = s[2] << 1 | s[3] >>> 31;\n          b21 = s[3] << 1 | s[2] >>> 31;\n          b2 = s[13] << 12 | s[12] >>> 20;\n          b3 = s[12] << 12 | s[13] >>> 20;\n          b34 = s[22] << 10 | s[23] >>> 22;\n          b35 = s[23] << 10 | s[22] >>> 22;\n          b16 = s[33] << 13 | s[32] >>> 19;\n          b17 = s[32] << 13 | s[33] >>> 19;\n          b48 = s[42] << 2 | s[43] >>> 30;\n          b49 = s[43] << 2 | s[42] >>> 30;\n          b40 = s[5] << 30 | s[4] >>> 2;\n          b41 = s[4] << 30 | s[5] >>> 2;\n          b22 = s[14] << 6 | s[15] >>> 26;\n          b23 = s[15] << 6 | s[14] >>> 26;\n          b4 = s[25] << 11 | s[24] >>> 21;\n          b5 = s[24] << 11 | s[25] >>> 21;\n          b36 = s[34] << 15 | s[35] >>> 17;\n          b37 = s[35] << 15 | s[34] >>> 17;\n          b18 = s[45] << 29 | s[44] >>> 3;\n          b19 = s[44] << 29 | s[45] >>> 3;\n          b10 = s[6] << 28 | s[7] >>> 4;\n          b11 = s[7] << 28 | s[6] >>> 4;\n          b42 = s[17] << 23 | s[16] >>> 9;\n          b43 = s[16] << 23 | s[17] >>> 9;\n          b24 = s[26] << 25 | s[27] >>> 7;\n          b25 = s[27] << 25 | s[26] >>> 7;\n          b6 = s[36] << 21 | s[37] >>> 11;\n          b7 = s[37] << 21 | s[36] >>> 11;\n          b38 = s[47] << 24 | s[46] >>> 8;\n          b39 = s[46] << 24 | s[47] >>> 8;\n          b30 = s[8] << 27 | s[9] >>> 5;\n          b31 = s[9] << 27 | s[8] >>> 5;\n          b12 = s[18] << 20 | s[19] >>> 12;\n          b13 = s[19] << 20 | s[18] >>> 12;\n          b44 = s[29] << 7 | s[28] >>> 25;\n          b45 = s[28] << 7 | s[29] >>> 25;\n          b26 = s[38] << 8 | s[39] >>> 24;\n          b27 = s[39] << 8 | s[38] >>> 24;\n          b8 = s[48] << 14 | s[49] >>> 18;\n          b9 = s[49] << 14 | s[48] >>> 18;\n          s[0] = b0 ^ ~b2 & b4;\n          s[1] = b1 ^ ~b3 & b5;\n          s[10] = b10 ^ ~b12 & b14;\n          s[11] = b11 ^ ~b13 & b15;\n          s[20] = b20 ^ ~b22 & b24;\n          s[21] = b21 ^ ~b23 & b25;\n          s[30] = b30 ^ ~b32 & b34;\n          s[31] = b31 ^ ~b33 & b35;\n          s[40] = b40 ^ ~b42 & b44;\n          s[41] = b41 ^ ~b43 & b45;\n          s[2] = b2 ^ ~b4 & b6;\n          s[3] = b3 ^ ~b5 & b7;\n          s[12] = b12 ^ ~b14 & b16;\n          s[13] = b13 ^ ~b15 & b17;\n          s[22] = b22 ^ ~b24 & b26;\n          s[23] = b23 ^ ~b25 & b27;\n          s[32] = b32 ^ ~b34 & b36;\n          s[33] = b33 ^ ~b35 & b37;\n          s[42] = b42 ^ ~b44 & b46;\n          s[43] = b43 ^ ~b45 & b47;\n          s[4] = b4 ^ ~b6 & b8;\n          s[5] = b5 ^ ~b7 & b9;\n          s[14] = b14 ^ ~b16 & b18;\n          s[15] = b15 ^ ~b17 & b19;\n          s[24] = b24 ^ ~b26 & b28;\n          s[25] = b25 ^ ~b27 & b29;\n          s[34] = b34 ^ ~b36 & b38;\n          s[35] = b35 ^ ~b37 & b39;\n          s[44] = b44 ^ ~b46 & b48;\n          s[45] = b45 ^ ~b47 & b49;\n          s[6] = b6 ^ ~b8 & b0;\n          s[7] = b7 ^ ~b9 & b1;\n          s[16] = b16 ^ ~b18 & b10;\n          s[17] = b17 ^ ~b19 & b11;\n          s[26] = b26 ^ ~b28 & b20;\n          s[27] = b27 ^ ~b29 & b21;\n          s[36] = b36 ^ ~b38 & b30;\n          s[37] = b37 ^ ~b39 & b31;\n          s[46] = b46 ^ ~b48 & b40;\n          s[47] = b47 ^ ~b49 & b41;\n          s[8] = b8 ^ ~b0 & b2;\n          s[9] = b9 ^ ~b1 & b3;\n          s[18] = b18 ^ ~b10 & b12;\n          s[19] = b19 ^ ~b11 & b13;\n          s[28] = b28 ^ ~b20 & b22;\n          s[29] = b29 ^ ~b21 & b23;\n          s[38] = b38 ^ ~b30 & b32;\n          s[39] = b39 ^ ~b31 & b33;\n          s[48] = b48 ^ ~b40 & b42;\n          s[49] = b49 ^ ~b41 & b43;\n          s[0] ^= RC[n];\n          s[1] ^= RC[n + 1];\n        }\n      };\n\n      module.exports = methods;\n    }).call(this, require('_process'), typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {});\n  }, {\n    \"_process\": 24\n  }],\n  13: [function (require, module, exports) {\n    var jsSHA = require('jssha/src/sha256');\n\n    var Blake256 = require('./blake256');\n\n    var keccak256 = require('./sha3')['keccak256'];\n\n    var Blake2B = require('./blake2b');\n\n    function numberToHex(number) {\n      var hex = Math.round(number).toString(16);\n\n      if (hex.length === 1) {\n        hex = '0' + hex;\n      }\n\n      return hex;\n    }\n\n    function hexToUint8(hexString) {\n      var arr = [];\n\n      for (var i = 0; i < hexString.length; i += 2) {\n        arr.push(parseInt(hexString.substr(i, 2), 16));\n      }\n\n      return new Uint8Array(arr);\n    }\n\n    module.exports = {\n      toHex: function (arrayOfBytes) {\n        var hex = '';\n\n        for (var i = 0; i < arrayOfBytes.length; i++) {\n          hex += numberToHex(arrayOfBytes[i]);\n        }\n\n        return hex;\n      },\n      sha256: function (hexString) {\n        var sha = new jsSHA('SHA-256', 'HEX');\n        sha.update(hexString);\n        return sha.getHash('HEX');\n      },\n      sha256Checksum: function (payload) {\n        return this.sha256(this.sha256(payload)).substr(0, 8);\n      },\n      blake256: function (hexString) {\n        return new Blake256().update(hexString, 'hex').digest('hex');\n      },\n      blake256Checksum: function (payload) {\n        return this.blake256(this.blake256(payload)).substr(0, 8);\n      },\n      blake2b: function (hexString, outlen) {\n        return new Blake2B(outlen).update(hexToUint8(hexString)).digest('hex');\n      },\n      keccak256: function (hexString) {\n        return keccak256(hexString);\n      },\n      keccak256Checksum: function (payload) {\n        return keccak256(payload).toString().substr(0, 8);\n      }\n    };\n  }, {\n    \"./blake256\": 8,\n    \"./blake2b\": 9,\n    \"./sha3\": 12,\n    \"jssha/src/sha256\": 2\n  }],\n  14: [function (require, module, exports) {\n    var XRPValidator = require('./ripple_validator');\n\n    var ETHValidator = require('./ethereum_validator');\n\n    var BTCValidator = require('./bitcoin_validator');\n\n    var XMRValidator = require('./monero_validator');\n\n    var NANOValidator = require('./nano_validator'); // defines P2PKH and P2SH address types for standard (prod) and testnet networks\n\n\n    var CURRENCIES = [{\n      name: 'bitcoin',\n      symbol: 'btc',\n      addressTypes: {\n        prod: ['00', '05'],\n        testnet: ['6f', 'c4']\n      },\n      validator: BTCValidator\n    }, {\n      name: 'bitcoincash',\n      symbol: 'bch',\n      addressTypes: {\n        prod: ['00', '05'],\n        testnet: ['6f', 'c4']\n      },\n      validator: BTCValidator\n    }, {\n      name: 'litecoin',\n      symbol: 'ltc',\n      addressTypes: {\n        prod: ['30', '05', '32'],\n        testnet: ['6f', 'c4', '3a']\n      },\n      validator: BTCValidator\n    }, {\n      name: 'peercoin',\n      symbol: 'ppc',\n      addressTypes: {\n        prod: ['37', '75'],\n        testnet: ['6f', 'c4']\n      },\n      validator: BTCValidator\n    }, {\n      name: 'dogecoin',\n      symbol: 'doge',\n      addressTypes: {\n        prod: ['1e', '16'],\n        testnet: ['71', 'c4']\n      },\n      validator: BTCValidator\n    }, {\n      name: 'beavercoin',\n      symbol: 'bvc',\n      addressTypes: {\n        prod: ['19', '05'],\n        testnet: ['6f', 'c4']\n      },\n      validator: BTCValidator\n    }, {\n      name: 'freicoin',\n      symbol: 'frc',\n      addressTypes: {\n        prod: ['00', '05'],\n        testnet: ['6f', 'c4']\n      },\n      validator: BTCValidator\n    }, {\n      name: 'protoshares',\n      symbol: 'pts',\n      addressTypes: {\n        prod: ['38', '05'],\n        testnet: ['6f', 'c4']\n      },\n      validator: BTCValidator\n    }, {\n      name: 'megacoin',\n      symbol: 'mec',\n      addressTypes: {\n        prod: ['32', '05'],\n        testnet: ['6f', 'c4']\n      },\n      validator: BTCValidator\n    }, {\n      name: 'primecoin',\n      symbol: 'xpm',\n      addressTypes: {\n        prod: ['17', '53'],\n        testnet: ['6f', 'c4']\n      },\n      validator: BTCValidator\n    }, {\n      name: 'auroracoin',\n      symbol: 'aur',\n      addressTypes: {\n        prod: ['17', '05'],\n        testnet: ['6f', 'c4']\n      },\n      validator: BTCValidator\n    }, {\n      name: 'namecoin',\n      symbol: 'nmc',\n      addressTypes: {\n        prod: ['34'],\n        testnet: []\n      },\n      validator: BTCValidator\n    }, {\n      name: 'biocoin',\n      symbol: 'bio',\n      addressTypes: {\n        prod: ['19', '14'],\n        testnet: ['6f', 'c4']\n      },\n      validator: BTCValidator\n    }, {\n      name: 'garlicoin',\n      symbol: 'grlc',\n      addressTypes: {\n        prod: ['26', '05'],\n        testnet: ['6f', 'c4']\n      },\n      validator: BTCValidator\n    }, {\n      name: 'vertcoin',\n      symbol: 'vtc',\n      addressTypes: {\n        prod: ['0x', '47'],\n        testnet: ['6f', 'c4']\n      },\n      segwitHrp: 'vtc',\n      validator: BTCValidator\n    }, {\n      name: 'bitcoingold',\n      symbol: 'btg',\n      addressTypes: {\n        prod: ['26', '17'],\n        testnet: ['6f', 'c4']\n      },\n      validator: BTCValidator\n    }, {\n      name: 'komodo',\n      symbol: 'kmd',\n      addressTypes: {\n        prod: ['3c', '55'],\n        testnet: ['0', '5']\n      },\n      validator: BTCValidator\n    }, {\n      name: 'bitcoinz',\n      symbol: 'btcz',\n      expectedLength: 26,\n      addressTypes: {\n        prod: ['1cb8', '1cbd'],\n        testnet: ['1d25', '1cba']\n      },\n      validator: BTCValidator\n    }, {\n      name: 'bitcoinprivate',\n      symbol: 'btcp',\n      expectedLength: 26,\n      addressTypes: {\n        prod: ['1325', '13af'],\n        testnet: ['1957', '19e0']\n      },\n      validator: BTCValidator\n    }, {\n      name: 'hush',\n      symbol: 'hush',\n      expectedLength: 26,\n      addressTypes: {\n        prod: ['1cb8', '1cbd'],\n        testnet: ['1d25', '1cba']\n      },\n      validator: BTCValidator\n    }, {\n      name: 'snowgem',\n      symbol: 'sng',\n      expectedLength: 26,\n      addressTypes: {\n        prod: ['1c28', '1c2d'],\n        testnet: ['1d25', '1cba']\n      },\n      validator: BTCValidator\n    }, {\n      name: 'zcash',\n      symbol: 'zec',\n      expectedLength: 26,\n      addressTypes: {\n        prod: ['1cb8', '1cbd'],\n        testnet: ['1d25', '1cba']\n      },\n      validator: BTCValidator\n    }, {\n      name: 'zclassic',\n      symbol: 'zcl',\n      expectedLength: 26,\n      addressTypes: {\n        prod: ['1cb8', '1cbd'],\n        testnet: ['1d25', '1cba']\n      },\n      validator: BTCValidator\n    }, {\n      name: 'zencash',\n      symbol: 'zen',\n      expectedLength: 26,\n      addressTypes: {\n        prod: ['2089', '2096'],\n        testnet: ['2092', '2098']\n      },\n      validator: BTCValidator\n    }, {\n      name: 'votecoin',\n      symbol: 'vot',\n      expectedLength: 26,\n      addressTypes: {\n        prod: ['1cb8', '1cbd'],\n        testnet: ['1d25', '1cba']\n      },\n      validator: BTCValidator\n    }, {\n      name: 'decred',\n      symbol: 'dcr',\n      addressTypes: {\n        prod: ['073f', '071a'],\n        testnet: ['0f21', '0efc']\n      },\n      hashFunction: 'blake256',\n      expectedLength: 26,\n      validator: BTCValidator\n    }, {\n      name: 'digibyte',\n      symbol: 'dgb',\n      addressTypes: {\n        prod: ['1e'],\n        testnet: []\n      },\n      validator: BTCValidator\n    }, {\n      name: 'ethereum',\n      symbol: 'eth',\n      validator: ETHValidator\n    }, {\n      name: 'etherzero',\n      symbol: 'etz',\n      validator: ETHValidator\n    }, {\n      name: 'ethereumclassic',\n      symbol: 'etc',\n      validator: ETHValidator\n    }, {\n      name: 'callisto',\n      symbol: 'clo',\n      validator: ETHValidator\n    }, {\n      name: 'ripple',\n      symbol: 'xrp',\n      validator: XRPValidator\n    }, {\n      name: 'dash',\n      symbol: 'dash',\n      addressTypes: {\n        prod: ['4c', '10'],\n        testnet: ['8c', '13']\n      },\n      validator: BTCValidator\n    }, {\n      name: 'neo',\n      symbol: 'neo',\n      addressTypes: {\n        prod: ['17'],\n        testnet: []\n      },\n      validator: BTCValidator\n    }, {\n      name: 'neogas',\n      symbol: 'gas',\n      addressTypes: {\n        prod: ['17'],\n        testnet: []\n      },\n      validator: BTCValidator\n    }, {\n      name: 'qtum',\n      symbol: 'qtum',\n      addressTypes: {\n        prod: ['3a', '32'],\n        testnet: ['78', '6e']\n      },\n      validator: BTCValidator\n    }, {\n      name: 'bankex',\n      symbol: 'bkx',\n      validator: ETHValidator\n    }, {\n      name: 'monero',\n      symbol: 'xmr',\n      addressTypes: {\n        prod: ['18'],\n        testnet: ['53']\n      },\n      iAddressTypes: {\n        prod: ['19'],\n        testnet: ['54']\n      },\n      validator: XMRValidator\n    }, {\n      name: 'nano',\n      symbol: 'nano',\n      validator: NANOValidator\n    }, {\n      name: 'raiblocks',\n      symbol: 'xrb',\n      validator: NANOValidator\n    }];\n    module.exports = {\n      getByNameOrSymbol: function (currencyNameOrSymbol) {\n        var nameOrSymbol = currencyNameOrSymbol.toLowerCase();\n\n        for (var i = 0; i < CURRENCIES.length; i++) {\n          var currency = CURRENCIES[i];\n\n          if (currency.name === nameOrSymbol || currency.symbol === nameOrSymbol) {\n            return currency;\n          }\n        }\n\n        return null;\n      }\n    };\n  }, {\n    \"./bitcoin_validator\": 4,\n    \"./ethereum_validator\": 15,\n    \"./monero_validator\": 16,\n    \"./nano_validator\": 17,\n    \"./ripple_validator\": 18\n  }],\n  15: [function (require, module, exports) {\n    var cryptoUtils = require('./crypto/utils');\n\n    module.exports = {\n      isValidAddress: function (address) {\n        if (!/^0x[0-9a-fA-F]{40}$/.test(address)) {\n          // Check if it has the basic requirements of an address\n          return false;\n        }\n\n        if (/^0x[0-9a-f]{40}$/.test(address) || /^0x?[0-9A-F]{40}$/.test(address)) {\n          // If it's all small caps or all all caps, return true\n          return true;\n        } // Otherwise check each case\n\n\n        return this.verifyChecksum(address);\n      },\n      verifyChecksum: function (address) {\n        // Check each case\n        address = address.replace('0x', '');\n        var addressHash = cryptoUtils.keccak256(address.toLowerCase());\n\n        for (var i = 0; i < 40; i++) {\n          // The nth letter should be uppercase if the nth digit of casemap is 1\n          if (parseInt(addressHash[i], 16) > 7 && address[i].toUpperCase() !== address[i] || parseInt(addressHash[i], 16) <= 7 && address[i].toLowerCase() !== address[i]) {\n            return false;\n          }\n        }\n\n        return true;\n      }\n    };\n  }, {\n    \"./crypto/utils\": 13\n  }],\n  16: [function (require, module, exports) {\n    var cryptoUtils = require('./crypto/utils');\n\n    var cnBase58 = require('./crypto/cnBase58');\n\n    var DEFAULT_NETWORK_TYPE = 'prod';\n    var addressRegTest = new RegExp('^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{95}$');\n    var integratedAddressRegTest = new RegExp('^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{106}$');\n\n    function validateNetwork(decoded, currency, networkType, addressType) {\n      var network = currency.addressTypes;\n\n      if (addressType == 'integrated') {\n        network = currency.iAddressTypes;\n      }\n\n      switch (networkType) {\n        case 'prod':\n          return parseInt(decoded.substr(0, 2), 16) == network.prod[0];\n\n        case 'testnet':\n          return parseInt(decoded.substr(0, 2), 16) == network.testnet[0];\n\n        case 'both':\n          return parseInt(decoded.substr(0, 2), 16) == network.prod[0] || parseInt(decoded.substr(0, 2), 16) == network.testnet[0];\n\n        default:\n          return false;\n      }\n    }\n\n    function hextobin(hex) {\n      if (hex.length % 2 !== 0) return null;\n      var res = new Uint8Array(hex.length / 2);\n\n      for (var i = 0; i < hex.length / 2; ++i) {\n        res[i] = parseInt(hex.slice(i * 2, i * 2 + 2), 16);\n      }\n\n      return res;\n    }\n\n    module.exports = {\n      isValidAddress: function (address, currency, networkType) {\n        networkType = networkType || DEFAULT_NETWORK_TYPE;\n        var addressType = 'standard';\n\n        if (!addressRegTest.test(address)) {\n          if (integratedAddressRegTest.test(address)) {\n            addressType = 'integrated';\n          } else {\n            return false;\n          }\n        }\n\n        var decodedAddrStr = cnBase58.decode(address);\n        if (!decodedAddrStr) return false;\n        if (!validateNetwork(decodedAddrStr, currency, networkType, addressType)) return false;\n        var addrChecksum = decodedAddrStr.slice(-8);\n        var hashChecksum = cryptoUtils.keccak256Checksum(hextobin(decodedAddrStr.slice(0, -8)));\n        return addrChecksum === hashChecksum;\n      }\n    };\n  }, {\n    \"./crypto/cnBase58\": 10,\n    \"./crypto/utils\": 13\n  }],\n  17: [function (require, module, exports) {\n    var cryptoUtils = require('./crypto/utils');\n\n    var baseX = require('base-x');\n\n    var ALLOWED_CHARS = '13456789abcdefghijkmnopqrstuwxyz';\n    var codec = baseX(ALLOWED_CHARS); // https://github.com/nanocurrency/raiblocks/wiki/Accounts,-Keys,-Seeds,-and-Wallet-Identifiers\n\n    var regexp = new RegExp('^(xrb|nano)_([' + ALLOWED_CHARS + ']{60})$');\n    module.exports = {\n      isValidAddress: function (address) {\n        if (regexp.test(address)) {\n          return this.verifyChecksum(address);\n        }\n\n        return false;\n      },\n      verifyChecksum: function (address) {\n        var bytes = codec.decode(regexp.exec(address)[2]).slice(-37); // https://github.com/nanocurrency/raiblocks/blob/master/rai/lib/numbers.cpp#L73\n\n        var computedChecksum = cryptoUtils.blake2b(cryptoUtils.toHex(bytes.slice(0, -5)), 5);\n        var checksum = cryptoUtils.toHex(bytes.slice(-5).reverse());\n        return computedChecksum === checksum;\n      }\n    };\n  }, {\n    \"./crypto/utils\": 13,\n    \"base-x\": 1\n  }],\n  18: [function (require, module, exports) {\n    var cryptoUtils = require('./crypto/utils');\n\n    var baseX = require('base-x');\n\n    var ALLOWED_CHARS = 'rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz';\n    var codec = baseX(ALLOWED_CHARS);\n    var regexp = new RegExp('^r[' + ALLOWED_CHARS + ']{27,35}$');\n    module.exports = {\n      /**\n       * ripple address validation\n       */\n      isValidAddress: function (address) {\n        if (regexp.test(address)) {\n          return this.verifyChecksum(address);\n        }\n\n        return false;\n      },\n      verifyChecksum: function (address) {\n        var bytes = codec.decode(address);\n        var computedChecksum = cryptoUtils.sha256Checksum(cryptoUtils.toHex(bytes.slice(0, -4)));\n        var checksum = cryptoUtils.toHex(bytes.slice(-4));\n        return computedChecksum === checksum;\n      }\n    };\n  }, {\n    \"./crypto/utils\": 13,\n    \"base-x\": 1\n  }],\n  19: [function (require, module, exports) {\n    var currencies = require('./currencies');\n\n    var DEFAULT_CURRENCY_NAME = 'bitcoin';\n    module.exports = {\n      validate: function (address, currencyNameOrSymbol, networkType) {\n        var currency = currencies.getByNameOrSymbol(currencyNameOrSymbol || DEFAULT_CURRENCY_NAME);\n\n        if (currency.validator) {\n          return currency.validator.isValidAddress(address, currency, networkType);\n        }\n\n        throw new Error('Missing validator for currency: ' + currencyNameOrSymbol);\n      }\n    };\n  }, {\n    \"./currencies\": 14\n  }],\n  20: [function (require, module, exports) {\n    WAValidator = require('wallet-address-validator');\n    module.exports = WAValidator;\n  }, {\n    \"wallet-address-validator\": 19\n  }],\n  21: [function (require, module, exports) {\n    'use strict';\n\n    exports.byteLength = byteLength;\n    exports.toByteArray = toByteArray;\n    exports.fromByteArray = fromByteArray;\n    var lookup = [];\n    var revLookup = [];\n    var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;\n    var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\n    for (var i = 0, len = code.length; i < len; ++i) {\n      lookup[i] = code[i];\n      revLookup[code.charCodeAt(i)] = i;\n    } // Support decoding URL-safe base64 strings, as Node.js does.\n    // See: https://en.wikipedia.org/wiki/Base64#URL_applications\n\n\n    revLookup['-'.charCodeAt(0)] = 62;\n    revLookup['_'.charCodeAt(0)] = 63;\n\n    function getLens(b64) {\n      var len = b64.length;\n\n      if (len % 4 > 0) {\n        throw new Error('Invalid string. Length must be a multiple of 4');\n      } // Trim off extra bytes after placeholder bytes are found\n      // See: https://github.com/beatgammit/base64-js/issues/42\n\n\n      var validLen = b64.indexOf('=');\n      if (validLen === -1) validLen = len;\n      var placeHoldersLen = validLen === len ? 0 : 4 - validLen % 4;\n      return [validLen, placeHoldersLen];\n    } // base64 is 4/3 + up to two characters of the original data\n\n\n    function byteLength(b64) {\n      var lens = getLens(b64);\n      var validLen = lens[0];\n      var placeHoldersLen = lens[1];\n      return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n    }\n\n    function _byteLength(b64, validLen, placeHoldersLen) {\n      return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n    }\n\n    function toByteArray(b64) {\n      var tmp;\n      var lens = getLens(b64);\n      var validLen = lens[0];\n      var placeHoldersLen = lens[1];\n      var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));\n      var curByte = 0; // if there are placeholders, only get up to the last complete 4 chars\n\n      var len = placeHoldersLen > 0 ? validLen - 4 : validLen;\n\n      for (var i = 0; i < len; i += 4) {\n        tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];\n        arr[curByte++] = tmp >> 16 & 0xFF;\n        arr[curByte++] = tmp >> 8 & 0xFF;\n        arr[curByte++] = tmp & 0xFF;\n      }\n\n      if (placeHoldersLen === 2) {\n        tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;\n        arr[curByte++] = tmp & 0xFF;\n      }\n\n      if (placeHoldersLen === 1) {\n        tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;\n        arr[curByte++] = tmp >> 8 & 0xFF;\n        arr[curByte++] = tmp & 0xFF;\n      }\n\n      return arr;\n    }\n\n    function tripletToBase64(num) {\n      return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F];\n    }\n\n    function encodeChunk(uint8, start, end) {\n      var tmp;\n      var output = [];\n\n      for (var i = start; i < end; i += 3) {\n        tmp = (uint8[i] << 16 & 0xFF0000) + (uint8[i + 1] << 8 & 0xFF00) + (uint8[i + 2] & 0xFF);\n        output.push(tripletToBase64(tmp));\n      }\n\n      return output.join('');\n    }\n\n    function fromByteArray(uint8) {\n      var tmp;\n      var len = uint8.length;\n      var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes\n\n      var parts = [];\n      var maxChunkLength = 16383; // must be multiple of 3\n      // go through the array every three bytes, we'll deal with trailing stuff later\n\n      for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n        parts.push(encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));\n      } // pad the end with zeros, but make sure to not forget the extra bytes\n\n\n      if (extraBytes === 1) {\n        tmp = uint8[len - 1];\n        parts.push(lookup[tmp >> 2] + lookup[tmp << 4 & 0x3F] + '==');\n      } else if (extraBytes === 2) {\n        tmp = (uint8[len - 2] << 8) + uint8[len - 1];\n        parts.push(lookup[tmp >> 10] + lookup[tmp >> 4 & 0x3F] + lookup[tmp << 2 & 0x3F] + '=');\n      }\n\n      return parts.join('');\n    }\n  }, {}],\n  22: [function (require, module, exports) {\n    /*!\n     * The buffer module from node.js, for the browser.\n     *\n     * @author   Feross Aboukhadijeh <https://feross.org>\n     * @license  MIT\n     */\n\n    /* eslint-disable no-proto */\n    'use strict';\n\n    var base64 = require('base64-js');\n\n    var ieee754 = require('ieee754');\n\n    exports.Buffer = Buffer;\n    exports.SlowBuffer = SlowBuffer;\n    exports.INSPECT_MAX_BYTES = 50;\n    var K_MAX_LENGTH = 0x7fffffff;\n    exports.kMaxLength = K_MAX_LENGTH;\n    /**\n     * If `Buffer.TYPED_ARRAY_SUPPORT`:\n     *   === true    Use Uint8Array implementation (fastest)\n     *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n     *               implementation (most compatible, even IE6)\n     *\n     * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n     * Opera 11.6+, iOS 4.2+.\n     *\n     * We report that the browser does not support typed arrays if the are not subclassable\n     * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n     * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n     * for __proto__ and has a buggy typed array implementation.\n     */\n\n    Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport();\n\n    if (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' && typeof console.error === 'function') {\n      console.error('This browser lacks typed array (Uint8Array) support which is required by ' + '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.');\n    }\n\n    function typedArraySupport() {\n      // Can typed array instances can be augmented?\n      try {\n        var arr = new Uint8Array(1);\n        arr.__proto__ = {\n          __proto__: Uint8Array.prototype,\n          foo: function () {\n            return 42;\n          }\n        };\n        return arr.foo() === 42;\n      } catch (e) {\n        return false;\n      }\n    }\n\n    Object.defineProperty(Buffer.prototype, 'parent', {\n      enumerable: true,\n      get: function () {\n        if (!Buffer.isBuffer(this)) return undefined;\n        return this.buffer;\n      }\n    });\n    Object.defineProperty(Buffer.prototype, 'offset', {\n      enumerable: true,\n      get: function () {\n        if (!Buffer.isBuffer(this)) return undefined;\n        return this.byteOffset;\n      }\n    });\n\n    function createBuffer(length) {\n      if (length > K_MAX_LENGTH) {\n        throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"');\n      } // Return an augmented `Uint8Array` instance\n\n\n      var buf = new Uint8Array(length);\n      buf.__proto__ = Buffer.prototype;\n      return buf;\n    }\n    /**\n     * The Buffer constructor returns instances of `Uint8Array` that have their\n     * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n     * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n     * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n     * returns a single octet.\n     *\n     * The `Uint8Array` prototype remains unmodified.\n     */\n\n\n    function Buffer(arg, encodingOrOffset, length) {\n      // Common case.\n      if (typeof arg === 'number') {\n        if (typeof encodingOrOffset === 'string') {\n          throw new TypeError('The \"string\" argument must be of type string. Received type number');\n        }\n\n        return allocUnsafe(arg);\n      }\n\n      return from(arg, encodingOrOffset, length);\n    } // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n\n\n    if (typeof Symbol !== 'undefined' && Symbol.species != null && Buffer[Symbol.species] === Buffer) {\n      Object.defineProperty(Buffer, Symbol.species, {\n        value: null,\n        configurable: true,\n        enumerable: false,\n        writable: false\n      });\n    }\n\n    Buffer.poolSize = 8192; // not used by this implementation\n\n    function from(value, encodingOrOffset, length) {\n      if (typeof value === 'string') {\n        return fromString(value, encodingOrOffset);\n      }\n\n      if (ArrayBuffer.isView(value)) {\n        return fromArrayLike(value);\n      }\n\n      if (value == null) {\n        throw TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' + 'or Array-like Object. Received type ' + typeof value);\n      }\n\n      if (isInstance(value, ArrayBuffer) || value && isInstance(value.buffer, ArrayBuffer)) {\n        return fromArrayBuffer(value, encodingOrOffset, length);\n      }\n\n      if (typeof value === 'number') {\n        throw new TypeError('The \"value\" argument must not be of type number. Received type number');\n      }\n\n      var valueOf = value.valueOf && value.valueOf();\n\n      if (valueOf != null && valueOf !== value) {\n        return Buffer.from(valueOf, encodingOrOffset, length);\n      }\n\n      var b = fromObject(value);\n      if (b) return b;\n\n      if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null && typeof value[Symbol.toPrimitive] === 'function') {\n        return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length);\n      }\n\n      throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' + 'or Array-like Object. Received type ' + typeof value);\n    }\n    /**\n     * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n     * if value is a number.\n     * Buffer.from(str[, encoding])\n     * Buffer.from(array)\n     * Buffer.from(buffer)\n     * Buffer.from(arrayBuffer[, byteOffset[, length]])\n     **/\n\n\n    Buffer.from = function (value, encodingOrOffset, length) {\n      return from(value, encodingOrOffset, length);\n    }; // Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n    // https://github.com/feross/buffer/pull/148\n\n\n    Buffer.prototype.__proto__ = Uint8Array.prototype;\n    Buffer.__proto__ = Uint8Array;\n\n    function assertSize(size) {\n      if (typeof size !== 'number') {\n        throw new TypeError('\"size\" argument must be of type number');\n      } else if (size < 0) {\n        throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"');\n      }\n    }\n\n    function alloc(size, fill, encoding) {\n      assertSize(size);\n\n      if (size <= 0) {\n        return createBuffer(size);\n      }\n\n      if (fill !== undefined) {\n        // Only pay attention to encoding if it's a string. This\n        // prevents accidentally sending in a number that would\n        // be interpretted as a start offset.\n        return typeof encoding === 'string' ? createBuffer(size).fill(fill, encoding) : createBuffer(size).fill(fill);\n      }\n\n      return createBuffer(size);\n    }\n    /**\n     * Creates a new filled Buffer instance.\n     * alloc(size[, fill[, encoding]])\n     **/\n\n\n    Buffer.alloc = function (size, fill, encoding) {\n      return alloc(size, fill, encoding);\n    };\n\n    function allocUnsafe(size) {\n      assertSize(size);\n      return createBuffer(size < 0 ? 0 : checked(size) | 0);\n    }\n    /**\n     * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n     * */\n\n\n    Buffer.allocUnsafe = function (size) {\n      return allocUnsafe(size);\n    };\n    /**\n     * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n     */\n\n\n    Buffer.allocUnsafeSlow = function (size) {\n      return allocUnsafe(size);\n    };\n\n    function fromString(string, encoding) {\n      if (typeof encoding !== 'string' || encoding === '') {\n        encoding = 'utf8';\n      }\n\n      if (!Buffer.isEncoding(encoding)) {\n        throw new TypeError('Unknown encoding: ' + encoding);\n      }\n\n      var length = byteLength(string, encoding) | 0;\n      var buf = createBuffer(length);\n      var actual = buf.write(string, encoding);\n\n      if (actual !== length) {\n        // Writing a hex string, for example, that contains invalid characters will\n        // cause everything after the first invalid character to be ignored. (e.g.\n        // 'abxxcd' will be treated as 'ab')\n        buf = buf.slice(0, actual);\n      }\n\n      return buf;\n    }\n\n    function fromArrayLike(array) {\n      var length = array.length < 0 ? 0 : checked(array.length) | 0;\n      var buf = createBuffer(length);\n\n      for (var i = 0; i < length; i += 1) {\n        buf[i] = array[i] & 255;\n      }\n\n      return buf;\n    }\n\n    function fromArrayBuffer(array, byteOffset, length) {\n      if (byteOffset < 0 || array.byteLength < byteOffset) {\n        throw new RangeError('\"offset\" is outside of buffer bounds');\n      }\n\n      if (array.byteLength < byteOffset + (length || 0)) {\n        throw new RangeError('\"length\" is outside of buffer bounds');\n      }\n\n      var buf;\n\n      if (byteOffset === undefined && length === undefined) {\n        buf = new Uint8Array(array);\n      } else if (length === undefined) {\n        buf = new Uint8Array(array, byteOffset);\n      } else {\n        buf = new Uint8Array(array, byteOffset, length);\n      } // Return an augmented `Uint8Array` instance\n\n\n      buf.__proto__ = Buffer.prototype;\n      return buf;\n    }\n\n    function fromObject(obj) {\n      if (Buffer.isBuffer(obj)) {\n        var len = checked(obj.length) | 0;\n        var buf = createBuffer(len);\n\n        if (buf.length === 0) {\n          return buf;\n        }\n\n        obj.copy(buf, 0, 0, len);\n        return buf;\n      }\n\n      if (obj.length !== undefined) {\n        if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n          return createBuffer(0);\n        }\n\n        return fromArrayLike(obj);\n      }\n\n      if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n        return fromArrayLike(obj.data);\n      }\n    }\n\n    function checked(length) {\n      // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n      // length is NaN (which is otherwise coerced to zero.)\n      if (length >= K_MAX_LENGTH) {\n        throw new RangeError('Attempt to allocate Buffer larger than maximum ' + 'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes');\n      }\n\n      return length | 0;\n    }\n\n    function SlowBuffer(length) {\n      if (+length != length) {\n        // eslint-disable-line eqeqeq\n        length = 0;\n      }\n\n      return Buffer.alloc(+length);\n    }\n\n    Buffer.isBuffer = function isBuffer(b) {\n      return b != null && b._isBuffer === true && b !== Buffer.prototype; // so Buffer.isBuffer(Buffer.prototype) will be false\n    };\n\n    Buffer.compare = function compare(a, b) {\n      if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength);\n      if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength);\n\n      if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n        throw new TypeError('The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array');\n      }\n\n      if (a === b) return 0;\n      var x = a.length;\n      var y = b.length;\n\n      for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n        if (a[i] !== b[i]) {\n          x = a[i];\n          y = b[i];\n          break;\n        }\n      }\n\n      if (x < y) return -1;\n      if (y < x) return 1;\n      return 0;\n    };\n\n    Buffer.isEncoding = function isEncoding(encoding) {\n      switch (String(encoding).toLowerCase()) {\n        case 'hex':\n        case 'utf8':\n        case 'utf-8':\n        case 'ascii':\n        case 'latin1':\n        case 'binary':\n        case 'base64':\n        case 'ucs2':\n        case 'ucs-2':\n        case 'utf16le':\n        case 'utf-16le':\n          return true;\n\n        default:\n          return false;\n      }\n    };\n\n    Buffer.concat = function concat(list, length) {\n      if (!Array.isArray(list)) {\n        throw new TypeError('\"list\" argument must be an Array of Buffers');\n      }\n\n      if (list.length === 0) {\n        return Buffer.alloc(0);\n      }\n\n      var i;\n\n      if (length === undefined) {\n        length = 0;\n\n        for (i = 0; i < list.length; ++i) {\n          length += list[i].length;\n        }\n      }\n\n      var buffer = Buffer.allocUnsafe(length);\n      var pos = 0;\n\n      for (i = 0; i < list.length; ++i) {\n        var buf = list[i];\n\n        if (isInstance(buf, Uint8Array)) {\n          buf = Buffer.from(buf);\n        }\n\n        if (!Buffer.isBuffer(buf)) {\n          throw new TypeError('\"list\" argument must be an Array of Buffers');\n        }\n\n        buf.copy(buffer, pos);\n        pos += buf.length;\n      }\n\n      return buffer;\n    };\n\n    function byteLength(string, encoding) {\n      if (Buffer.isBuffer(string)) {\n        return string.length;\n      }\n\n      if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n        return string.byteLength;\n      }\n\n      if (typeof string !== 'string') {\n        throw new TypeError('The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' + 'Received type ' + typeof string);\n      }\n\n      var len = string.length;\n      var mustMatch = arguments.length > 2 && arguments[2] === true;\n      if (!mustMatch && len === 0) return 0; // Use a for loop to avoid recursion\n\n      var loweredCase = false;\n\n      for (;;) {\n        switch (encoding) {\n          case 'ascii':\n          case 'latin1':\n          case 'binary':\n            return len;\n\n          case 'utf8':\n          case 'utf-8':\n            return utf8ToBytes(string).length;\n\n          case 'ucs2':\n          case 'ucs-2':\n          case 'utf16le':\n          case 'utf-16le':\n            return len * 2;\n\n          case 'hex':\n            return len >>> 1;\n\n          case 'base64':\n            return base64ToBytes(string).length;\n\n          default:\n            if (loweredCase) {\n              return mustMatch ? -1 : utf8ToBytes(string).length; // assume utf8\n            }\n\n            encoding = ('' + encoding).toLowerCase();\n            loweredCase = true;\n        }\n      }\n    }\n\n    Buffer.byteLength = byteLength;\n\n    function slowToString(encoding, start, end) {\n      var loweredCase = false; // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n      // property of a typed array.\n      // This behaves neither like String nor Uint8Array in that we set start/end\n      // to their upper/lower bounds if the value passed is out of range.\n      // undefined is handled specially as per ECMA-262 6th Edition,\n      // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n\n      if (start === undefined || start < 0) {\n        start = 0;\n      } // Return early if start > this.length. Done here to prevent potential uint32\n      // coercion fail below.\n\n\n      if (start > this.length) {\n        return '';\n      }\n\n      if (end === undefined || end > this.length) {\n        end = this.length;\n      }\n\n      if (end <= 0) {\n        return '';\n      } // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n\n\n      end >>>= 0;\n      start >>>= 0;\n\n      if (end <= start) {\n        return '';\n      }\n\n      if (!encoding) encoding = 'utf8';\n\n      while (true) {\n        switch (encoding) {\n          case 'hex':\n            return hexSlice(this, start, end);\n\n          case 'utf8':\n          case 'utf-8':\n            return utf8Slice(this, start, end);\n\n          case 'ascii':\n            return asciiSlice(this, start, end);\n\n          case 'latin1':\n          case 'binary':\n            return latin1Slice(this, start, end);\n\n          case 'base64':\n            return base64Slice(this, start, end);\n\n          case 'ucs2':\n          case 'ucs-2':\n          case 'utf16le':\n          case 'utf-16le':\n            return utf16leSlice(this, start, end);\n\n          default:\n            if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n            encoding = (encoding + '').toLowerCase();\n            loweredCase = true;\n        }\n      }\n    } // This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n    // to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n    // reliably in a browserify context because there could be multiple different\n    // copies of the 'buffer' package in use. This method works even for Buffer\n    // instances that were created from another copy of the `buffer` package.\n    // See: https://github.com/feross/buffer/issues/154\n\n\n    Buffer.prototype._isBuffer = true;\n\n    function swap(b, n, m) {\n      var i = b[n];\n      b[n] = b[m];\n      b[m] = i;\n    }\n\n    Buffer.prototype.swap16 = function swap16() {\n      var len = this.length;\n\n      if (len % 2 !== 0) {\n        throw new RangeError('Buffer size must be a multiple of 16-bits');\n      }\n\n      for (var i = 0; i < len; i += 2) {\n        swap(this, i, i + 1);\n      }\n\n      return this;\n    };\n\n    Buffer.prototype.swap32 = function swap32() {\n      var len = this.length;\n\n      if (len % 4 !== 0) {\n        throw new RangeError('Buffer size must be a multiple of 32-bits');\n      }\n\n      for (var i = 0; i < len; i += 4) {\n        swap(this, i, i + 3);\n        swap(this, i + 1, i + 2);\n      }\n\n      return this;\n    };\n\n    Buffer.prototype.swap64 = function swap64() {\n      var len = this.length;\n\n      if (len % 8 !== 0) {\n        throw new RangeError('Buffer size must be a multiple of 64-bits');\n      }\n\n      for (var i = 0; i < len; i += 8) {\n        swap(this, i, i + 7);\n        swap(this, i + 1, i + 6);\n        swap(this, i + 2, i + 5);\n        swap(this, i + 3, i + 4);\n      }\n\n      return this;\n    };\n\n    Buffer.prototype.toString = function toString() {\n      var length = this.length;\n      if (length === 0) return '';\n      if (arguments.length === 0) return utf8Slice(this, 0, length);\n      return slowToString.apply(this, arguments);\n    };\n\n    Buffer.prototype.toLocaleString = Buffer.prototype.toString;\n\n    Buffer.prototype.equals = function equals(b) {\n      if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer');\n      if (this === b) return true;\n      return Buffer.compare(this, b) === 0;\n    };\n\n    Buffer.prototype.inspect = function inspect() {\n      var str = '';\n      var max = exports.INSPECT_MAX_BYTES;\n      str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim();\n      if (this.length > max) str += ' ... ';\n      return '<Buffer ' + str + '>';\n    };\n\n    Buffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {\n      if (isInstance(target, Uint8Array)) {\n        target = Buffer.from(target, target.offset, target.byteLength);\n      }\n\n      if (!Buffer.isBuffer(target)) {\n        throw new TypeError('The \"target\" argument must be one of type Buffer or Uint8Array. ' + 'Received type ' + typeof target);\n      }\n\n      if (start === undefined) {\n        start = 0;\n      }\n\n      if (end === undefined) {\n        end = target ? target.length : 0;\n      }\n\n      if (thisStart === undefined) {\n        thisStart = 0;\n      }\n\n      if (thisEnd === undefined) {\n        thisEnd = this.length;\n      }\n\n      if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n        throw new RangeError('out of range index');\n      }\n\n      if (thisStart >= thisEnd && start >= end) {\n        return 0;\n      }\n\n      if (thisStart >= thisEnd) {\n        return -1;\n      }\n\n      if (start >= end) {\n        return 1;\n      }\n\n      start >>>= 0;\n      end >>>= 0;\n      thisStart >>>= 0;\n      thisEnd >>>= 0;\n      if (this === target) return 0;\n      var x = thisEnd - thisStart;\n      var y = end - start;\n      var len = Math.min(x, y);\n      var thisCopy = this.slice(thisStart, thisEnd);\n      var targetCopy = target.slice(start, end);\n\n      for (var i = 0; i < len; ++i) {\n        if (thisCopy[i] !== targetCopy[i]) {\n          x = thisCopy[i];\n          y = targetCopy[i];\n          break;\n        }\n      }\n\n      if (x < y) return -1;\n      if (y < x) return 1;\n      return 0;\n    }; // Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n    // OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n    //\n    // Arguments:\n    // - buffer - a Buffer to search\n    // - val - a string, Buffer, or number\n    // - byteOffset - an index into `buffer`; will be clamped to an int32\n    // - encoding - an optional encoding, relevant is val is a string\n    // - dir - true for indexOf, false for lastIndexOf\n\n\n    function bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {\n      // Empty buffer means no match\n      if (buffer.length === 0) return -1; // Normalize byteOffset\n\n      if (typeof byteOffset === 'string') {\n        encoding = byteOffset;\n        byteOffset = 0;\n      } else if (byteOffset > 0x7fffffff) {\n        byteOffset = 0x7fffffff;\n      } else if (byteOffset < -0x80000000) {\n        byteOffset = -0x80000000;\n      }\n\n      byteOffset = +byteOffset; // Coerce to Number.\n\n      if (numberIsNaN(byteOffset)) {\n        // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n        byteOffset = dir ? 0 : buffer.length - 1;\n      } // Normalize byteOffset: negative offsets start from the end of the buffer\n\n\n      if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n\n      if (byteOffset >= buffer.length) {\n        if (dir) return -1;else byteOffset = buffer.length - 1;\n      } else if (byteOffset < 0) {\n        if (dir) byteOffset = 0;else return -1;\n      } // Normalize val\n\n\n      if (typeof val === 'string') {\n        val = Buffer.from(val, encoding);\n      } // Finally, search either indexOf (if dir is true) or lastIndexOf\n\n\n      if (Buffer.isBuffer(val)) {\n        // Special case: looking for empty string/buffer always fails\n        if (val.length === 0) {\n          return -1;\n        }\n\n        return arrayIndexOf(buffer, val, byteOffset, encoding, dir);\n      } else if (typeof val === 'number') {\n        val = val & 0xFF; // Search for a byte value [0-255]\n\n        if (typeof Uint8Array.prototype.indexOf === 'function') {\n          if (dir) {\n            return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);\n          } else {\n            return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);\n          }\n        }\n\n        return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);\n      }\n\n      throw new TypeError('val must be string, number or Buffer');\n    }\n\n    function arrayIndexOf(arr, val, byteOffset, encoding, dir) {\n      var indexSize = 1;\n      var arrLength = arr.length;\n      var valLength = val.length;\n\n      if (encoding !== undefined) {\n        encoding = String(encoding).toLowerCase();\n\n        if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {\n          if (arr.length < 2 || val.length < 2) {\n            return -1;\n          }\n\n          indexSize = 2;\n          arrLength /= 2;\n          valLength /= 2;\n          byteOffset /= 2;\n        }\n      }\n\n      function read(buf, i) {\n        if (indexSize === 1) {\n          return buf[i];\n        } else {\n          return buf.readUInt16BE(i * indexSize);\n        }\n      }\n\n      var i;\n\n      if (dir) {\n        var foundIndex = -1;\n\n        for (i = byteOffset; i < arrLength; i++) {\n          if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n            if (foundIndex === -1) foundIndex = i;\n            if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;\n          } else {\n            if (foundIndex !== -1) i -= i - foundIndex;\n            foundIndex = -1;\n          }\n        }\n      } else {\n        if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n\n        for (i = byteOffset; i >= 0; i--) {\n          var found = true;\n\n          for (var j = 0; j < valLength; j++) {\n            if (read(arr, i + j) !== read(val, j)) {\n              found = false;\n              break;\n            }\n          }\n\n          if (found) return i;\n        }\n      }\n\n      return -1;\n    }\n\n    Buffer.prototype.includes = function includes(val, byteOffset, encoding) {\n      return this.indexOf(val, byteOffset, encoding) !== -1;\n    };\n\n    Buffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {\n      return bidirectionalIndexOf(this, val, byteOffset, encoding, true);\n    };\n\n    Buffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {\n      return bidirectionalIndexOf(this, val, byteOffset, encoding, false);\n    };\n\n    function hexWrite(buf, string, offset, length) {\n      offset = Number(offset) || 0;\n      var remaining = buf.length - offset;\n\n      if (!length) {\n        length = remaining;\n      } else {\n        length = Number(length);\n\n        if (length > remaining) {\n          length = remaining;\n        }\n      }\n\n      var strLen = string.length;\n\n      if (length > strLen / 2) {\n        length = strLen / 2;\n      }\n\n      for (var i = 0; i < length; ++i) {\n        var parsed = parseInt(string.substr(i * 2, 2), 16);\n        if (numberIsNaN(parsed)) return i;\n        buf[offset + i] = parsed;\n      }\n\n      return i;\n    }\n\n    function utf8Write(buf, string, offset, length) {\n      return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);\n    }\n\n    function asciiWrite(buf, string, offset, length) {\n      return blitBuffer(asciiToBytes(string), buf, offset, length);\n    }\n\n    function latin1Write(buf, string, offset, length) {\n      return asciiWrite(buf, string, offset, length);\n    }\n\n    function base64Write(buf, string, offset, length) {\n      return blitBuffer(base64ToBytes(string), buf, offset, length);\n    }\n\n    function ucs2Write(buf, string, offset, length) {\n      return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);\n    }\n\n    Buffer.prototype.write = function write(string, offset, length, encoding) {\n      // Buffer#write(string)\n      if (offset === undefined) {\n        encoding = 'utf8';\n        length = this.length;\n        offset = 0; // Buffer#write(string, encoding)\n      } else if (length === undefined && typeof offset === 'string') {\n        encoding = offset;\n        length = this.length;\n        offset = 0; // Buffer#write(string, offset[, length][, encoding])\n      } else if (isFinite(offset)) {\n        offset = offset >>> 0;\n\n        if (isFinite(length)) {\n          length = length >>> 0;\n          if (encoding === undefined) encoding = 'utf8';\n        } else {\n          encoding = length;\n          length = undefined;\n        }\n      } else {\n        throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');\n      }\n\n      var remaining = this.length - offset;\n      if (length === undefined || length > remaining) length = remaining;\n\n      if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {\n        throw new RangeError('Attempt to write outside buffer bounds');\n      }\n\n      if (!encoding) encoding = 'utf8';\n      var loweredCase = false;\n\n      for (;;) {\n        switch (encoding) {\n          case 'hex':\n            return hexWrite(this, string, offset, length);\n\n          case 'utf8':\n          case 'utf-8':\n            return utf8Write(this, string, offset, length);\n\n          case 'ascii':\n            return asciiWrite(this, string, offset, length);\n\n          case 'latin1':\n          case 'binary':\n            return latin1Write(this, string, offset, length);\n\n          case 'base64':\n            // Warning: maxLength not taken into account in base64Write\n            return base64Write(this, string, offset, length);\n\n          case 'ucs2':\n          case 'ucs-2':\n          case 'utf16le':\n          case 'utf-16le':\n            return ucs2Write(this, string, offset, length);\n\n          default:\n            if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n            encoding = ('' + encoding).toLowerCase();\n            loweredCase = true;\n        }\n      }\n    };\n\n    Buffer.prototype.toJSON = function toJSON() {\n      return {\n        type: 'Buffer',\n        data: Array.prototype.slice.call(this._arr || this, 0)\n      };\n    };\n\n    function base64Slice(buf, start, end) {\n      if (start === 0 && end === buf.length) {\n        return base64.fromByteArray(buf);\n      } else {\n        return base64.fromByteArray(buf.slice(start, end));\n      }\n    }\n\n    function utf8Slice(buf, start, end) {\n      end = Math.min(buf.length, end);\n      var res = [];\n      var i = start;\n\n      while (i < end) {\n        var firstByte = buf[i];\n        var codePoint = null;\n        var bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;\n\n        if (i + bytesPerSequence <= end) {\n          var secondByte, thirdByte, fourthByte, tempCodePoint;\n\n          switch (bytesPerSequence) {\n            case 1:\n              if (firstByte < 0x80) {\n                codePoint = firstByte;\n              }\n\n              break;\n\n            case 2:\n              secondByte = buf[i + 1];\n\n              if ((secondByte & 0xC0) === 0x80) {\n                tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;\n\n                if (tempCodePoint > 0x7F) {\n                  codePoint = tempCodePoint;\n                }\n              }\n\n              break;\n\n            case 3:\n              secondByte = buf[i + 1];\n              thirdByte = buf[i + 2];\n\n              if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n                tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;\n\n                if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n                  codePoint = tempCodePoint;\n                }\n              }\n\n              break;\n\n            case 4:\n              secondByte = buf[i + 1];\n              thirdByte = buf[i + 2];\n              fourthByte = buf[i + 3];\n\n              if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n                tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;\n\n                if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n                  codePoint = tempCodePoint;\n                }\n              }\n\n          }\n        }\n\n        if (codePoint === null) {\n          // we did not generate a valid codePoint so insert a\n          // replacement char (U+FFFD) and advance only 1 byte\n          codePoint = 0xFFFD;\n          bytesPerSequence = 1;\n        } else if (codePoint > 0xFFFF) {\n          // encode to utf16 (surrogate pair dance)\n          codePoint -= 0x10000;\n          res.push(codePoint >>> 10 & 0x3FF | 0xD800);\n          codePoint = 0xDC00 | codePoint & 0x3FF;\n        }\n\n        res.push(codePoint);\n        i += bytesPerSequence;\n      }\n\n      return decodeCodePointsArray(res);\n    } // Based on http://stackoverflow.com/a/22747272/680742, the browser with\n    // the lowest limit is Chrome, with 0x10000 args.\n    // We go 1 magnitude less, for safety\n\n\n    var MAX_ARGUMENTS_LENGTH = 0x1000;\n\n    function decodeCodePointsArray(codePoints) {\n      var len = codePoints.length;\n\n      if (len <= MAX_ARGUMENTS_LENGTH) {\n        return String.fromCharCode.apply(String, codePoints); // avoid extra slice()\n      } // Decode in chunks to avoid \"call stack size exceeded\".\n\n\n      var res = '';\n      var i = 0;\n\n      while (i < len) {\n        res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));\n      }\n\n      return res;\n    }\n\n    function asciiSlice(buf, start, end) {\n      var ret = '';\n      end = Math.min(buf.length, end);\n\n      for (var i = start; i < end; ++i) {\n        ret += String.fromCharCode(buf[i] & 0x7F);\n      }\n\n      return ret;\n    }\n\n    function latin1Slice(buf, start, end) {\n      var ret = '';\n      end = Math.min(buf.length, end);\n\n      for (var i = start; i < end; ++i) {\n        ret += String.fromCharCode(buf[i]);\n      }\n\n      return ret;\n    }\n\n    function hexSlice(buf, start, end) {\n      var len = buf.length;\n      if (!start || start < 0) start = 0;\n      if (!end || end < 0 || end > len) end = len;\n      var out = '';\n\n      for (var i = start; i < end; ++i) {\n        out += toHex(buf[i]);\n      }\n\n      return out;\n    }\n\n    function utf16leSlice(buf, start, end) {\n      var bytes = buf.slice(start, end);\n      var res = '';\n\n      for (var i = 0; i < bytes.length; i += 2) {\n        res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n      }\n\n      return res;\n    }\n\n    Buffer.prototype.slice = function slice(start, end) {\n      var len = this.length;\n      start = ~~start;\n      end = end === undefined ? len : ~~end;\n\n      if (start < 0) {\n        start += len;\n        if (start < 0) start = 0;\n      } else if (start > len) {\n        start = len;\n      }\n\n      if (end < 0) {\n        end += len;\n        if (end < 0) end = 0;\n      } else if (end > len) {\n        end = len;\n      }\n\n      if (end < start) end = start;\n      var newBuf = this.subarray(start, end); // Return an augmented `Uint8Array` instance\n\n      newBuf.__proto__ = Buffer.prototype;\n      return newBuf;\n    };\n    /*\n     * Need to make sure that buffer isn't trying to write out of bounds.\n     */\n\n\n    function checkOffset(offset, ext, length) {\n      if (offset % 1 !== 0 || offset < 0) throw new RangeError('offset is not uint');\n      if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length');\n    }\n\n    Buffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {\n      offset = offset >>> 0;\n      byteLength = byteLength >>> 0;\n      if (!noAssert) checkOffset(offset, byteLength, this.length);\n      var val = this[offset];\n      var mul = 1;\n      var i = 0;\n\n      while (++i < byteLength && (mul *= 0x100)) {\n        val += this[offset + i] * mul;\n      }\n\n      return val;\n    };\n\n    Buffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {\n      offset = offset >>> 0;\n      byteLength = byteLength >>> 0;\n\n      if (!noAssert) {\n        checkOffset(offset, byteLength, this.length);\n      }\n\n      var val = this[offset + --byteLength];\n      var mul = 1;\n\n      while (byteLength > 0 && (mul *= 0x100)) {\n        val += this[offset + --byteLength] * mul;\n      }\n\n      return val;\n    };\n\n    Buffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {\n      offset = offset >>> 0;\n      if (!noAssert) checkOffset(offset, 1, this.length);\n      return this[offset];\n    };\n\n    Buffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {\n      offset = offset >>> 0;\n      if (!noAssert) checkOffset(offset, 2, this.length);\n      return this[offset] | this[offset + 1] << 8;\n    };\n\n    Buffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {\n      offset = offset >>> 0;\n      if (!noAssert) checkOffset(offset, 2, this.length);\n      return this[offset] << 8 | this[offset + 1];\n    };\n\n    Buffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {\n      offset = offset >>> 0;\n      if (!noAssert) checkOffset(offset, 4, this.length);\n      return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;\n    };\n\n    Buffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {\n      offset = offset >>> 0;\n      if (!noAssert) checkOffset(offset, 4, this.length);\n      return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);\n    };\n\n    Buffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {\n      offset = offset >>> 0;\n      byteLength = byteLength >>> 0;\n      if (!noAssert) checkOffset(offset, byteLength, this.length);\n      var val = this[offset];\n      var mul = 1;\n      var i = 0;\n\n      while (++i < byteLength && (mul *= 0x100)) {\n        val += this[offset + i] * mul;\n      }\n\n      mul *= 0x80;\n      if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n      return val;\n    };\n\n    Buffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {\n      offset = offset >>> 0;\n      byteLength = byteLength >>> 0;\n      if (!noAssert) checkOffset(offset, byteLength, this.length);\n      var i = byteLength;\n      var mul = 1;\n      var val = this[offset + --i];\n\n      while (i > 0 && (mul *= 0x100)) {\n        val += this[offset + --i] * mul;\n      }\n\n      mul *= 0x80;\n      if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n      return val;\n    };\n\n    Buffer.prototype.readInt8 = function readInt8(offset, noAssert) {\n      offset = offset >>> 0;\n      if (!noAssert) checkOffset(offset, 1, this.length);\n      if (!(this[offset] & 0x80)) return this[offset];\n      return (0xff - this[offset] + 1) * -1;\n    };\n\n    Buffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {\n      offset = offset >>> 0;\n      if (!noAssert) checkOffset(offset, 2, this.length);\n      var val = this[offset] | this[offset + 1] << 8;\n      return val & 0x8000 ? val | 0xFFFF0000 : val;\n    };\n\n    Buffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {\n      offset = offset >>> 0;\n      if (!noAssert) checkOffset(offset, 2, this.length);\n      var val = this[offset + 1] | this[offset] << 8;\n      return val & 0x8000 ? val | 0xFFFF0000 : val;\n    };\n\n    Buffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {\n      offset = offset >>> 0;\n      if (!noAssert) checkOffset(offset, 4, this.length);\n      return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;\n    };\n\n    Buffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {\n      offset = offset >>> 0;\n      if (!noAssert) checkOffset(offset, 4, this.length);\n      return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];\n    };\n\n    Buffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {\n      offset = offset >>> 0;\n      if (!noAssert) checkOffset(offset, 4, this.length);\n      return ieee754.read(this, offset, true, 23, 4);\n    };\n\n    Buffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {\n      offset = offset >>> 0;\n      if (!noAssert) checkOffset(offset, 4, this.length);\n      return ieee754.read(this, offset, false, 23, 4);\n    };\n\n    Buffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {\n      offset = offset >>> 0;\n      if (!noAssert) checkOffset(offset, 8, this.length);\n      return ieee754.read(this, offset, true, 52, 8);\n    };\n\n    Buffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {\n      offset = offset >>> 0;\n      if (!noAssert) checkOffset(offset, 8, this.length);\n      return ieee754.read(this, offset, false, 52, 8);\n    };\n\n    function checkInt(buf, value, offset, ext, max, min) {\n      if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance');\n      if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds');\n      if (offset + ext > buf.length) throw new RangeError('Index out of range');\n    }\n\n    Buffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {\n      value = +value;\n      offset = offset >>> 0;\n      byteLength = byteLength >>> 0;\n\n      if (!noAssert) {\n        var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n        checkInt(this, value, offset, byteLength, maxBytes, 0);\n      }\n\n      var mul = 1;\n      var i = 0;\n      this[offset] = value & 0xFF;\n\n      while (++i < byteLength && (mul *= 0x100)) {\n        this[offset + i] = value / mul & 0xFF;\n      }\n\n      return offset + byteLength;\n    };\n\n    Buffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {\n      value = +value;\n      offset = offset >>> 0;\n      byteLength = byteLength >>> 0;\n\n      if (!noAssert) {\n        var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n        checkInt(this, value, offset, byteLength, maxBytes, 0);\n      }\n\n      var i = byteLength - 1;\n      var mul = 1;\n      this[offset + i] = value & 0xFF;\n\n      while (--i >= 0 && (mul *= 0x100)) {\n        this[offset + i] = value / mul & 0xFF;\n      }\n\n      return offset + byteLength;\n    };\n\n    Buffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {\n      value = +value;\n      offset = offset >>> 0;\n      if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);\n      this[offset] = value & 0xff;\n      return offset + 1;\n    };\n\n    Buffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {\n      value = +value;\n      offset = offset >>> 0;\n      if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n      this[offset] = value & 0xff;\n      this[offset + 1] = value >>> 8;\n      return offset + 2;\n    };\n\n    Buffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {\n      value = +value;\n      offset = offset >>> 0;\n      if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n      this[offset] = value >>> 8;\n      this[offset + 1] = value & 0xff;\n      return offset + 2;\n    };\n\n    Buffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {\n      value = +value;\n      offset = offset >>> 0;\n      if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n      this[offset + 3] = value >>> 24;\n      this[offset + 2] = value >>> 16;\n      this[offset + 1] = value >>> 8;\n      this[offset] = value & 0xff;\n      return offset + 4;\n    };\n\n    Buffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {\n      value = +value;\n      offset = offset >>> 0;\n      if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n      this[offset] = value >>> 24;\n      this[offset + 1] = value >>> 16;\n      this[offset + 2] = value >>> 8;\n      this[offset + 3] = value & 0xff;\n      return offset + 4;\n    };\n\n    Buffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {\n      value = +value;\n      offset = offset >>> 0;\n\n      if (!noAssert) {\n        var limit = Math.pow(2, 8 * byteLength - 1);\n        checkInt(this, value, offset, byteLength, limit - 1, -limit);\n      }\n\n      var i = 0;\n      var mul = 1;\n      var sub = 0;\n      this[offset] = value & 0xFF;\n\n      while (++i < byteLength && (mul *= 0x100)) {\n        if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n          sub = 1;\n        }\n\n        this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n      }\n\n      return offset + byteLength;\n    };\n\n    Buffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {\n      value = +value;\n      offset = offset >>> 0;\n\n      if (!noAssert) {\n        var limit = Math.pow(2, 8 * byteLength - 1);\n        checkInt(this, value, offset, byteLength, limit - 1, -limit);\n      }\n\n      var i = byteLength - 1;\n      var mul = 1;\n      var sub = 0;\n      this[offset + i] = value & 0xFF;\n\n      while (--i >= 0 && (mul *= 0x100)) {\n        if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n          sub = 1;\n        }\n\n        this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n      }\n\n      return offset + byteLength;\n    };\n\n    Buffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {\n      value = +value;\n      offset = offset >>> 0;\n      if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);\n      if (value < 0) value = 0xff + value + 1;\n      this[offset] = value & 0xff;\n      return offset + 1;\n    };\n\n    Buffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {\n      value = +value;\n      offset = offset >>> 0;\n      if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n      this[offset] = value & 0xff;\n      this[offset + 1] = value >>> 8;\n      return offset + 2;\n    };\n\n    Buffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {\n      value = +value;\n      offset = offset >>> 0;\n      if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n      this[offset] = value >>> 8;\n      this[offset + 1] = value & 0xff;\n      return offset + 2;\n    };\n\n    Buffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {\n      value = +value;\n      offset = offset >>> 0;\n      if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n      this[offset] = value & 0xff;\n      this[offset + 1] = value >>> 8;\n      this[offset + 2] = value >>> 16;\n      this[offset + 3] = value >>> 24;\n      return offset + 4;\n    };\n\n    Buffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {\n      value = +value;\n      offset = offset >>> 0;\n      if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n      if (value < 0) value = 0xffffffff + value + 1;\n      this[offset] = value >>> 24;\n      this[offset + 1] = value >>> 16;\n      this[offset + 2] = value >>> 8;\n      this[offset + 3] = value & 0xff;\n      return offset + 4;\n    };\n\n    function checkIEEE754(buf, value, offset, ext, max, min) {\n      if (offset + ext > buf.length) throw new RangeError('Index out of range');\n      if (offset < 0) throw new RangeError('Index out of range');\n    }\n\n    function writeFloat(buf, value, offset, littleEndian, noAssert) {\n      value = +value;\n      offset = offset >>> 0;\n\n      if (!noAssert) {\n        checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38);\n      }\n\n      ieee754.write(buf, value, offset, littleEndian, 23, 4);\n      return offset + 4;\n    }\n\n    Buffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {\n      return writeFloat(this, value, offset, true, noAssert);\n    };\n\n    Buffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {\n      return writeFloat(this, value, offset, false, noAssert);\n    };\n\n    function writeDouble(buf, value, offset, littleEndian, noAssert) {\n      value = +value;\n      offset = offset >>> 0;\n\n      if (!noAssert) {\n        checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308);\n      }\n\n      ieee754.write(buf, value, offset, littleEndian, 52, 8);\n      return offset + 8;\n    }\n\n    Buffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {\n      return writeDouble(this, value, offset, true, noAssert);\n    };\n\n    Buffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {\n      return writeDouble(this, value, offset, false, noAssert);\n    }; // copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\n\n\n    Buffer.prototype.copy = function copy(target, targetStart, start, end) {\n      if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer');\n      if (!start) start = 0;\n      if (!end && end !== 0) end = this.length;\n      if (targetStart >= target.length) targetStart = target.length;\n      if (!targetStart) targetStart = 0;\n      if (end > 0 && end < start) end = start; // Copy 0 bytes; we're done\n\n      if (end === start) return 0;\n      if (target.length === 0 || this.length === 0) return 0; // Fatal error conditions\n\n      if (targetStart < 0) {\n        throw new RangeError('targetStart out of bounds');\n      }\n\n      if (start < 0 || start >= this.length) throw new RangeError('Index out of range');\n      if (end < 0) throw new RangeError('sourceEnd out of bounds'); // Are we oob?\n\n      if (end > this.length) end = this.length;\n\n      if (target.length - targetStart < end - start) {\n        end = target.length - targetStart + start;\n      }\n\n      var len = end - start;\n\n      if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n        // Use built-in when available, missing from IE11\n        this.copyWithin(targetStart, start, end);\n      } else if (this === target && start < targetStart && targetStart < end) {\n        // descending copy from end\n        for (var i = len - 1; i >= 0; --i) {\n          target[i + targetStart] = this[i + start];\n        }\n      } else {\n        Uint8Array.prototype.set.call(target, this.subarray(start, end), targetStart);\n      }\n\n      return len;\n    }; // Usage:\n    //    buffer.fill(number[, offset[, end]])\n    //    buffer.fill(buffer[, offset[, end]])\n    //    buffer.fill(string[, offset[, end]][, encoding])\n\n\n    Buffer.prototype.fill = function fill(val, start, end, encoding) {\n      // Handle string cases:\n      if (typeof val === 'string') {\n        if (typeof start === 'string') {\n          encoding = start;\n          start = 0;\n          end = this.length;\n        } else if (typeof end === 'string') {\n          encoding = end;\n          end = this.length;\n        }\n\n        if (encoding !== undefined && typeof encoding !== 'string') {\n          throw new TypeError('encoding must be a string');\n        }\n\n        if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n          throw new TypeError('Unknown encoding: ' + encoding);\n        }\n\n        if (val.length === 1) {\n          var code = val.charCodeAt(0);\n\n          if (encoding === 'utf8' && code < 128 || encoding === 'latin1') {\n            // Fast path: If `val` fits into a single byte, use that numeric value.\n            val = code;\n          }\n        }\n      } else if (typeof val === 'number') {\n        val = val & 255;\n      } // Invalid ranges are not set to a default, so can range check early.\n\n\n      if (start < 0 || this.length < start || this.length < end) {\n        throw new RangeError('Out of range index');\n      }\n\n      if (end <= start) {\n        return this;\n      }\n\n      start = start >>> 0;\n      end = end === undefined ? this.length : end >>> 0;\n      if (!val) val = 0;\n      var i;\n\n      if (typeof val === 'number') {\n        for (i = start; i < end; ++i) {\n          this[i] = val;\n        }\n      } else {\n        var bytes = Buffer.isBuffer(val) ? val : Buffer.from(val, encoding);\n        var len = bytes.length;\n\n        if (len === 0) {\n          throw new TypeError('The value \"' + val + '\" is invalid for argument \"value\"');\n        }\n\n        for (i = 0; i < end - start; ++i) {\n          this[i + start] = bytes[i % len];\n        }\n      }\n\n      return this;\n    }; // HELPER FUNCTIONS\n    // ================\n\n\n    var INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g;\n\n    function base64clean(str) {\n      // Node takes equal signs as end of the Base64 encoding\n      str = str.split('=')[0]; // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n\n      str = str.trim().replace(INVALID_BASE64_RE, ''); // Node converts strings with length < 2 to ''\n\n      if (str.length < 2) return ''; // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n\n      while (str.length % 4 !== 0) {\n        str = str + '=';\n      }\n\n      return str;\n    }\n\n    function toHex(n) {\n      if (n < 16) return '0' + n.toString(16);\n      return n.toString(16);\n    }\n\n    function utf8ToBytes(string, units) {\n      units = units || Infinity;\n      var codePoint;\n      var length = string.length;\n      var leadSurrogate = null;\n      var bytes = [];\n\n      for (var i = 0; i < length; ++i) {\n        codePoint = string.charCodeAt(i); // is surrogate component\n\n        if (codePoint > 0xD7FF && codePoint < 0xE000) {\n          // last char was a lead\n          if (!leadSurrogate) {\n            // no lead yet\n            if (codePoint > 0xDBFF) {\n              // unexpected trail\n              if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n              continue;\n            } else if (i + 1 === length) {\n              // unpaired lead\n              if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n              continue;\n            } // valid lead\n\n\n            leadSurrogate = codePoint;\n            continue;\n          } // 2 leads in a row\n\n\n          if (codePoint < 0xDC00) {\n            if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n            leadSurrogate = codePoint;\n            continue;\n          } // valid surrogate pair\n\n\n          codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n        } else if (leadSurrogate) {\n          // valid bmp char, but last char was a lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n        }\n\n        leadSurrogate = null; // encode utf8\n\n        if (codePoint < 0x80) {\n          if ((units -= 1) < 0) break;\n          bytes.push(codePoint);\n        } else if (codePoint < 0x800) {\n          if ((units -= 2) < 0) break;\n          bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);\n        } else if (codePoint < 0x10000) {\n          if ((units -= 3) < 0) break;\n          bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n        } else if (codePoint < 0x110000) {\n          if ((units -= 4) < 0) break;\n          bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n        } else {\n          throw new Error('Invalid code point');\n        }\n      }\n\n      return bytes;\n    }\n\n    function asciiToBytes(str) {\n      var byteArray = [];\n\n      for (var i = 0; i < str.length; ++i) {\n        // Node's code seems to be doing this and not & 0x7F..\n        byteArray.push(str.charCodeAt(i) & 0xFF);\n      }\n\n      return byteArray;\n    }\n\n    function utf16leToBytes(str, units) {\n      var c, hi, lo;\n      var byteArray = [];\n\n      for (var i = 0; i < str.length; ++i) {\n        if ((units -= 2) < 0) break;\n        c = str.charCodeAt(i);\n        hi = c >> 8;\n        lo = c % 256;\n        byteArray.push(lo);\n        byteArray.push(hi);\n      }\n\n      return byteArray;\n    }\n\n    function base64ToBytes(str) {\n      return base64.toByteArray(base64clean(str));\n    }\n\n    function blitBuffer(src, dst, offset, length) {\n      for (var i = 0; i < length; ++i) {\n        if (i + offset >= dst.length || i >= src.length) break;\n        dst[i + offset] = src[i];\n      }\n\n      return i;\n    } // ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n    // the `instanceof` check but they should be treated as of that type.\n    // See: https://github.com/feross/buffer/issues/166\n\n\n    function isInstance(obj, type) {\n      return obj instanceof type || obj != null && obj.constructor != null && obj.constructor.name != null && obj.constructor.name === type.name;\n    }\n\n    function numberIsNaN(obj) {\n      // For IE11 support\n      return obj !== obj; // eslint-disable-line no-self-compare\n    }\n  }, {\n    \"base64-js\": 21,\n    \"ieee754\": 23\n  }],\n  23: [function (require, module, exports) {\n    exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n      var e, m;\n      var eLen = nBytes * 8 - mLen - 1;\n      var eMax = (1 << eLen) - 1;\n      var eBias = eMax >> 1;\n      var nBits = -7;\n      var i = isLE ? nBytes - 1 : 0;\n      var d = isLE ? -1 : 1;\n      var s = buffer[offset + i];\n      i += d;\n      e = s & (1 << -nBits) - 1;\n      s >>= -nBits;\n      nBits += eLen;\n\n      for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n      m = e & (1 << -nBits) - 1;\n      e >>= -nBits;\n      nBits += mLen;\n\n      for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n      if (e === 0) {\n        e = 1 - eBias;\n      } else if (e === eMax) {\n        return m ? NaN : (s ? -1 : 1) * Infinity;\n      } else {\n        m = m + Math.pow(2, mLen);\n        e = e - eBias;\n      }\n\n      return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n    };\n\n    exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n      var e, m, c;\n      var eLen = nBytes * 8 - mLen - 1;\n      var eMax = (1 << eLen) - 1;\n      var eBias = eMax >> 1;\n      var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;\n      var i = isLE ? 0 : nBytes - 1;\n      var d = isLE ? 1 : -1;\n      var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n      value = Math.abs(value);\n\n      if (isNaN(value) || value === Infinity) {\n        m = isNaN(value) ? 1 : 0;\n        e = eMax;\n      } else {\n        e = Math.floor(Math.log(value) / Math.LN2);\n\n        if (value * (c = Math.pow(2, -e)) < 1) {\n          e--;\n          c *= 2;\n        }\n\n        if (e + eBias >= 1) {\n          value += rt / c;\n        } else {\n          value += rt * Math.pow(2, 1 - eBias);\n        }\n\n        if (value * c >= 2) {\n          e++;\n          c /= 2;\n        }\n\n        if (e + eBias >= eMax) {\n          m = 0;\n          e = eMax;\n        } else if (e + eBias >= 1) {\n          m = (value * c - 1) * Math.pow(2, mLen);\n          e = e + eBias;\n        } else {\n          m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n          e = 0;\n        }\n      }\n\n      for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n      e = e << mLen | m;\n      eLen += mLen;\n\n      for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n      buffer[offset + i - d] |= s * 128;\n    };\n  }, {}],\n  24: [function (require, module, exports) {\n    // shim for using process in browser\n    var process = module.exports = {}; // cached from whatever global is present so that test runners that stub it\n    // don't break things.  But we need to wrap it in a try catch in case it is\n    // wrapped in strict mode code which doesn't define any globals.  It's inside a\n    // function because try/catches deoptimize in certain engines.\n\n    var cachedSetTimeout;\n    var cachedClearTimeout;\n\n    function defaultSetTimout() {\n      throw new Error('setTimeout has not been defined');\n    }\n\n    function defaultClearTimeout() {\n      throw new Error('clearTimeout has not been defined');\n    }\n\n    (function () {\n      try {\n        if (typeof setTimeout === 'function') {\n          cachedSetTimeout = setTimeout;\n        } else {\n          cachedSetTimeout = defaultSetTimout;\n        }\n      } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n      }\n\n      try {\n        if (typeof clearTimeout === 'function') {\n          cachedClearTimeout = clearTimeout;\n        } else {\n          cachedClearTimeout = defaultClearTimeout;\n        }\n      } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n      }\n    })();\n\n    function runTimeout(fun) {\n      if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n      } // if setTimeout wasn't available but was latter defined\n\n\n      if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n      }\n\n      try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n      } catch (e) {\n        try {\n          // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n          return cachedSetTimeout.call(null, fun, 0);\n        } catch (e) {\n          // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n          return cachedSetTimeout.call(this, fun, 0);\n        }\n      }\n    }\n\n    function runClearTimeout(marker) {\n      if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n      } // if clearTimeout wasn't available but was latter defined\n\n\n      if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n      }\n\n      try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n      } catch (e) {\n        try {\n          // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n          return cachedClearTimeout.call(null, marker);\n        } catch (e) {\n          // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n          // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n          return cachedClearTimeout.call(this, marker);\n        }\n      }\n    }\n\n    var queue = [];\n    var draining = false;\n    var currentQueue;\n    var queueIndex = -1;\n\n    function cleanUpNextTick() {\n      if (!draining || !currentQueue) {\n        return;\n      }\n\n      draining = false;\n\n      if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n      } else {\n        queueIndex = -1;\n      }\n\n      if (queue.length) {\n        drainQueue();\n      }\n    }\n\n    function drainQueue() {\n      if (draining) {\n        return;\n      }\n\n      var timeout = runTimeout(cleanUpNextTick);\n      draining = true;\n      var len = queue.length;\n\n      while (len) {\n        currentQueue = queue;\n        queue = [];\n\n        while (++queueIndex < len) {\n          if (currentQueue) {\n            currentQueue[queueIndex].run();\n          }\n        }\n\n        queueIndex = -1;\n        len = queue.length;\n      }\n\n      currentQueue = null;\n      draining = false;\n      runClearTimeout(timeout);\n    }\n\n    process.nextTick = function (fun) {\n      var args = new Array(arguments.length - 1);\n\n      if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n          args[i - 1] = arguments[i];\n        }\n      }\n\n      queue.push(new Item(fun, args));\n\n      if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n      }\n    }; // v8 likes predictible objects\n\n\n    function Item(fun, array) {\n      this.fun = fun;\n      this.array = array;\n    }\n\n    Item.prototype.run = function () {\n      this.fun.apply(null, this.array);\n    };\n\n    process.title = 'browser';\n    process.browser = true;\n    process.env = {};\n    process.argv = [];\n    process.version = ''; // empty string to avoid regexp issues\n\n    process.versions = {};\n\n    function noop() {}\n\n    process.on = noop;\n    process.addListener = noop;\n    process.once = noop;\n    process.off = noop;\n    process.removeListener = noop;\n    process.removeAllListeners = noop;\n    process.emit = noop;\n    process.prependListener = noop;\n    process.prependOnceListener = noop;\n\n    process.listeners = function (name) {\n      return [];\n    };\n\n    process.binding = function (name) {\n      throw new Error('process.binding is not supported');\n    };\n\n    process.cwd = function () {\n      return '/';\n    };\n\n    process.chdir = function (dir) {\n      throw new Error('process.chdir is not supported');\n    };\n\n    process.umask = function () {\n      return 0;\n    };\n  }, {}]\n}, {}, [20]);\nmodule.exports = WAValidator;","map":{"version":3,"sources":["C:/Users/rohat/Desktop/nft exercise/reactApp/src/wav.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","module","Buffer","base","ALPHABET","TypeError","BASE_MAP","Uint8Array","fill","x","charAt","xc","charCodeAt","BASE","LEADER","FACTOR","Math","log","iFACTOR","encode","source","isBuffer","zeroes","pbegin","pend","size","b58","carry","it","str","repeat","decodeUnsafe","alloc","psz","b256","vch","allocUnsafe","j","decode","string","buffer","I","w","d","l","b","g","k","h","q","y","m","z","encoding","numRounds","parseInt","lastIndexOf","A","push","slice","B","setHMACKey","binLen","value","update","getHash","C","D","E","F","ArrayBuffer","v","G","getHMAC","outputUpper","toUpperCase","b64Pad","String","fromCharCode","shakeLen","hasOwnProperty","substr","isNaN","search","indexOf","replace","byteLength","J","K","L","M","N","O","P","Q","R","Number","H","define","amd","jsSHA","copyProps","src","dst","key","from","allocUnsafeSlow","SafeBuffer","arg","encodingOrOffset","buf","undefined","SlowBuffer","base58","segwit","cryptoUtils","DEFAULT_NETWORK_TYPE","getDecoded","address","getChecksum","hashFunction","payload","blake256Checksum","sha256Checksum","getAddressType","currency","expectedLength","decoded","checksum","toHex","body","goodChecksum","isValidP2PKHandP2SHAddress","networkType","correctAddressTypes","addressType","addressTypes","prod","concat","testnet","isValidAddress","segwitHrp","ALPHABET_MAP","bytes","reverse","CHARSET","GENERATOR","polymod","values","chk","top","hrpExpand","hrp","ret","verifyChecksum","data","createChecksum","mod","combined","bechString","has_lower","has_upper","toLowerCase","pos","substring","CONSTRUCT","BigInteger","s","token","ZERO","parse","_d","_s","_construct","BigInteger_base","BigInteger_base_log10","base_log10","ONE","M_ONE","_0","_1","small","digits","split","prototype","toString","group","numerals","sign","abs","digit","divmod","divRem","valueOf","join","radixRegex","expandExponential","Array","prefixRE","parts","RegExp","exec","baseSection","test","splice","multiply","add","negate","subtract","al","bl","sum","max","min","compareAbs","diff","borrow","addOne","subtractOne","next","prev","isFinite","nl","compare","cmp","isUnit","square","pl","partial","bi","jlimit","multiplySingleDigit","imult1","product","quotient","divide","remainder","divRemSmall","b_digits","b_index","quot","guess","part","unshift","xlen","ylen","highx","highy","ceil","check","n_s","pop","isEven","isOdd","isPositive","isNegative","isZero","exp10","MAX_EXP","pow","shift","aux","two","modPow","exponent","modulus","result","Infinity","NaN","firstNdigits","toJSValue","lowVal","makeUnary","fn","makeBinary","makeTrinary","unary","binary","trinary","JSBigInt","Blake256","sigma","u256","padding","_length_carry","arr","block","_block","offset","_blockOffset","_length","_compress","zo","oo","rot","_h","_nullt","_zo","_oo","readUInt32BE","_padding","lo","hi","msglen","writeUInt32BE","digest","ADD64AA","o0","o1","ADD64AC","b0","b1","B2B_GET32","B2B_G","ix","iy","x0","x1","y0","y1","xor0","xor1","BLAKE2B_IV32","Uint32Array","SIGMA8","SIGMA82","map","blake2bCompress","ctx","last","parameter_block","Blake2b","outlen","salt","personal","set","blake2bUpdate","input","out","blake2bFinal","hexSlice","final","cnBase58","alphabet_str","alphabet","encoded_block_sizes","alphabet_size","full_block_size","full_encoded_block_size","UINT64_MAX","hextobin","hex","res","bintohex","bin","strtobin","bintostr","uint8_be_to_64","twopow8","uint64_to_8be","num","encode_block","index","div","full_block_count","floor","last_block_size","res_size","subarray","decode_block","res_num","order","enc","last_block_decoded_size","data_size","bech32","convertbits","frombits","tobits","pad","acc","bits","maxv","addr","dec","version","program","recreate","process","global","ERROR","WINDOW","window","root","JS_SHA3_NO_WINDOW","WEB_WORKER","self","NODE_JS","JS_SHA3_NO_NODE_JS","versions","node","ARRAY_BUFFER","JS_SHA3_NO_ARRAY_BUFFER","HEX_CHARS","SHAKE_PADDING","CSHAKE_PADDING","KECCAK_PADDING","PADDING","SHIFT","RC","BITS","SHAKE_BITS","OUTPUT_TYPES","CSHAKE_BYTEPAD","isArray","obj","Object","JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW","isView","constructor","createOutputMethod","outputType","message","Keccak","createShakeOutputMethod","outputBits","createCshakeOutputMethod","methods","createKmacOutputMethod","createOutputMethods","method","createMethod","type","create","createShakeMethod","createCshakeMethod","bytepad","createKmacMethod","Kmac","algorithms","name","methodNames","algorithm","methodName","newMethodName","blocks","reset","finalized","start","blockCount","byteCount","outputBlocks","extraBytes","notString","lastByteIndex","right","encodeString","strs","paddingBytes","zeros","finalize","arrayBuffer","array","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","b2","b3","b4","b5","b6","b7","b8","b9","b10","b11","b12","b13","b14","b15","b16","b17","b18","b19","b20","b21","b22","b23","b24","b25","b26","b27","b28","b29","b30","b31","b32","b33","b34","b35","b36","b37","b38","b39","b40","b41","b42","b43","b44","b45","b46","b47","b48","b49","keccak256","Blake2B","numberToHex","number","round","hexToUint8","hexString","arrayOfBytes","sha256","sha","blake256","blake2b","keccak256Checksum","XRPValidator","ETHValidator","BTCValidator","XMRValidator","NANOValidator","CURRENCIES","symbol","validator","iAddressTypes","getByNameOrSymbol","currencyNameOrSymbol","nameOrSymbol","addressHash","addressRegTest","integratedAddressRegTest","validateNetwork","network","decodedAddrStr","addrChecksum","hashChecksum","baseX","ALLOWED_CHARS","codec","regexp","computedChecksum","currencies","DEFAULT_CURRENCY_NAME","validate","WAValidator","toByteArray","fromByteArray","lookup","revLookup","Arr","len","getLens","b64","validLen","placeHoldersLen","lens","_byteLength","tmp","curByte","tripletToBase64","encodeChunk","uint8","end","output","maxChunkLength","len2","base64","ieee754","INSPECT_MAX_BYTES","K_MAX_LENGTH","kMaxLength","TYPED_ARRAY_SUPPORT","typedArraySupport","console","error","__proto__","foo","defineProperty","enumerable","get","byteOffset","createBuffer","RangeError","Symbol","species","configurable","writable","poolSize","fromString","fromArrayLike","isInstance","fromArrayBuffer","fromObject","toPrimitive","assertSize","checked","isEncoding","actual","write","copy","numberIsNaN","_isBuffer","list","mustMatch","arguments","loweredCase","utf8ToBytes","base64ToBytes","slowToString","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","swap16","swap32","swap64","apply","toLocaleString","equals","inspect","trim","target","thisStart","thisEnd","thisCopy","targetCopy","bidirectionalIndexOf","val","dir","arrayIndexOf","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","includes","hexWrite","remaining","strLen","parsed","utf8Write","blitBuffer","asciiWrite","asciiToBytes","latin1Write","base64Write","ucs2Write","utf16leToBytes","toJSON","_arr","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","MAX_ARGUMENTS_LENGTH","codePoints","newBuf","checkOffset","ext","readUIntLE","noAssert","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","checkInt","writeUIntLE","maxBytes","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","checkIEEE754","writeFloat","littleEndian","writeFloatLE","writeFloatBE","writeDouble","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","INVALID_BASE64_RE","base64clean","units","leadSurrogate","byteArray","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","rt","LN2","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","setTimeout","clearTimeout","runTimeout","fun","runClearTimeout","marker","queue","draining","currentQueue","queueIndex","cleanUpNextTick","drainQueue","timeout","run","nextTick","args","Item","title","browser","env","argv","noop","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","umask"],"mappings":"AAAA,CAAC,YAAU;AAAC,WAASA,CAAT,CAAWC,CAAX,EAAaC,CAAb,EAAeC,CAAf,EAAiB;AAAC,aAASC,CAAT,CAAWC,CAAX,EAAaC,CAAb,EAAe;AAAC,UAAG,CAACJ,CAAC,CAACG,CAAD,CAAL,EAAS;AAAC,YAAG,CAACJ,CAAC,CAACI,CAAD,CAAL,EAAS;AAAC,cAAIE,CAAC,GAAC,cAAY,OAAOC,OAAnB,IAA4BA,OAAlC;AAA0C,cAAG,CAACF,CAAD,IAAIC,CAAP,EAAS,OAAOA,CAAC,CAACF,CAAD,EAAG,CAAC,CAAJ,CAAR;AAAe,cAAGI,CAAH,EAAK,OAAOA,CAAC,CAACJ,CAAD,EAAG,CAAC,CAAJ,CAAR;AAAe,cAAIK,CAAC,GAAC,IAAIC,KAAJ,CAAU,yBAAuBN,CAAvB,GAAyB,GAAnC,CAAN;AAA8C,gBAAMK,CAAC,CAACE,IAAF,GAAO,kBAAP,EAA0BF,CAAhC;AAAkC;;AAAA,YAAIG,CAAC,GAACX,CAAC,CAACG,CAAD,CAAD,GAAK;AAACS,UAAAA,OAAO,EAAC;AAAT,SAAX;AAAwBb,QAAAA,CAAC,CAACI,CAAD,CAAD,CAAK,CAAL,EAAQU,IAAR,CAAaF,CAAC,CAACC,OAAf,EAAuB,UAASd,CAAT,EAAW;AAAC,cAAIE,CAAC,GAACD,CAAC,CAACI,CAAD,CAAD,CAAK,CAAL,EAAQL,CAAR,CAAN;AAAiB,iBAAOI,CAAC,CAACF,CAAC,IAAEF,CAAJ,CAAR;AAAe,SAAnE,EAAoEa,CAApE,EAAsEA,CAAC,CAACC,OAAxE,EAAgFd,CAAhF,EAAkFC,CAAlF,EAAoFC,CAApF,EAAsFC,CAAtF;AAAyF;;AAAA,aAAOD,CAAC,CAACG,CAAD,CAAD,CAAKS,OAAZ;AAAoB;;AAAA,SAAI,IAAIL,CAAC,GAAC,cAAY,OAAOD,OAAnB,IAA4BA,OAAlC,EAA0CH,CAAC,GAAC,CAAhD,EAAkDA,CAAC,GAACF,CAAC,CAACa,MAAtD,EAA6DX,CAAC,EAA9D,EAAiED,CAAC,CAACD,CAAC,CAACE,CAAD,CAAF,CAAD;;AAAQ,WAAOD,CAAP;AAAS;;AAAA,SAAOJ,CAAP;AAAS,CAAxc,IAA4c;AAAC,KAAE,CAAC,UAASQ,OAAT,EAAiBS,MAAjB,EAAwBH,OAAxB,EAAgC;AAC9e;AACA;AACA;AACA;AACA;AAEA,UAAMI,MAAM,GAAGV,OAAO,CAAC,aAAD,CAAP,CAAuBU,MAAtC;;AAEAD,IAAAA,MAAM,CAACH,OAAP,GAAiB,SAASK,IAAT,CAAeC,QAAf,EAAyB;AACxC,UAAIA,QAAQ,CAACJ,MAAT,IAAmB,GAAvB,EAA4B,MAAM,IAAIK,SAAJ,CAAc,mBAAd,CAAN;AAE5B,YAAMC,QAAQ,GAAG,IAAIC,UAAJ,CAAe,GAAf,CAAjB;AACAD,MAAAA,QAAQ,CAACE,IAAT,CAAc,GAAd;;AAEA,WAAK,IAAInB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGe,QAAQ,CAACJ,MAA7B,EAAqCX,CAAC,EAAtC,EAA0C;AACxC,cAAMoB,CAAC,GAAGL,QAAQ,CAACM,MAAT,CAAgBrB,CAAhB,CAAV;AACA,cAAMsB,EAAE,GAAGF,CAAC,CAACG,UAAF,CAAa,CAAb,CAAX;AAEA,YAAIN,QAAQ,CAACK,EAAD,CAAR,KAAiB,GAArB,EAA0B,MAAM,IAAIN,SAAJ,CAAcI,CAAC,GAAG,eAAlB,CAAN;AAC1BH,QAAAA,QAAQ,CAACK,EAAD,CAAR,GAAetB,CAAf;AACD;;AAED,YAAMwB,IAAI,GAAGT,QAAQ,CAACJ,MAAtB;AACA,YAAMc,MAAM,GAAGV,QAAQ,CAACM,MAAT,CAAgB,CAAhB,CAAf;AACA,YAAMK,MAAM,GAAGC,IAAI,CAACC,GAAL,CAASJ,IAAT,IAAiBG,IAAI,CAACC,GAAL,CAAS,GAAT,CAAhC,CAhBwC,CAgBM;;AAC9C,YAAMC,OAAO,GAAGF,IAAI,CAACC,GAAL,CAAS,GAAT,IAAgBD,IAAI,CAACC,GAAL,CAASJ,IAAT,CAAhC,CAjBwC,CAiBO;;AAE/C,eAASM,MAAT,CAAiBC,MAAjB,EAAyB;AACvB,YAAI,CAAClB,MAAM,CAACmB,QAAP,CAAgBD,MAAhB,CAAL,EAA8B,MAAM,IAAIf,SAAJ,CAAc,iBAAd,CAAN;AAC9B,YAAIe,MAAM,CAACpB,MAAP,KAAkB,CAAtB,EAAyB,OAAO,EAAP,CAFF,CAIvB;;AACA,YAAIsB,MAAM,GAAG,CAAb;AACA,YAAItB,MAAM,GAAG,CAAb;AACA,YAAIuB,MAAM,GAAG,CAAb;AACA,cAAMC,IAAI,GAAGJ,MAAM,CAACpB,MAApB;;AAEA,eAAOuB,MAAM,KAAKC,IAAX,IAAmBJ,MAAM,CAACG,MAAD,CAAN,KAAmB,CAA7C,EAAgD;AAC9CA,UAAAA,MAAM;AACND,UAAAA,MAAM;AACP,SAbsB,CAevB;;;AACA,cAAMG,IAAI,GAAI,CAACD,IAAI,GAAGD,MAAR,IAAkBL,OAAlB,GAA4B,CAA7B,KAAoC,CAAjD;AACA,cAAMQ,GAAG,GAAG,IAAInB,UAAJ,CAAekB,IAAf,CAAZ,CAjBuB,CAmBvB;;AACA,eAAOF,MAAM,KAAKC,IAAlB,EAAwB;AACtB,cAAIG,KAAK,GAAGP,MAAM,CAACG,MAAD,CAAlB,CADsB,CAGtB;;AACA,cAAIlC,CAAC,GAAG,CAAR;;AACA,eAAK,IAAIuC,EAAE,GAAGH,IAAI,GAAG,CAArB,EAAwB,CAACE,KAAK,KAAK,CAAV,IAAetC,CAAC,GAAGW,MAApB,KAAgC4B,EAAE,KAAK,CAAC,CAAhE,EAAoEA,EAAE,IAAIvC,CAAC,EAA3E,EAA+E;AAC7EsC,YAAAA,KAAK,IAAK,MAAMD,GAAG,CAACE,EAAD,CAAV,KAAoB,CAA7B;AACAF,YAAAA,GAAG,CAACE,EAAD,CAAH,GAAWD,KAAK,GAAGd,IAAT,KAAmB,CAA7B;AACAc,YAAAA,KAAK,GAAIA,KAAK,GAAGd,IAAT,KAAmB,CAA3B;AACD;;AAED,cAAIc,KAAK,KAAK,CAAd,EAAiB,MAAM,IAAIhC,KAAJ,CAAU,gBAAV,CAAN;AACjBK,UAAAA,MAAM,GAAGX,CAAT;AACAkC,UAAAA,MAAM;AACP,SAlCsB,CAoCvB;;;AACA,YAAIK,EAAE,GAAGH,IAAI,GAAGzB,MAAhB;;AACA,eAAO4B,EAAE,KAAKH,IAAP,IAAeC,GAAG,CAACE,EAAD,CAAH,KAAY,CAAlC,EAAqC;AACnCA,UAAAA,EAAE;AACH,SAxCsB,CA0CvB;;;AACA,YAAIC,GAAG,GAAGf,MAAM,CAACgB,MAAP,CAAcR,MAAd,CAAV;;AACA,eAAOM,EAAE,GAAGH,IAAZ,EAAkB,EAAEG,EAApB,EAAwBC,GAAG,IAAIzB,QAAQ,CAACM,MAAT,CAAgBgB,GAAG,CAACE,EAAD,CAAnB,CAAP;;AAExB,eAAOC,GAAP;AACD;;AAED,eAASE,YAAT,CAAuBX,MAAvB,EAA+B;AAC7B,YAAI,OAAOA,MAAP,KAAkB,QAAtB,EAAgC,MAAM,IAAIf,SAAJ,CAAc,iBAAd,CAAN;AAChC,YAAIe,MAAM,CAACpB,MAAP,KAAkB,CAAtB,EAAyB,OAAOE,MAAM,CAAC8B,KAAP,CAAa,CAAb,CAAP;AAEzB,YAAIC,GAAG,GAAG,CAAV,CAJ6B,CAM7B;;AACA,YAAIb,MAAM,CAACa,GAAD,CAAN,KAAgB,GAApB,EAAyB,OAPI,CAS7B;;AACA,YAAIX,MAAM,GAAG,CAAb;AACA,YAAItB,MAAM,GAAG,CAAb;;AACA,eAAOoB,MAAM,CAACa,GAAD,CAAN,KAAgBnB,MAAvB,EAA+B;AAC7BQ,UAAAA,MAAM;AACNW,UAAAA,GAAG;AACJ,SAf4B,CAiB7B;;;AACA,cAAMR,IAAI,GAAK,CAACL,MAAM,CAACpB,MAAP,GAAgBiC,GAAjB,IAAwBlB,MAAzB,GAAmC,CAApC,KAA2C,CAAxD,CAlB6B,CAkB6B;;AAC1D,cAAMmB,IAAI,GAAG,IAAI3B,UAAJ,CAAekB,IAAf,CAAb,CAnB6B,CAqB7B;;AACA,eAAOL,MAAM,CAACa,GAAD,CAAb,EAAoB;AAClB;AACA,cAAIN,KAAK,GAAGrB,QAAQ,CAACc,MAAM,CAACR,UAAP,CAAkBqB,GAAlB,CAAD,CAApB,CAFkB,CAIlB;;AACA,cAAIN,KAAK,KAAK,GAAd,EAAmB;AAEnB,cAAItC,CAAC,GAAG,CAAR;;AACA,eAAK,IAAIuC,EAAE,GAAGH,IAAI,GAAG,CAArB,EAAwB,CAACE,KAAK,KAAK,CAAV,IAAetC,CAAC,GAAGW,MAApB,KAAgC4B,EAAE,KAAK,CAAC,CAAhE,EAAoEA,EAAE,IAAIvC,CAAC,EAA3E,EAA+E;AAC7EsC,YAAAA,KAAK,IAAKd,IAAI,GAAGqB,IAAI,CAACN,EAAD,CAAZ,KAAsB,CAA/B;AACAM,YAAAA,IAAI,CAACN,EAAD,CAAJ,GAAYD,KAAK,GAAG,GAAT,KAAkB,CAA7B;AACAA,YAAAA,KAAK,GAAIA,KAAK,GAAG,GAAT,KAAkB,CAA1B;AACD;;AAED,cAAIA,KAAK,KAAK,CAAd,EAAiB,MAAM,IAAIhC,KAAJ,CAAU,gBAAV,CAAN;AACjBK,UAAAA,MAAM,GAAGX,CAAT;AACA4C,UAAAA,GAAG;AACJ,SAvC4B,CAyC7B;;;AACA,YAAIb,MAAM,CAACa,GAAD,CAAN,KAAgB,GAApB,EAAyB,OA1CI,CA4C7B;;AACA,YAAIL,EAAE,GAAGH,IAAI,GAAGzB,MAAhB;;AACA,eAAO4B,EAAE,KAAKH,IAAP,IAAeS,IAAI,CAACN,EAAD,CAAJ,KAAa,CAAnC,EAAsC;AACpCA,UAAAA,EAAE;AACH;;AAED,cAAMO,GAAG,GAAGjC,MAAM,CAACkC,WAAP,CAAmBd,MAAM,IAAIG,IAAI,GAAGG,EAAX,CAAzB,CAAZ;AACAO,QAAAA,GAAG,CAAC3B,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkBc,MAAlB;AAEA,YAAIe,CAAC,GAAGf,MAAR;;AACA,eAAOM,EAAE,KAAKH,IAAd,EAAoB;AAClBU,UAAAA,GAAG,CAACE,CAAC,EAAF,CAAH,GAAWH,IAAI,CAACN,EAAE,EAAH,CAAf;AACD;;AAED,eAAOO,GAAP;AACD;;AAED,eAASG,MAAT,CAAiBC,MAAjB,EAAyB;AACvB,cAAMC,MAAM,GAAGT,YAAY,CAACQ,MAAD,CAA3B;AACA,YAAIC,MAAJ,EAAY,OAAOA,MAAP;AAEZ,cAAM,IAAI7C,KAAJ,CAAU,aAAakB,IAAb,GAAoB,YAA9B,CAAN;AACD;;AAED,aAAO;AACLM,QAAAA,MAAM,EAAEA,MADH;AAELY,QAAAA,YAAY,EAAEA,YAFT;AAGLO,QAAAA,MAAM,EAAEA;AAHH,OAAP;AAKD,KA7ID;AA+IC,GAxJ4c,EAwJ3c;AAAC,mBAAc;AAAf,GAxJ2c,CAAH;AAwJrb,KAAE,CAAC,UAAS9C,OAAT,EAAiBS,MAAjB,EAAwBH,OAAxB,EAAgC;AACxD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE;;AAAa,KAAC,UAAS2C,CAAT,EAAW;AAAC,eAASC,CAAT,CAAWnD,CAAX,EAAaG,CAAb,EAAeiD,CAAf,EAAiB;AAAC,YAAIC,CAAC,GAAC,CAAN;AAAA,YAAQC,CAAC,GAAC,EAAV;AAAA,YAAaC,CAAC,GAAC,CAAf;AAAA,YAAiBxD,CAAjB;AAAA,YAAmBJ,CAAnB;AAAA,YAAqB6D,CAArB;AAAA,YAAuB9D,CAAvB;AAAA,YAAyB+D,CAAzB;AAAA,YAA2BC,CAA3B;AAAA,YAA6BC,CAA7B;AAAA,YAA+BrD,CAA/B;AAAA,YAAiCsD,CAAC,GAAC,CAAC,CAApC;AAAA,YAAsChE,CAAC,GAAC,EAAxC;AAAA,YAA2CH,CAAC,GAAC,EAA7C;AAAA,YAAgDS,CAAhD;AAAA,YAAkD2D,CAAC,GAAC,CAAC,CAArD;AAAuDT,QAAAA,CAAC,GAACA,CAAC,IAAE,EAAL;AAAQrD,QAAAA,CAAC,GAACqD,CAAC,CAACU,QAAF,IAAY,MAAd;AAAqB5D,QAAAA,CAAC,GAACkD,CAAC,CAACW,SAAF,IAAa,CAAf;AAAiB,YAAG7D,CAAC,KAAG8D,QAAQ,CAAC9D,CAAD,EAAG,EAAH,CAAZ,IAAoB,IAAEA,CAAzB,EAA2B,MAAME,KAAK,CAAC,+BAAD,CAAX;AAA6C,YAAG,MAAIJ,CAAC,CAACiE,WAAF,CAAc,MAAd,EAAqB,CAArB,CAAP;AAA+B,cAAGP,CAAC,GAAC,UAASJ,CAAT,EAAWnD,CAAX,EAAa;AAAC,mBAAO+D,CAAC,CAACZ,CAAD,EAAGnD,CAAH,EAAKH,CAAL,CAAR;AAAgB,WAAhC,EAAiC2D,CAAC,GAAC,UAASL,CAAT,EAAWnD,CAAX,EAAakD,CAAb,EAAetD,CAAf,EAAiB;AAAC,gBAAIwD,CAAJ,EAAM7D,CAAN;AAAQ,gBAAG,cAAYM,CAAZ,IAAe,cAAYA,CAA9B,EAAgCuD,CAAC,GAAC,CAACpD,CAAC,GAAC,EAAF,KAAO,CAAP,IAAU,CAAX,IAAc,EAAhB,EAAmBT,CAAC,GAAC,EAArB,CAAhC,KAA6D,MAAMU,KAAK,CAAC,0CAAD,CAAX;;AAAwD,mBAAKkD,CAAC,CAAC7C,MAAF,IAAU8C,CAAf,GAAkBD,CAAC,CAACa,IAAF,CAAO,CAAP;;AAAUb,YAAAA,CAAC,CAACnD,CAAC,KAAG,CAAL,CAAD,IAAU,OAAK,KAAGA,CAAC,GAAC,EAApB;AAAuBA,YAAAA,CAAC,GAACA,CAAC,GAACkD,CAAJ;AAAMC,YAAAA,CAAC,CAACC,CAAD,CAAD,GAAKpD,CAAC,GAAC,UAAP;AACtemD,YAAAA,CAAC,CAACC,CAAC,GAAC,CAAH,CAAD,GAAOpD,CAAC,GAAC,UAAF,GAAa,CAApB;AAAsBkD,YAAAA,CAAC,GAACC,CAAC,CAAC7C,MAAJ;;AAAW,iBAAIN,CAAC,GAAC,CAAN,EAAQA,CAAC,GAACkD,CAAV,EAAYlD,CAAC,IAAET,CAAf,EAAiBK,CAAC,GAACmE,CAAC,CAACZ,CAAC,CAACc,KAAF,CAAQjE,CAAR,EAAUA,CAAC,GAACT,CAAZ,CAAD,EAAgBK,CAAhB,EAAkBC,CAAlB,CAAH;;AAAwB,gBAAG,cAAYA,CAAf,EAAiBsD,CAAC,GAAC,CAACvD,CAAC,CAAC,CAAD,CAAF,EAAMA,CAAC,CAAC,CAAD,CAAP,EAAWA,CAAC,CAAC,CAAD,CAAZ,EAAgBA,CAAC,CAAC,CAAD,CAAjB,EAAqBA,CAAC,CAAC,CAAD,CAAtB,EAA0BA,CAAC,CAAC,CAAD,CAA3B,EAA+BA,CAAC,CAAC,CAAD,CAAhC,CAAF,CAAjB,KAA6D,IAAG,cAAYC,CAAf,EAAiBsD,CAAC,GAACvD,CAAF,CAAjB,KAA0B,MAAMK,KAAK,CAAC,0CAAD,CAAX;AAAwD,mBAAOkD,CAAP;AAAS,WADyB,EACxBhD,CAAC,GAAC,UAASgD,CAAT,EAAW;AAAC,mBAAOA,CAAC,CAACc,KAAF,EAAP;AAAiB,WADP,EACQ,cAAYpE,CADvB,EACyByD,CAAC,GAAC,GAAF,EAAM/D,CAAC,GAAC,GAAR,CADzB,KAC0C,IAAG,cAAYM,CAAf,EAAiByD,CAAC,GAAC,GAAF,EAAM/D,CAAC,GAAC,GAAR,CAAjB,KAAkC,MAAMU,KAAK,CAAC,qCAAD,CAAX;AAD3G,eACmK,MAAMA,KAAK,CAAC,qCAAD,CAAX;AAAmDoD,QAAAA,CAAC,GAACa,CAAC,CAAClE,CAAD,EAAGJ,CAAH,CAAH;AAASJ,QAAAA,CAAC,GAACuB,CAAC,CAAClB,CAAD,CAAH;;AAAO,aAAKsE,UAAL,GAAgB,UAAShB,CAAT,EAAWnD,CAAX,EAAaoD,CAAb,EAAe;AAAC,cAAI7D,CAAJ;AAAM,cAAG,CAAC,CAAD,KAAKkE,CAAR,EAAU,MAAMxD,KAAK,CAAC,sBAAD,CAAX;AAC/e,cAAG,CAAC,CAAD,KAAKyD,CAAR,EAAU,MAAMzD,KAAK,CAAC,0CAAD,CAAX;AAAwDL,UAAAA,CAAC,GAAC,CAACwD,CAAC,IAAE,EAAJ,EAAQO,QAAR,IAAkB,MAApB;AAA2B3D,UAAAA,CAAC,GAACkE,CAAC,CAAClE,CAAD,EAAGJ,CAAH,CAAD,CAAOuD,CAAP,CAAF;AAAYA,UAAAA,CAAC,GAACnD,CAAC,CAACoE,MAAJ;AAAWpE,UAAAA,CAAC,GAACA,CAAC,CAACqE,KAAJ;AAAU9E,UAAAA,CAAC,GAAC+D,CAAC,KAAG,CAAN;AAAQF,UAAAA,CAAC,GAAC7D,CAAC,GAAC,CAAF,GAAI,CAAN;;AAAQ,cAAGA,CAAC,GAAC4D,CAAC,GAAC,CAAP,EAAS;AAAC,iBAAInD,CAAC,GAACwD,CAAC,CAACxD,CAAD,EAAGmD,CAAH,EAAK,CAAL,EAAOpC,CAAC,CAAClB,CAAD,CAAR,CAAP,EAAoBG,CAAC,CAACM,MAAF,IAAU8C,CAA9B,GAAiCpD,CAAC,CAACgE,IAAF,CAAO,CAAP;;AAAUhE,YAAAA,CAAC,CAACoD,CAAD,CAAD,IAAM,UAAN;AAAiB,WAAtE,MAA2E,IAAG7D,CAAC,GAAC4D,CAAC,GAAC,CAAP,EAAS;AAAC,mBAAKnD,CAAC,CAACM,MAAF,IAAU8C,CAAf,GAAkBpD,CAAC,CAACgE,IAAF,CAAO,CAAP;;AAAUhE,YAAAA,CAAC,CAACoD,CAAD,CAAD,IAAM,UAAN;AAAiB;;AAAA,eAAID,CAAC,GAAC,CAAN,EAAQA,CAAC,IAAEC,CAAX,EAAaD,CAAC,IAAE,CAAhB,EAAkB1D,CAAC,CAAC0D,CAAD,CAAD,GAAKnD,CAAC,CAACmD,CAAD,CAAD,GAAK,SAAV,EAAoB7D,CAAC,CAAC6D,CAAD,CAAD,GAAKnD,CAAC,CAACmD,CAAD,CAAD,GAAK,UAA9B;;AAAyC3D,UAAAA,CAAC,GAAC+D,CAAC,CAAC9D,CAAD,EAAGD,CAAH,CAAH;AAAS0D,UAAAA,CAAC,GAACI,CAAF;AAAIG,UAAAA,CAAC,GAAC,CAAC,CAAH;AAAK,SADkG;;AACjG,aAAKa,MAAL,GAAY,UAAStE,CAAT,EAAW;AAAC,cAAIH,CAAJ;AAAA,cAAMD,CAAN;AAAA,cAAQL,CAAR;AAAA,cAAU0D,CAAC,GAAC,CAAZ;AAAA,cAAc9C,CAAC,GAACmD,CAAC,KAAG,CAApB;AAAsBzD,UAAAA,CAAC,GAACwD,CAAC,CAACrD,CAAD,EAAGmD,CAAH,EAAKC,CAAL,CAAH;AAAWpD,UAAAA,CAAC,GAACH,CAAC,CAACuE,MAAJ;AAAWxE,UAAAA,CAAC,GAACC,CAAC,CAACwE,KAAJ;AAAUxE,UAAAA,CAAC,GAACG,CAAC,KAAG,CAAN;;AAAQ,eAAIT,CAAC,GAAC,CAAN,EAAQA,CAAC,GAACM,CAAV,EAAYN,CAAC,IAAEY,CAAf,EAAiB8C,CAAC,GAACK,CAAF,IAAKtD,CAAL,KAASR,CAAC,GAAC+D,CAAC,CAAC3D,CAAC,CAACqE,KAAF,CAAQ1E,CAAR,EAAUA,CAAC,GAACY,CAAZ,CAAD,EAAgBX,CAAhB,CAAH,EAAsByD,CAAC,IAAEK,CAAlC;;AAAqCJ,UAAAA,CAAC,IAAED,CAAH;AAAKE,UAAAA,CAAC,GAACvD,CAAC,CAACqE,KAAF,CAAQhB,CAAC,KAC1f,CADif,CAAF;AAC5eG,UAAAA,CAAC,GAACpD,CAAC,GAACsD,CAAJ;AAAMI,UAAAA,CAAC,GAAC,CAAC,CAAH;AAAK,SADgV;;AAC/U,aAAKa,OAAL,GAAa,UAASvE,CAAT,EAAWJ,CAAX,EAAa;AAAC,cAAIqD,CAAJ,EAAMK,CAAN,EAAQD,CAAR,EAAUE,CAAV;AAAY,cAAG,CAAC,CAAD,KAAKE,CAAR,EAAU,MAAMxD,KAAK,CAAC,4CAAD,CAAX;AAA0DoD,UAAAA,CAAC,GAACmB,CAAC,CAAC5E,CAAD,CAAH;;AAAO,kBAAOI,CAAP;AAAU,iBAAK,KAAL;AAAWiD,cAAAA,CAAC,GAAC,UAASjD,CAAT,EAAW;AAAC,uBAAOyE,CAAC,CAACzE,CAAD,EAAGT,CAAH,EAAK8D,CAAL,CAAR;AAAgB,eAA9B;;AAA+B;;AAAM,iBAAK,KAAL;AAAWJ,cAAAA,CAAC,GAAC,UAASjD,CAAT,EAAW;AAAC,uBAAO0E,CAAC,CAAC1E,CAAD,EAAGT,CAAH,EAAK8D,CAAL,CAAR;AAAgB,eAA9B;;AAA+B;;AAAM,iBAAK,OAAL;AAAaJ,cAAAA,CAAC,GAAC,UAASjD,CAAT,EAAW;AAAC,uBAAO2E,CAAC,CAAC3E,CAAD,EAAGT,CAAH,CAAR;AAAc,eAA5B;;AAA6B;;AAAM,iBAAK,aAAL;AAAmB,kBAAG;AAAC+D,gBAAAA,CAAC,GAAC,IAAIsB,WAAJ,CAAgB,CAAhB,CAAF;AAAqB,eAAzB,CAAyB,OAAMC,CAAN,EAAQ;AAAC,sBAAM5E,KAAK,CAAC,+CAAD,CAAX;AAA8D;;AAAAgD,cAAAA,CAAC,GAAC,UAASjD,CAAT,EAAW;AAAC,uBAAO8E,CAAC,CAAC9E,CAAD,EAAGT,CAAH,CAAR;AAAc,eAA5B;;AAA6B;;AAAM;AAAQ,oBAAMU,KAAK,CAAC,gDAAD,CAAX;AAAxT;;AAChIsD,UAAAA,CAAC,GAACC,CAAC,CAACL,CAAC,CAACc,KAAF,EAAD,EAAWb,CAAX,EAAaF,CAAb,EAAe/C,CAAC,CAACX,CAAD,CAAhB,CAAH;;AAAwB,eAAI8D,CAAC,GAAC,CAAN,EAAQA,CAAC,GAACvD,CAAV,EAAYuD,CAAC,IAAE,CAAf,EAAiBC,CAAC,GAACC,CAAC,CAACD,CAAD,EAAGhE,CAAH,EAAK,CAAL,EAAOwB,CAAC,CAAClB,CAAD,CAAR,CAAH;;AAAgB,iBAAOoD,CAAC,CAACM,CAAD,CAAR;AAAY,SADvD;;AACwD,aAAKwB,OAAL,GAAa,UAAS/E,CAAT,EAAWJ,CAAX,EAAa;AAAC,cAAIqD,CAAJ,EAAMI,CAAN,EAAQ5D,CAAR,EAAUM,CAAV;AAAY,cAAG,CAAC,CAAD,KAAK0D,CAAR,EAAU,MAAMxD,KAAK,CAAC,oDAAD,CAAX;AAAkER,UAAAA,CAAC,GAAC+E,CAAC,CAAC5E,CAAD,CAAH;;AAAO,kBAAOI,CAAP;AAAU,iBAAK,KAAL;AAAWiD,cAAAA,CAAC,GAAC,UAASjD,CAAT,EAAW;AAAC,uBAAOyE,CAAC,CAACzE,CAAD,EAAGT,CAAH,EAAKE,CAAL,CAAR;AAAgB,eAA9B;;AAA+B;;AAAM,iBAAK,KAAL;AAAWwD,cAAAA,CAAC,GAAC,UAASjD,CAAT,EAAW;AAAC,uBAAO0E,CAAC,CAAC1E,CAAD,EAAGT,CAAH,EAAKE,CAAL,CAAR;AAAgB,eAA9B;;AAA+B;;AAAM,iBAAK,OAAL;AAAawD,cAAAA,CAAC,GAAC,UAASjD,CAAT,EAAW;AAAC,uBAAO2E,CAAC,CAAC3E,CAAD,EAAGT,CAAH,CAAR;AAAc,eAA5B;;AAA6B;;AAAM,iBAAK,aAAL;AAAmB,kBAAG;AAAC0D,gBAAAA,CAAC,GAAC,IAAI2B,WAAJ,CAAgB,CAAhB,CAAF;AAAqB,eAAzB,CAAyB,OAAMC,CAAN,EAAQ;AAAC,sBAAM5E,KAAK,CAAC,+CAAD,CAAX;AAA8D;;AAAAgD,cAAAA,CAAC,GAAC,UAASjD,CAAT,EAAW;AAAC,uBAAO8E,CAAC,CAAC9E,CAAD,EAAGT,CAAH,CAAR;AAAc,eAA5B;;AAA6B;;AAAM;AAAQ,oBAAMU,KAAK,CAAC,sDAAD,CAAX;AAAxT;;AAChMoD,UAAAA,CAAC,GAACG,CAAC,CAACL,CAAC,CAACc,KAAF,EAAD,EAAWb,CAAX,EAAaF,CAAb,EAAe/C,CAAC,CAACX,CAAD,CAAhB,CAAH;AAAwBO,UAAAA,CAAC,GAACwD,CAAC,CAACjE,CAAD,EAAGyB,CAAC,CAAClB,CAAD,CAAJ,CAAH;AAAYE,UAAAA,CAAC,GAACyD,CAAC,CAACH,CAAD,EAAG9D,CAAH,EAAK+D,CAAL,EAAOvD,CAAP,CAAH;AAAa,iBAAOkD,CAAC,CAAClD,CAAD,CAAR;AAAY,SADS;AACR;;AAAA,eAAS0D,CAAT,GAAY,CAAE;;AAAA,eAASgB,CAAT,CAAW5E,CAAX,EAAaG,CAAb,EAAeiD,CAAf,EAAiB;AAAC,YAAIC,CAAC,GAAC,EAAN;AAASlD,QAAAA,CAAC,IAAE,CAAH;AAAK,YAAImD,CAAJ,EAAMC,CAAN;;AAAQ,aAAID,CAAC,GAAC,CAAN,EAAQA,CAAC,GAACnD,CAAV,EAAYmD,CAAC,IAAE,CAAf,EAAiBC,CAAC,GAACvD,CAAC,CAACsD,CAAC,KAAG,CAAL,CAAD,KAAW,KAAG,IAAEA,CAAC,GAAC,CAAF,GAAI,CAAC,CAAV,CAAb,EAA0BD,CAAC,IAAE,mBAAmBlC,MAAnB,CAA0BoC,CAAC,KAAG,CAAJ,GAAM,EAAhC,IAAoC,mBAAmBpC,MAAnB,CAA0BoC,CAAC,GAAC,EAA5B,CAAjE;;AAAiG,eAAOH,CAAC,CAAC+B,WAAF,GAAc9B,CAAC,CAAC+B,WAAF,EAAd,GAA8B/B,CAArC;AAAuC;;AAAA,eAASwB,CAAT,CAAW7E,CAAX,EAAaG,CAAb,EAAeiD,CAAf,EAAiB;AAAC,YAAIC,CAAC,GAAC,EAAN;AAAA,YAASC,CAAC,GAACnD,CAAC,GAAC,CAAb;AAAA,YAAeoD,CAAf;AAAA,YAAiBxD,CAAjB;AAAA,YAAmBJ,CAAnB;;AAAqB,aAAI4D,CAAC,GAAC,CAAN,EAAQA,CAAC,GAACD,CAAV,EAAYC,CAAC,IAAE,CAAf,EAAiB,KAAIxD,CAAC,GAACwD,CAAC,GAAC,CAAF,GAAID,CAAJ,GAAMtD,CAAC,CAACuD,CAAC,GAAC,CAAF,KAAM,CAAP,CAAP,GAAiB,CAAnB,EAAqB5D,CAAC,GAAC4D,CAAC,GAAC,CAAF,GAAID,CAAJ,GAAMtD,CAAC,CAACuD,CAAC,GAAC,CAAF,KAAM,CAAP,CAAP,GAAiB,CAAxC,EAA0C5D,CAAC,GAAC,CAACK,CAAC,CAACuD,CAAC,KAAG,CAAL,CAAD,KAAW,KAAG,IAAEA,CAAC,GAAC,CAAF,GAAI,CAAC,CAAV,CAAX,GAAwB,GAAzB,KAA+B,EAA/B,GAAkC,CAACxD,CAAC,KAAG,KAAG,IAAE,CAACwD,CAAC,GAAC,CAAH,IAAM,CAAN,GAAQ,CAAC,CAAd,CAAJ,GAAqB,GAAtB,KAA4B,CAA9D,GAAgE5D,CAAC,KAAG,KAAG,IAAE,CAAC4D,CAAC,GAAC,CAAH,IAAM,CAAN,GAAQ,CAAC,CAAd,CAAJ,GAAqB,GAAjI,EAAqIxD,CAAC,GAAC,CAA3I,EAA6I,IAAEA,CAA/I,EAAiJA,CAAC,IAAE,CAApJ,EAAsJ,IAAEwD,CAAF,GAAI,IAAExD,CAAN,IAASI,CAAT,GAAWkD,CAAC,IAAE,mEAAmElC,MAAnE,CAA0ExB,CAAC,KACrjB,KAAG,IAAEI,CAAL,CADojB,GAC5iB,EADke,CAAd,GAChdsD,CAAC,IAAED,CAAC,CAACiC,MAD2c;;AACpc,eAAOhC,CAAP;AAAS;;AAAA,eAASyB,CAAT,CAAW9E,CAAX,EAAaG,CAAb,EAAe;AAAC,YAAIiD,CAAC,GAAC,EAAN;AAAA,YAASC,CAAC,GAAClD,CAAC,GAAC,CAAb;AAAA,YAAemD,CAAf;AAAA,YAAiBC,CAAjB;;AAAmB,aAAID,CAAC,GAAC,CAAN,EAAQA,CAAC,GAACD,CAAV,EAAYC,CAAC,IAAE,CAAf,EAAiBC,CAAC,GAACvD,CAAC,CAACsD,CAAC,KAAG,CAAL,CAAD,KAAW,KAAG,IAAEA,CAAC,GAAC,CAAF,GAAI,CAAC,CAAV,CAAX,GAAwB,GAA1B,EAA8BF,CAAC,IAAEkC,MAAM,CAACC,YAAP,CAAoBhC,CAApB,CAAjC;;AAAwD,eAAOH,CAAP;AAAS;;AAAA,eAAS6B,CAAT,CAAWjF,CAAX,EAAaG,CAAb,EAAe;AAAC,YAAIiD,CAAC,GAACjD,CAAC,GAAC,CAAR;AAAA,YAAUkD,CAAV;AAAA,YAAYC,CAAC,GAAC,IAAIyB,WAAJ,CAAgB3B,CAAhB,CAAd;AAAA,YAAiCG,CAAjC;AAAmCA,QAAAA,CAAC,GAAC,IAAIvC,UAAJ,CAAesC,CAAf,CAAF;;AAAoB,aAAID,CAAC,GAAC,CAAN,EAAQA,CAAC,GAACD,CAAV,EAAYC,CAAC,IAAE,CAAf,EAAiBE,CAAC,CAACF,CAAD,CAAD,GAAKrD,CAAC,CAACqD,CAAC,KAAG,CAAL,CAAD,KAAW,KAAG,IAAEA,CAAC,GAAC,CAAF,GAAI,CAAC,CAAV,CAAX,GAAwB,GAA7B;;AAAiC,eAAOC,CAAP;AAAS;;AAAA,eAASqB,CAAT,CAAW3E,CAAX,EAAa;AAAC,YAAIG,CAAC,GAAC;AAACgF,UAAAA,WAAW,EAAC,CAAC,CAAd;AAAgBE,UAAAA,MAAM,EAAC,GAAvB;AAA2BG,UAAAA,QAAQ,EAAC,CAAC;AAArC,SAAN;AAA8CxF,QAAAA,CAAC,GAACA,CAAC,IAAE,EAAL;AAAQG,QAAAA,CAAC,CAACgF,WAAF,GAAcnF,CAAC,CAACmF,WAAF,IAAe,CAAC,CAA9B;AAAgC,SAAC,CAAD,KAAKnF,CAAC,CAACyF,cAAF,CAAiB,QAAjB,CAAL,KAAkCtF,CAAC,CAACkF,MAAF,GAASrF,CAAC,CAACqF,MAA7C;AAAqD,YAAG,cAAY,OAAOlF,CAAC,CAACgF,WAAxB,EAAoC,MAAM/E,KAAK,CAAC,uCAAD,CAAX;AACrd,YAAG,aAAW,OAAOD,CAAC,CAACkF,MAAvB,EAA8B,MAAMjF,KAAK,CAAC,kCAAD,CAAX;AAAgD,eAAOD,CAAP;AAAS;;AAAA,eAASkE,CAAT,CAAWrE,CAAX,EAAaG,CAAb,EAAe;AAAC,YAAIiD,CAAJ;;AAAM,gBAAOjD,CAAP;AAAU,eAAK,MAAL;AAAY,eAAK,SAAL;AAAe,eAAK,SAAL;AAAe;;AAAM;AAAQ,kBAAMC,KAAK,CAAC,4CAAD,CAAX;AAAlE;;AAA6H,gBAAOJ,CAAP;AAAU,eAAK,KAAL;AAAWoD,YAAAA,CAAC,GAAC,UAASjD,CAAT,EAAWmD,CAAX,EAAatD,CAAb,EAAe;AAAC,kBAAID,CAAC,GAACI,CAAC,CAACM,MAAR;AAAA,kBAAe2C,CAAf;AAAA,kBAAiBI,CAAjB;AAAA,kBAAmB9D,CAAnB;AAAA,kBAAqB+D,CAArB;AAAA,kBAAuBC,CAAvB;AAAyB,kBAAG,MAAI3D,CAAC,GAAC,CAAT,EAAW,MAAMK,KAAK,CAAC,+CAAD,CAAX;AAA6DkD,cAAAA,CAAC,GAACA,CAAC,IAAE,CAAC,CAAD,CAAL;AAAStD,cAAAA,CAAC,GAACA,CAAC,IAAE,CAAL;AAAO0D,cAAAA,CAAC,GAAC1D,CAAC,KAAG,CAAN;;AAAQ,mBAAIoD,CAAC,GAAC,CAAN,EAAQA,CAAC,GAACrD,CAAV,EAAYqD,CAAC,IAAE,CAAf,EAAiB;AAACI,gBAAAA,CAAC,GAACQ,QAAQ,CAAC7D,CAAC,CAACuF,MAAF,CAAStC,CAAT,EAAW,CAAX,CAAD,EAAe,EAAf,CAAV;AAA6B,oBAAGuC,KAAK,CAACnC,CAAD,CAAR,EAAY,MAAMpD,KAAK,CAAC,gDAAD,CAAX;AACrcqD,gBAAAA,CAAC,GAAC,CAACL,CAAC,KAAG,CAAL,IAAQM,CAAV;;AAAY,qBAAIhE,CAAC,GAAC+D,CAAC,KAAG,CAAV,EAAYH,CAAC,CAAC7C,MAAF,IAAUf,CAAtB,GAAyB4D,CAAC,CAACa,IAAF,CAAO,CAAP;;AAAUb,gBAAAA,CAAC,CAAC5D,CAAD,CAAD,IAAM8D,CAAC,IAAE,KAAG,IAAEC,CAAC,GAAC,CAAF,GAAI,CAAC,CAAV,CAAT;AAAsB;;AAAA,qBAAM;AAACe,gBAAAA,KAAK,EAAClB,CAAP;AAASiB,gBAAAA,MAAM,EAAC,IAAExE,CAAF,GAAIC;AAApB,eAAN;AAA6B,aAD6J;;AAC5J;;AAAM,eAAK,MAAL;AAAYoD,YAAAA,CAAC,GAAC,UAASpD,CAAT,EAAWsD,CAAX,EAAaF,CAAb,EAAe;AAAC,kBAAIrD,CAAJ;AAAA,kBAAMJ,CAAN;AAAA,kBAAQ6D,CAAC,GAAC,CAAV;AAAA,kBAAY9D,CAAZ;AAAA,kBAAc+D,CAAd;AAAA,kBAAgBC,CAAhB;AAAA,kBAAkBE,CAAlB;AAAA,kBAAoBtD,CAApB;AAAA,kBAAsBb,CAAtB;AAAwB6D,cAAAA,CAAC,GAACA,CAAC,IAAE,CAAC,CAAD,CAAL;AAASF,cAAAA,CAAC,GAACA,CAAC,IAAE,CAAL;AAAOM,cAAAA,CAAC,GAACN,CAAC,KAAG,CAAN;AAAQ,kBAAG,WAASjD,CAAZ,EAAc,KAAIV,CAAC,GAAC,CAAF,EAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACM,CAAC,CAACS,MAAhB,EAAuBf,CAAC,IAAE,CAA1B,EAA4B,KAAIK,CAAC,GAACC,CAAC,CAACqB,UAAF,CAAa3B,CAAb,CAAF,EAAkBC,CAAC,GAAC,EAApB,EAAuB,MAAII,CAAJ,GAAMJ,CAAC,CAACwE,IAAF,CAAOpE,CAAP,CAAN,GAAgB,OAAKA,CAAL,IAAQJ,CAAC,CAACwE,IAAF,CAAO,MAAIpE,CAAC,KAAG,CAAf,GAAkBJ,CAAC,CAACwE,IAAF,CAAO,MAAIpE,CAAC,GAAC,EAAb,CAA1B,IAA4C,QAAMA,CAAN,IAAS,SAAOA,CAAhB,GAAkBJ,CAAC,CAACwE,IAAF,CAAO,MAAIpE,CAAC,KAAG,EAAf,EAAkB,MAAIA,CAAC,KAAG,CAAJ,GAAM,EAA5B,EAA+B,MAAIA,CAAC,GAAC,EAArC,CAAlB,IAA4DL,CAAC,IAAE,CAAH,EAAKK,CAAC,GAAC,SAAO,CAACA,CAAC,GAAC,IAAH,KAAU,EAAV,GAAaC,CAAC,CAACqB,UAAF,CAAa3B,CAAb,IAAgB,IAApC,CAAP,EAAiDC,CAAC,CAACwE,IAAF,CAAO,MAAIpE,CAAC,KAAG,EAAf,EAAkB,MAAIA,CAAC,KAAG,EAAJ,GAAO,EAA7B,EAAgC,MAAIA,CAAC,KAAG,CAAJ,GAAM,EAA1C,EAA6C,MAAIA,CAAC,GAAC,EAAnD,CAA7G,CAAnF,EAAwP0D,CAAC,GAAC,CAA9P,EAAgQA,CAAC,GAAC9D,CAAC,CAACc,MAApQ,EAA2QgD,CAAC,IAAE,CAA9Q,EAAgR;AAACnD,gBAAAA,CAAC,GAACkD,CAAC,GACrfE,CADkf;;AAChf,qBAAIE,CAAC,GAACtD,CAAC,KAAG,CAAV,EAAYgD,CAAC,CAAC7C,MAAF,IAAUmD,CAAtB,GAAyBN,CAAC,CAACa,IAAF,CAAO,CAAP;;AAAUb,gBAAAA,CAAC,CAACM,CAAD,CAAD,IAAMjE,CAAC,CAAC8D,CAAD,CAAD,IAAM,KAAGhE,CAAC,GAACa,CAAC,GAAC,CAAF,GAAI,CAAC,CAAV,CAAZ;AAAyBkD,gBAAAA,CAAC,IAAE,CAAH;AAAK,eADoH,MAC/G,IAAG,cAAYrD,CAAZ,IAAe,cAAYA,CAA9B,EAAgC,KAAIV,CAAC,GAAC,CAAF,EAAIE,CAAC,GAAC,cAAYQ,CAAZ,IAAe,CAAC,CAAhB,IAAmB,cAAYA,CAAZ,IAAe,CAAC,CAAzC,EAA2CT,CAAC,GAAC,CAAjD,EAAmDA,CAAC,GAACM,CAAC,CAACS,MAAvD,EAA8Df,CAAC,IAAE,CAAjE,EAAmE;AAACK,gBAAAA,CAAC,GAACC,CAAC,CAACqB,UAAF,CAAa3B,CAAb,CAAF;AAAkB,iBAAC,CAAD,KAAKC,CAAL,KAAS8D,CAAC,GAAC1D,CAAC,GAAC,GAAJ,EAAQA,CAAC,GAAC0D,CAAC,IAAE,CAAH,GAAK1D,CAAC,KAAG,CAA5B;AAA+BO,gBAAAA,CAAC,GAACkD,CAAC,GAACE,CAAJ;;AAAM,qBAAIE,CAAC,GAACtD,CAAC,KAAG,CAAV,EAAYgD,CAAC,CAAC7C,MAAF,IAAUmD,CAAtB,GAAyBN,CAAC,CAACa,IAAF,CAAO,CAAP;;AAAUb,gBAAAA,CAAC,CAACM,CAAD,CAAD,IAAM7D,CAAC,IAAE,KAAGN,CAAC,GAACa,CAAC,GAAC,CAAF,GAAI,CAAC,CAAV,CAAT;AAAsBkD,gBAAAA,CAAC,IAAE,CAAH;AAAK;AAAA,qBAAM;AAACgB,gBAAAA,KAAK,EAAClB,CAAP;AAASiB,gBAAAA,MAAM,EAAC,IAAEf,CAAF,GAAIJ;AAApB,eAAN;AAA6B,aADzM;;AAC0M;;AAAM,eAAK,KAAL;AAAWA,YAAAA,CAAC,GAAC,UAASjD,CAAT,EAAWmD,CAAX,EAAatD,CAAb,EAAe;AAAC,kBAAID,CAAC,GAAC,CAAN;AAAA,kBAAQqD,CAAR;AAAA,kBAAUI,CAAV;AAAA,kBAAY9D,CAAZ;AAAA,kBAAc+D,CAAd;AAAA,kBAAgBC,CAAhB;AAAA,kBAAkBE,CAAlB;AAAA,kBAAoBtD,CAApB;AAAsB,kBAAG,CAAC,CAAD,KAAKH,CAAC,CAACyF,MAAF,CAAS,oBAAT,CAAR,EAAuC,MAAMxF,KAAK,CAAC,qCAAD,CAAX;AAAmDoD,cAAAA,CAAC,GAACrD,CAAC,CAAC0F,OAAF,CAAU,GAAV,CAAF;AAAiB1F,cAAAA,CAAC,GAACA,CAAC,CAAC2F,OAAF,CAAU,KAAV,EACre,EADqe,CAAF;AAC/d,kBAAG,CAAC,CAAD,KAAKtC,CAAL,IAAQA,CAAC,GAACrD,CAAC,CAACM,MAAf,EAAsB,MAAML,KAAK,CAAC,qCAAD,CAAX;AAAmDkD,cAAAA,CAAC,GAACA,CAAC,IAAE,CAAC,CAAD,CAAL;AAAStD,cAAAA,CAAC,GAACA,CAAC,IAAE,CAAL;AAAO4D,cAAAA,CAAC,GAAC5D,CAAC,KAAG,CAAN;;AAAQ,mBAAIwD,CAAC,GAAC,CAAN,EAAQA,CAAC,GAACrD,CAAC,CAACM,MAAZ,EAAmB+C,CAAC,IAAE,CAAtB,EAAwB;AAACE,gBAAAA,CAAC,GAACvD,CAAC,CAACuF,MAAF,CAASlC,CAAT,EAAW,CAAX,CAAF;;AAAgB,qBAAI9D,CAAC,GAAC+D,CAAC,GAAC,CAAR,EAAU/D,CAAC,GAACgE,CAAC,CAACjD,MAAd,EAAqBf,CAAC,IAAE,CAAxB,EAA0B0D,CAAC,GAAC,mEAAmEyC,OAAnE,CAA2EnC,CAAC,CAAChE,CAAD,CAA5E,CAAF,EAAmF+D,CAAC,IAAEL,CAAC,IAAE,KAAG,IAAE1D,CAA9F;;AAAgG,qBAAIA,CAAC,GAAC,CAAN,EAAQA,CAAC,GAACgE,CAAC,CAACjD,MAAF,GAAS,CAAnB,EAAqBf,CAAC,IAAE,CAAxB,EAA0B;AAACY,kBAAAA,CAAC,GAACP,CAAC,GAAC6D,CAAJ;;AAAM,uBAAIR,CAAC,GAAC9C,CAAC,KAAG,CAAV,EAAYgD,CAAC,CAAC7C,MAAF,IAAU2C,CAAtB,GAAyBE,CAAC,CAACa,IAAF,CAAO,CAAP;;AAAUb,kBAAAA,CAAC,CAACF,CAAD,CAAD,IAAM,CAACK,CAAC,KAAG,KAAG,IAAE/D,CAAT,GAAW,GAAZ,KAAkB,KAAG,IAAEY,CAAC,GAAC,CAAF,GAAI,CAAC,CAAV,CAAxB;AAAqCP,kBAAAA,CAAC,IAAE,CAAH;AAAK;AAAC;;AAAA,qBAAM;AAACyE,gBAAAA,KAAK,EAAClB,CAAP;AAASiB,gBAAAA,MAAM,EAAC,IAAExE,CAAF,GAAIC;AAApB,eAAN;AAA6B,aADpE;;AACqE;;AAAM,eAAK,OAAL;AAAaoD,YAAAA,CAAC,GAAC,UAASjD,CAAT,EAAWmD,CAAX,EAAatD,CAAb,EAAe;AAAC,kBAAIoD,CAAJ,EAAMzD,CAAN,EAAQ6D,CAAR,EAAU9D,CAAV,EAAY+D,CAAZ;AAAcH,cAAAA,CAAC,GAACA,CAAC,IAAE,CAAC,CAAD,CAAL;AAAStD,cAAAA,CAAC,GAACA,CAAC,IAAE,CAAL;AAAOwD,cAAAA,CAAC,GAACxD,CAAC,KAAG,CAAN;;AAAQ,mBAAIL,CAAC,GAAC,CAAN,EAAQA,CAAC,GAACQ,CAAC,CAACM,MAAZ,EAAmBd,CAAC,IACpf,CADge,EAC9dyD,CAAC,GAACjD,CAAC,CAACkB,UAAF,CAAa1B,CAAb,CAAF,EAAkB8D,CAAC,GAAC9D,CAAC,GAAC6D,CAAtB,EAAwB9D,CAAC,GAAC+D,CAAC,KAAG,CAA9B,EAAgCH,CAAC,CAAC7C,MAAF,IAAUf,CAAV,IAAa4D,CAAC,CAACa,IAAF,CAAO,CAAP,CAA7C,EAAuDb,CAAC,CAAC5D,CAAD,CAAD,IAAM0D,CAAC,IAAE,KAAG,IAAEK,CAAC,GAAC,CAAF,GAAI,CAAC,CAAV,CAAhE;;AAA6E,qBAAM;AAACe,gBAAAA,KAAK,EAAClB,CAAP;AAASiB,gBAAAA,MAAM,EAAC,IAAEpE,CAAC,CAACM,MAAJ,GAAWT;AAA3B,eAAN;AAAoC,aADqT;;AACpT;;AAAM,eAAK,aAAL;AAAmB,gBAAG;AAACoD,cAAAA,CAAC,GAAC,IAAI2B,WAAJ,CAAgB,CAAhB,CAAF;AAAqB,aAAzB,CAAyB,OAAM1B,CAAN,EAAQ;AAAC,oBAAMjD,KAAK,CAAC,+CAAD,CAAX;AAA8D;;AAAAgD,YAAAA,CAAC,GAAC,UAASjD,CAAT,EAAWmD,CAAX,EAAatD,CAAb,EAAe;AAAC,kBAAIoD,CAAJ,EAAMzD,CAAN,EAAQ6D,CAAR,EAAU9D,CAAV,EAAY+D,CAAZ;AAAcH,cAAAA,CAAC,GAACA,CAAC,IAAE,CAAC,CAAD,CAAL;AAAStD,cAAAA,CAAC,GAACA,CAAC,IAAE,CAAL;AAAOL,cAAAA,CAAC,GAACK,CAAC,KAAG,CAAN;AAAQyD,cAAAA,CAAC,GAAC,IAAIzC,UAAJ,CAAeb,CAAf,CAAF;;AAAoB,mBAAIiD,CAAC,GAAC,CAAN,EAAQA,CAAC,GAACjD,CAAC,CAAC4F,UAAZ,EAAuB3C,CAAC,IAAE,CAA1B,EAA4B1D,CAAC,GAAC0D,CAAC,GAACzD,CAAJ,EAAM6D,CAAC,GAAC9D,CAAC,KAAG,CAAZ,EAAc4D,CAAC,CAAC7C,MAAF,IAAU+C,CAAV,IAAaF,CAAC,CAACa,IAAF,CAAO,CAAP,CAA3B,EAAqCb,CAAC,CAACE,CAAD,CAAD,IAAMC,CAAC,CAACL,CAAD,CAAD,IAAM,KAAG,IAAE1D,CAAC,GAAC,CAAF,GAAI,CAAC,CAAV,CAAjD;;AAA8D,qBAAM;AAAC8E,gBAAAA,KAAK,EAAClB,CAAP;AAASiB,gBAAAA,MAAM,EAAC,IAAEpE,CAAC,CAAC4F,UAAJ,GAAe/F;AAA/B,eAAN;AAAwC,aAA9M;;AAA+M;;AAAM;AAAQ,kBAAMI,KAAK,CAAC,sDAAD,CAAX;AAJhO;;AAKzO,eAAOgD,CAAP;AAAS;;AAAA,eAAS3D,CAAT,CAAWO,CAAX,EAAaG,CAAb,EAAe;AAAC,eAAOH,CAAC,KAAGG,CAAJ,GAAMH,CAAC,IAAE,KAAGG,CAAnB;AAAqB;;AAAA,eAAS6F,CAAT,CAAWhG,CAAX,EAAaG,CAAb,EAAeiD,CAAf,EAAiB;AAAC,eAAOpD,CAAC,GAACG,CAAF,GAAI,CAACH,CAAD,GAAGoD,CAAd;AAAgB;;AAAA,eAAS6C,CAAT,CAAWjG,CAAX,EAAaG,CAAb,EAAeiD,CAAf,EAAiB;AAAC,eAAOpD,CAAC,GAACG,CAAF,GAAIH,CAAC,GAACoD,CAAN,GAAQjD,CAAC,GAACiD,CAAjB;AAAmB;;AAAA,eAAS8C,CAAT,CAAWlG,CAAX,EAAa;AAAC,eAAOP,CAAC,CAACO,CAAD,EAAG,CAAH,CAAD,GAAOP,CAAC,CAACO,CAAD,EAAG,EAAH,CAAR,GAAeP,CAAC,CAACO,CAAD,EAAG,EAAH,CAAvB;AAA8B;;AAAA,eAASmG,CAAT,CAAWnG,CAAX,EAAa;AAAC,eAAOP,CAAC,CAACO,CAAD,EAAG,CAAH,CAAD,GAAOP,CAAC,CAACO,CAAD,EAAG,EAAH,CAAR,GAAeP,CAAC,CAACO,CAAD,EAAG,EAAH,CAAvB;AAA8B;;AAAA,eAASoG,CAAT,CAAWpG,CAAX,EAAa;AAAC,eAAOP,CAAC,CAACO,CAAD,EAAG,CAAH,CAAD,GAAOP,CAAC,CAACO,CAAD,EAAG,EAAH,CAAR,GAAeA,CAAC,KAAG,CAA1B;AAA4B;;AAAA,eAASqG,CAAT,CAAWrG,CAAX,EAAa;AAAC,eAAOP,CAAC,CAACO,CAAD,EAAG,EAAH,CAAD,GAAQP,CAAC,CAACO,CAAD,EAAG,EAAH,CAAT,GAAgBA,CAAC,KAAG,EAA3B;AAA8B;;AAAA,eAASsG,CAAT,CAAWtG,CAAX,EAAaG,CAAb,EAAe;AAAC,YAAIiD,CAAC,GAAC,CAACpD,CAAC,GAAC,KAAH,KAAWG,CAAC,GAAC,KAAb,CAAN;AAA0B,eAAM,CAAC,CAACH,CAAC,KAAG,EAAL,KAAUG,CAAC,KAAG,EAAd,KAAmBiD,CAAC,KAAG,EAAvB,IAA2B,KAA5B,KAAoC,EAApC,GAAuCA,CAAC,GAAC,KAA/C;AAAqD;;AAAA,eAASmD,CAAT,CAAWvG,CAAX,EAAaG,CAAb,EAAeiD,CAAf,EAAiBC,CAAjB,EAAmB;AAAC,YAAIC,CAAC,GAAC,CAACtD,CAAC,GAAC,KAAH,KAAWG,CAAC,GAAC,KAAb,KAAqBiD,CAAC,GAAC,KAAvB,KAA+BC,CAAC,GAAC,KAAjC,CAAN;AAA8C,eAAM,CAAC,CAACrD,CAAC,KAAG,EAAL,KAAUG,CAAC,KAAG,EAAd,KAAmBiD,CAAC,KAAG,EAAvB,KAA4BC,CAAC,KAAG,EAAhC,KAAqCC,CAAC,KAClf,EAD4c,IACxc,KADuc,KAC/b,EAD+b,GAC5bA,CAAC,GAAC,KADob;AAC9a;;AAAA,eAASkD,CAAT,CAAWxG,CAAX,EAAaG,CAAb,EAAeiD,CAAf,EAAiBC,CAAjB,EAAmBC,CAAnB,EAAqB;AAAC,YAAIC,CAAC,GAAC,CAACvD,CAAC,GAAC,KAAH,KAAWG,CAAC,GAAC,KAAb,KAAqBiD,CAAC,GAAC,KAAvB,KAA+BC,CAAC,GAAC,KAAjC,KAAyCC,CAAC,GAAC,KAA3C,CAAN;AAAwD,eAAM,CAAC,CAACtD,CAAC,KAAG,EAAL,KAAUG,CAAC,KAAG,EAAd,KAAmBiD,CAAC,KAAG,EAAvB,KAA4BC,CAAC,KAAG,EAAhC,KAAqCC,CAAC,KAAG,EAAzC,KAA8CC,CAAC,KAAG,EAAlD,IAAsD,KAAvD,KAA+D,EAA/D,GAAkEA,CAAC,GAAC,KAA1E;AAAgF;;AAAA,eAASrC,CAAT,CAAWlB,CAAX,EAAa;AAAC,YAAIG,CAAC,GAAC,EAAN;AAAA,YAASiD,CAAT;AAAW,YAAG,MAAIpD,CAAC,CAACiE,WAAF,CAAc,MAAd,EAAqB,CAArB,CAAP,EAA+B,QAAO9D,CAAC,GAAC,CAAC,UAAD,EAAY,SAAZ,EAAsB,SAAtB,EAAgC,UAAhC,EAA2C,UAA3C,EAAsD,UAAtD,EAAiE,UAAjE,EAA4E,UAA5E,CAAF,EAA0FiD,CAAC,GAAC,CAAC,UAAD,EAAY,UAAZ,EAAuB,UAAvB,EAAkC,UAAlC,EAA6C,UAA7C,EAAwD,UAAxD,EAAmE,SAAnE,EAA6E,UAA7E,CAA5F,EAAqLpD,CAA5L;AAA+L,eAAK,SAAL;AAAe;;AAAM,eAAK,SAAL;AAAeG,YAAAA,CAAC,GAACiD,CAAF;AAAI;;AAAM,eAAK,SAAL;AAAejD,YAAAA,CAAC,GAAC,CAAC,IAAIyD,CAAJ,EAAD,EAAO,IAAIA,CAAJ,EAAP,EAC3e,IAAIA,CAAJ,EAD2e,EACre,IAAIA,CAAJ,EADqe,EAC/d,IAAIA,CAAJ,EAD+d,EACzd,IAAIA,CAAJ,EADyd,EACnd,IAAIA,CAAJ,EADmd,EAC7c,IAAIA,CAAJ,EAD6c,CAAF;AACpc;;AAAM,eAAK,SAAL;AAAezD,YAAAA,CAAC,GAAC,CAAC,IAAIyD,CAAJ,EAAD,EAAO,IAAIA,CAAJ,EAAP,EAAa,IAAIA,CAAJ,EAAb,EAAmB,IAAIA,CAAJ,EAAnB,EAAyB,IAAIA,CAAJ,EAAzB,EAA+B,IAAIA,CAAJ,EAA/B,EAAqC,IAAIA,CAAJ,EAArC,EAA2C,IAAIA,CAAJ,EAA3C,CAAF;AAAoD;;AAAM;AAAQ,kBAAMxD,KAAK,CAAC,qBAAD,CAAX;AADiH,SAA/B,MACzC,MAAMA,KAAK,CAAC,2BAAD,CAAX;AAAyC,eAAOD,CAAP;AAAS;;AAAA,eAAS+D,CAAT,CAAWlE,CAAX,EAAaG,CAAb,EAAeiD,CAAf,EAAiB;AAAC,YAAIC,CAAJ;AAAA,YAAMC,CAAN;AAAA,YAAQC,CAAR;AAAA,YAAUxD,CAAV;AAAA,YAAYJ,CAAZ;AAAA,YAAc6D,CAAd;AAAA,YAAgB9D,CAAhB;AAAA,YAAkB+D,CAAlB;AAAA,YAAoBG,CAApB;AAAA,YAAsBnE,CAAtB;AAAA,YAAwBa,CAAxB;AAAA,YAA0B6C,CAA1B;AAAA,YAA4BvD,CAA5B;AAAA,YAA8BsB,CAA9B;AAAA,YAAgChB,CAAhC;AAAA,YAAkC2D,CAAlC;AAAA,YAAoCK,CAApC;AAAA,YAAsCG,CAAtC;AAAA,YAAwCM,CAAxC;AAAA,YAA0CC,CAA1C;AAAA,YAA4CC,CAA5C;AAAA,YAA8CC,CAA9C;AAAA,YAAgDE,CAAC,GAAC,EAAlD;AAAA,YAAqDC,CAArD;AAAuD,YAAG,cAAY7B,CAAZ,IAAe,cAAYA,CAA9B,EAAgC3D,CAAC,GAAC,EAAF,EAAK0D,CAAC,GAAC,CAAP,EAAS2B,CAAC,GAAC2B,MAAX,EAAkB7G,CAAC,GAAC0G,CAApB,EAAsBpF,CAAC,GAACqF,CAAxB,EAA0BrG,CAAC,GAACsG,CAA5B,EAA8B3C,CAAC,GAACuC,CAAhC,EAAkClC,CAAC,GAACmC,CAApC,EAAsChC,CAAC,GAAC6B,CAAxC,EAA0CvB,CAAC,GAACwB,CAA5C,EAA8CtB,CAAC,GAACoB,CAAhD,EAAkDrB,CAAC,GAACoB,CAApD,EAAsDf,CAAC,GAACyB,CAAxD,CAAhC,KAA+F,MAAMtG,KAAK,CAAC,0CAAD,CAAX;AAAwDgD,QAAAA,CAAC,GAACjD,CAAC,CAAC,CAAD,CAAH;AAAOkD,QAAAA,CAAC,GAAClD,CAAC,CAAC,CAAD,CAAH;AAAOmD,QAAAA,CAAC,GAACnD,CAAC,CAAC,CAAD,CAAH;AAAOoD,QAAAA,CAAC,GAACpD,CAAC,CAAC,CAAD,CAAH;AAAOJ,QAAAA,CAAC,GAACI,CAAC,CAAC,CAAD,CAAH;AAAOR,QAAAA,CAAC,GAACQ,CAAC,CAAC,CAAD,CAAH;AAAOqD,QAAAA,CAAC,GAACrD,CAAC,CAAC,CAAD,CAAH;AAAOT,QAAAA,CAAC,GAACS,CAAC,CAAC,CAAD,CAAH;;AAAO,aAAIG,CAAC,GACpf,CAD+e,EAC7eA,CAAC,GAACb,CAD2e,EACzea,CAAC,IAAE,CADse,EACpe,KAAGA,CAAH,IAAMsD,CAAC,GAACtD,CAAC,GAAC6C,CAAJ,EAAMM,CAAC,GAACzD,CAAC,CAACS,MAAF,IAAUmD,CAAV,GAAY,CAAZ,GAAc5D,CAAC,CAAC4D,CAAD,CAAvB,EAA2BA,CAAC,GAAC5D,CAAC,CAACS,MAAF,IAAUmD,CAAC,GAAC,CAAZ,GAAc,CAAd,GAAgB5D,CAAC,CAAC4D,CAAC,GAAC,CAAH,CAA9C,EAAoDoB,CAAC,CAAC1E,CAAD,CAAD,GAAK,IAAIwE,CAAJ,CAAMrB,CAAN,EAAQG,CAAR,CAA/D,IAA2EoB,CAAC,CAAC1E,CAAD,CAAD,GAAKY,CAAC,CAACgD,CAAC,CAACc,CAAC,CAAC1E,CAAC,GAAC,CAAH,CAAF,CAAF,EAAW0E,CAAC,CAAC1E,CAAC,GAAC,CAAH,CAAZ,EAAkBuD,CAAC,CAACmB,CAAC,CAAC1E,CAAC,GAAC,EAAH,CAAF,CAAnB,EAA6B0E,CAAC,CAAC1E,CAAC,GAAC,EAAH,CAA9B,CAAjF,EAAuHmD,CAAC,GAACvD,CAAC,CAACR,CAAD,EAAGiF,CAAC,CAAC5E,CAAD,CAAJ,EAAQ6E,CAAC,CAAC7E,CAAD,EAAGJ,CAAH,EAAK6D,CAAL,CAAT,EAAiByB,CAAC,CAAC3E,CAAD,CAAlB,EAAsB0E,CAAC,CAAC1E,CAAD,CAAvB,CAA1H,EAAsJsD,CAAC,GAAChE,CAAC,CAACyE,CAAC,CAACjB,CAAD,CAAF,EAAMyB,CAAC,CAACzB,CAAD,EAAGC,CAAH,EAAKC,CAAL,CAAP,CAAzJ,EAAyK5D,CAAC,GAAC8D,CAA3K,EAA6KA,CAAC,GAAC7D,CAA/K,EAAiLA,CAAC,GAACI,CAAnL,EAAqLA,CAAC,GAACH,CAAC,CAAC2D,CAAD,EAAGE,CAAH,CAAxL,EAA8LF,CAAC,GAACD,CAAhM,EAAkMA,CAAC,GAACD,CAApM,EAAsMA,CAAC,GAACD,CAAxM,EAA0MA,CAAC,GAACxD,CAAC,CAAC6D,CAAD,EAAGG,CAAH,CAA7M;;AAAmNzD,QAAAA,CAAC,CAAC,CAAD,CAAD,GAAKP,CAAC,CAACwD,CAAD,EAAGjD,CAAC,CAAC,CAAD,CAAJ,CAAN;AAAeA,QAAAA,CAAC,CAAC,CAAD,CAAD,GAAKP,CAAC,CAACyD,CAAD,EAAGlD,CAAC,CAAC,CAAD,CAAJ,CAAN;AAAeA,QAAAA,CAAC,CAAC,CAAD,CAAD,GAAKP,CAAC,CAAC0D,CAAD,EAAGnD,CAAC,CAAC,CAAD,CAAJ,CAAN;AAAeA,QAAAA,CAAC,CAAC,CAAD,CAAD,GAAKP,CAAC,CAAC2D,CAAD,EAAGpD,CAAC,CAAC,CAAD,CAAJ,CAAN;AAAeA,QAAAA,CAAC,CAAC,CAAD,CAAD,GAAKP,CAAC,CAACG,CAAD,EAAGI,CAAC,CAAC,CAAD,CAAJ,CAAN;AAAeA,QAAAA,CAAC,CAAC,CAAD,CAAD,GAAKP,CAAC,CAACD,CAAD,EAAGQ,CAAC,CAAC,CAAD,CAAJ,CAAN;AAAeA,QAAAA,CAAC,CAAC,CAAD,CAAD,GAAKP,CAAC,CAAC4D,CAAD,EAAGrD,CAAC,CAAC,CAAD,CAAJ,CAAN;AAAeA,QAAAA,CAAC,CAAC,CAAD,CAAD,GAAKP,CAAC,CAACF,CAAD,EAAGS,CAAC,CAAC,CAAD,CAAJ,CAAN;AAAe,eAAOA,CAAP;AAAS;;AAAA,UAAIuG,CAAJ;AAAMA,MAAAA,CAAC,GAAC,CAAC,UAAD,EAAY,UAAZ,EAAuB,UAAvB,EAAkC,UAAlC,EAA6C,SAA7C,EAAuD,UAAvD,EAAkE,UAAlE,EAA6E,UAA7E,EAAwF,UAAxF,EAAmG,SAAnG,EAA6G,SAA7G,EAAuH,UAAvH,EAAkI,UAAlI,EAA6I,UAA7I,EACvW,UADuW,EAC5V,UAD4V,EACjV,UADiV,EACtU,UADsU,EAC3T,SAD2T,EACjT,SADiT,EACvS,SADuS,EAC7R,UAD6R,EAClR,UADkR,EACvQ,UADuQ,EAC5P,UAD4P,EACjP,UADiP,EACtO,UADsO,EAC3N,UAD2N,EAChN,UADgN,EACrM,UADqM,EAC1L,SAD0L,EAChL,SADgL,EACtK,SADsK,EAC5J,SAD4J,EAClJ,UADkJ,EACvI,UADuI,EAC5H,UAD4H,EACjH,UADiH,EACtG,UADsG,EAC3F,UAD2F,EAChF,UADgF,EACrE,UADqE,EAC1D,UAD0D,EAC/C,UAD+C,EACpC,UADoC,EACzB,UADyB,EACd,UADc,EACH,SADG,EACO,SADP,EACiB,SADjB,EAC2B,SAD3B,EACqC,SADrC,EAC+C,SAD/C,EACyD,UADzD,EACoE,UADpE,EAC+E,UAD/E,EAC0F,UAD1F,EACqG,UADrG,EACgH,UADhH,EAC2H,UAD3H,EACsI,UADtI,EAEvW,UAFuW,EAE5V,UAF4V,EAEjV,UAFiV,CAAF;AAEnU,qBAAa,OAAOC,MAApB,IAA4BA,MAAM,CAACC,GAAnC,GAAuCD,MAAM,CAAC,YAAU;AAAC,eAAOxD,CAAP;AAAS,OAArB,CAA7C,GAAoE,gBAAc,OAAO5C,OAArB,IAA8B,gBAAc,OAAOG,MAArB,IAA6BA,MAAM,CAACH,OAApC,KAA8CG,MAAM,CAACH,OAAP,GAAe4C,CAA7D,GAAgE5C,OAAO,GAAC4C,CAAtG,IAAyGD,CAAC,CAAC2D,KAAF,GAAQ1D,CAArL;AAAuL,KAjB5M,EAiB8M,IAjB9M;AAmBZ,GA7BsB,EA6BrB,EA7BqB,CAxJmb;AAqLpc,KAAE,CAAC,UAASlD,OAAT,EAAiBS,MAAjB,EAAwBH,OAAxB,EAAgC;AACzC,QAAI0C,MAAM,GAAGhD,OAAO,CAAC,QAAD,CAApB;;AACA,QAAIU,MAAM,GAAGsC,MAAM,CAACtC,MAApB,CAFyC,CAIzC;;AACA,aAASmG,SAAT,CAAoBC,GAApB,EAAyBC,GAAzB,EAA8B;AAC5B,WAAK,IAAIC,GAAT,IAAgBF,GAAhB,EAAqB;AACnBC,QAAAA,GAAG,CAACC,GAAD,CAAH,GAAWF,GAAG,CAACE,GAAD,CAAd;AACD;AACF;;AACD,QAAItG,MAAM,CAACuG,IAAP,IAAevG,MAAM,CAAC8B,KAAtB,IAA+B9B,MAAM,CAACkC,WAAtC,IAAqDlC,MAAM,CAACwG,eAAhE,EAAiF;AAC/EzG,MAAAA,MAAM,CAACH,OAAP,GAAiB0C,MAAjB;AACD,KAFD,MAEO;AACL;AACA6D,MAAAA,SAAS,CAAC7D,MAAD,EAAS1C,OAAT,CAAT;AACAA,MAAAA,OAAO,CAACI,MAAR,GAAiByG,UAAjB;AACD;;AAED,aAASA,UAAT,CAAqBC,GAArB,EAA0BC,gBAA1B,EAA4C7G,MAA5C,EAAoD;AAClD,aAAOE,MAAM,CAAC0G,GAAD,EAAMC,gBAAN,EAAwB7G,MAAxB,CAAb;AACD,KApBwC,CAsBzC;;;AACAqG,IAAAA,SAAS,CAACnG,MAAD,EAASyG,UAAT,CAAT;;AAEAA,IAAAA,UAAU,CAACF,IAAX,GAAkB,UAAUG,GAAV,EAAeC,gBAAf,EAAiC7G,MAAjC,EAAyC;AACzD,UAAI,OAAO4G,GAAP,KAAe,QAAnB,EAA6B;AAC3B,cAAM,IAAIvG,SAAJ,CAAc,+BAAd,CAAN;AACD;;AACD,aAAOH,MAAM,CAAC0G,GAAD,EAAMC,gBAAN,EAAwB7G,MAAxB,CAAb;AACD,KALD;;AAOA2G,IAAAA,UAAU,CAAC3E,KAAX,GAAmB,UAAUP,IAAV,EAAgBjB,IAAhB,EAAsB6C,QAAtB,EAAgC;AACjD,UAAI,OAAO5B,IAAP,KAAgB,QAApB,EAA8B;AAC5B,cAAM,IAAIpB,SAAJ,CAAc,2BAAd,CAAN;AACD;;AACD,UAAIyG,GAAG,GAAG5G,MAAM,CAACuB,IAAD,CAAhB;;AACA,UAAIjB,IAAI,KAAKuG,SAAb,EAAwB;AACtB,YAAI,OAAO1D,QAAP,KAAoB,QAAxB,EAAkC;AAChCyD,UAAAA,GAAG,CAACtG,IAAJ,CAASA,IAAT,EAAe6C,QAAf;AACD,SAFD,MAEO;AACLyD,UAAAA,GAAG,CAACtG,IAAJ,CAASA,IAAT;AACD;AACF,OAND,MAMO;AACLsG,QAAAA,GAAG,CAACtG,IAAJ,CAAS,CAAT;AACD;;AACD,aAAOsG,GAAP;AACD,KAfD;;AAiBAH,IAAAA,UAAU,CAACvE,WAAX,GAAyB,UAAUX,IAAV,EAAgB;AACvC,UAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AAC5B,cAAM,IAAIpB,SAAJ,CAAc,2BAAd,CAAN;AACD;;AACD,aAAOH,MAAM,CAACuB,IAAD,CAAb;AACD,KALD;;AAOAkF,IAAAA,UAAU,CAACD,eAAX,GAA6B,UAAUjF,IAAV,EAAgB;AAC3C,UAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AAC5B,cAAM,IAAIpB,SAAJ,CAAc,2BAAd,CAAN;AACD;;AACD,aAAOmC,MAAM,CAACwE,UAAP,CAAkBvF,IAAlB,CAAP;AACD,KALD;AAOC,GA/DO,EA+DN;AAAC,cAAS;AAAV,GA/DM,CArLkc;AAoPzb,KAAE,CAAC,UAASjC,OAAT,EAAiBS,MAAjB,EAAwBH,OAAxB,EAAgC;AACpD,QAAImH,MAAM,GAAGzH,OAAO,CAAC,iBAAD,CAApB;;AACA,QAAI0H,MAAM,GAAG1H,OAAO,CAAC,sBAAD,CAApB;;AACA,QAAI2H,WAAW,GAAG3H,OAAO,CAAC,gBAAD,CAAzB;;AAEA,QAAI4H,oBAAoB,GAAG,MAA3B;;AAEA,aAASC,UAAT,CAAoBC,OAApB,EAA6B;AACzB,UAAI;AACA,eAAOL,MAAM,CAAC3E,MAAP,CAAcgF,OAAd,CAAP;AACH,OAFD,CAEE,OAAOrI,CAAP,EAAU;AACR;AACA,eAAO,IAAP;AACH;AACJ;;AAED,aAASsI,WAAT,CAAqBC,YAArB,EAAmCC,OAAnC,EAA4C;AACxC;AACA,cAAQD,YAAR;AACI,aAAK,UAAL;AACI,iBAAOL,WAAW,CAACO,gBAAZ,CAA6BD,OAA7B,CAAP;AACA;;AACJ,aAAK,QAAL;AACA;AACI,iBAAON,WAAW,CAACQ,cAAZ,CAA2BF,OAA3B,CAAP;AANR;AAQH;;AAED,aAASG,cAAT,CAAwBN,OAAxB,EAAiCO,QAAjC,EAA2C;AACvCA,MAAAA,QAAQ,GAAGA,QAAQ,IAAI,EAAvB,CADuC,CAEvC;;AACA,UAAIC,cAAc,GAAGD,QAAQ,CAACC,cAAT,IAA2B,EAAhD;AACA,UAAIN,YAAY,GAAGK,QAAQ,CAACL,YAAT,IAAyB,QAA5C;AACA,UAAIO,OAAO,GAAGV,UAAU,CAACC,OAAD,CAAxB;;AAEA,UAAIS,OAAJ,EAAa;AACT,YAAI/H,MAAM,GAAG+H,OAAO,CAAC/H,MAArB;;AAEA,YAAIA,MAAM,KAAK8H,cAAf,EAA+B;AAC3B,iBAAO,IAAP;AACH;;AAED,YAAIE,QAAQ,GAAGb,WAAW,CAACc,KAAZ,CAAkBF,OAAO,CAACpE,KAAR,CAAc3D,MAAM,GAAG,CAAvB,EAA0BA,MAA1B,CAAlB,CAAf;AAAA,YACIkI,IAAI,GAAGf,WAAW,CAACc,KAAZ,CAAkBF,OAAO,CAACpE,KAAR,CAAc,CAAd,EAAiB3D,MAAM,GAAG,CAA1B,CAAlB,CADX;AAAA,YAEImI,YAAY,GAAGZ,WAAW,CAACC,YAAD,EAAeU,IAAf,CAF9B;AAIA,eAAOF,QAAQ,KAAKG,YAAb,GAA4BhB,WAAW,CAACc,KAAZ,CAAkBF,OAAO,CAACpE,KAAR,CAAc,CAAd,EAAiBmE,cAAc,GAAG,EAAlC,CAAlB,CAA5B,GAAuF,IAA9F;AACH;;AAED,aAAO,IAAP;AACH;;AAED,aAASM,0BAAT,CAAoCd,OAApC,EAA6CO,QAA7C,EAAuDQ,WAAvD,EAAoE;AAChEA,MAAAA,WAAW,GAAGA,WAAW,IAAIjB,oBAA7B;AAEA,UAAIkB,mBAAJ;AACA,UAAIC,WAAW,GAAGX,cAAc,CAACN,OAAD,EAAUO,QAAV,CAAhC;;AAEA,UAAIU,WAAJ,EAAiB;AACb,YAAIF,WAAW,KAAK,MAAhB,IAA0BA,WAAW,KAAK,SAA9C,EAAyD;AACrDC,UAAAA,mBAAmB,GAAGT,QAAQ,CAACW,YAAT,CAAsBH,WAAtB,CAAtB;AACH,SAFD,MAEO;AACHC,UAAAA,mBAAmB,GAAGT,QAAQ,CAACW,YAAT,CAAsBC,IAAtB,CAA2BC,MAA3B,CAAkCb,QAAQ,CAACW,YAAT,CAAsBG,OAAxD,CAAtB;AACH;;AAED,eAAOL,mBAAmB,CAAClD,OAApB,CAA4BmD,WAA5B,KAA4C,CAAnD;AACH;;AAED,aAAO,KAAP;AACH;;AAEDtI,IAAAA,MAAM,CAACH,OAAP,GAAiB;AACb8I,MAAAA,cAAc,EAAE,UAAUtB,OAAV,EAAmBO,QAAnB,EAA6BQ,WAA7B,EAA0C;AACtD,eAAOD,0BAA0B,CAACd,OAAD,EAAUO,QAAV,EAAoBQ,WAApB,CAA1B,IAA8DnB,MAAM,CAAC0B,cAAP,CAAsBtB,OAAtB,EAA+BO,QAAQ,CAACgB,SAAxC,CAArE;AACH;AAHY,KAAjB;AAMC,GA7EkB,EA6EjB;AAAC,uBAAkB,CAAnB;AAAqB,4BAAuB,EAA5C;AAA+C,sBAAiB;AAAhE,GA7EiB,CApPub;AAiUnY,KAAE,CAAC,UAASrJ,OAAT,EAAiBS,MAAjB,EAAwBH,OAAxB,EAAgC;AAC1G;AACA;AACA;AACA;AACA;AACA;AAEA,QAAIM,QAAQ,GAAG,4DAAf;AACA,QAAI0I,YAAY,GAAG,EAAnB;;AACA,SAAK,IAAIzJ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGe,QAAQ,CAACJ,MAA7B,EAAqC,EAAEX,CAAvC,EAA0C;AACtCyJ,MAAAA,YAAY,CAAC1I,QAAQ,CAACM,MAAT,CAAgBrB,CAAhB,CAAD,CAAZ,GAAmCA,CAAnC;AACH;;AACD,QAAIwB,IAAI,GAAGT,QAAQ,CAACJ,MAApB;AAEAC,IAAAA,MAAM,CAACH,OAAP,GAAiB;AACbwC,MAAAA,MAAM,EAAE,UAASC,MAAT,EAAiB;AACrB,YAAIA,MAAM,CAACvC,MAAP,KAAkB,CAAtB,EAAyB,OAAO,EAAP;AAEzB,YAAIX,CAAJ;AAAA,YAAOgD,CAAP;AAAA,YAAU0G,KAAK,GAAG,CAAC,CAAD,CAAlB;;AACA,aAAK1J,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGkD,MAAM,CAACvC,MAAvB,EAA+B,EAAEX,CAAjC,EAAoC;AAChC,cAAIE,CAAC,GAAGgD,MAAM,CAAClD,CAAD,CAAd;AACA,cAAI,EAAEE,CAAC,IAAIuJ,YAAP,CAAJ,EAA0B,MAAM,IAAInJ,KAAJ,CAAU,sBAAV,CAAN;;AAE1B,eAAK0C,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG0G,KAAK,CAAC/I,MAAtB,EAA8B,EAAEqC,CAAhC,EAAmC0G,KAAK,CAAC1G,CAAD,CAAL,IAAYxB,IAAZ;;AACnCkI,UAAAA,KAAK,CAAC,CAAD,CAAL,IAAYD,YAAY,CAACvJ,CAAD,CAAxB;AAEA,cAAIoC,KAAK,GAAG,CAAZ;;AACA,eAAKU,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG0G,KAAK,CAAC/I,MAAtB,EAA8B,EAAEqC,CAAhC,EAAmC;AAC/B0G,YAAAA,KAAK,CAAC1G,CAAD,CAAL,IAAYV,KAAZ;AACAA,YAAAA,KAAK,GAAGoH,KAAK,CAAC1G,CAAD,CAAL,IAAY,CAApB;AACA0G,YAAAA,KAAK,CAAC1G,CAAD,CAAL,IAAY,IAAZ;AACH;;AAED,iBAAOV,KAAP,EAAc;AACVoH,YAAAA,KAAK,CAACrF,IAAN,CAAW/B,KAAK,GAAG,IAAnB;AACAA,YAAAA,KAAK,KAAK,CAAV;AACH;AACJ,SAtBoB,CAuBrB;;;AACA,aAAKtC,CAAC,GAAG,CAAT,EAAYkD,MAAM,CAAClD,CAAD,CAAN,KAAc,GAAd,IAAqBA,CAAC,GAAGkD,MAAM,CAACvC,MAAP,GAAgB,CAArD,EAAwD,EAAEX,CAA1D,EAA4D;AACxD0J,UAAAA,KAAK,CAACrF,IAAN,CAAW,CAAX;AACH;;AAED,eAAOqF,KAAK,CAACC,OAAN,EAAP;AACH;AA9BY,KAAjB;AAiCC,GAhDwE,EAgDvE,EAhDuE,CAjUiY;AAiXpc,KAAE,CAAC,UAASxJ,OAAT,EAAiBS,MAAjB,EAAwBH,OAAxB,EAAgC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,QAAImJ,OAAO,GAAG,kCAAd;AACA,QAAIC,SAAS,GAAG,CAAC,UAAD,EAAa,UAAb,EAAyB,UAAzB,EAAqC,UAArC,EAAiD,UAAjD,CAAhB;AAEAjJ,IAAAA,MAAM,CAACH,OAAP,GAAiB;AACfwC,MAAAA,MAAM,EAAEA,MADO;AAEfnB,MAAAA,MAAM,EAAEA;AAFO,KAAjB;;AAMA,aAASgI,OAAT,CAAkBC,MAAlB,EAA0B;AACxB,UAAIC,GAAG,GAAG,CAAV;;AACA,WAAK,IAAIxJ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuJ,MAAM,CAACpJ,MAA3B,EAAmC,EAAEH,CAArC,EAAwC;AACtC,YAAIyJ,GAAG,GAAGD,GAAG,IAAI,EAAjB;AACAA,QAAAA,GAAG,GAAG,CAACA,GAAG,GAAG,SAAP,KAAqB,CAArB,GAAyBD,MAAM,CAACvJ,CAAD,CAArC;;AACA,aAAK,IAAIR,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuB,EAAEA,CAAzB,EAA4B;AAC1B,cAAKiK,GAAG,IAAIjK,CAAR,GAAa,CAAjB,EAAoB;AAClBgK,YAAAA,GAAG,IAAIH,SAAS,CAAC7J,CAAD,CAAhB;AACD;AACF;AACF;;AACD,aAAOgK,GAAP;AACD;;AAED,aAASE,SAAT,CAAoBC,GAApB,EAAyB;AACvB,UAAIC,GAAG,GAAG,EAAV;AACA,UAAI5J,CAAJ;;AACA,WAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG2J,GAAG,CAACxJ,MAApB,EAA4B,EAAEH,CAA9B,EAAiC;AAC/B4J,QAAAA,GAAG,CAAC/F,IAAJ,CAAS8F,GAAG,CAAC5I,UAAJ,CAAef,CAAf,KAAqB,CAA9B;AACD;;AACD4J,MAAAA,GAAG,CAAC/F,IAAJ,CAAS,CAAT;;AACA,WAAK7D,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG2J,GAAG,CAACxJ,MAApB,EAA4B,EAAEH,CAA9B,EAAiC;AAC/B4J,QAAAA,GAAG,CAAC/F,IAAJ,CAAS8F,GAAG,CAAC5I,UAAJ,CAAef,CAAf,IAAoB,EAA7B;AACD;;AACD,aAAO4J,GAAP;AACD;;AAED,aAASC,cAAT,CAAyBF,GAAzB,EAA8BG,IAA9B,EAAoC;AAClC,aAAOR,OAAO,CAACI,SAAS,CAACC,GAAD,CAAT,CAAed,MAAf,CAAsBiB,IAAtB,CAAD,CAAP,KAAyC,CAAhD;AACD;;AAED,aAASC,cAAT,CAAyBJ,GAAzB,EAA8BG,IAA9B,EAAoC;AAClC,UAAIP,MAAM,GAAGG,SAAS,CAACC,GAAD,CAAT,CAAed,MAAf,CAAsBiB,IAAtB,EAA4BjB,MAA5B,CAAmC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,CAAnC,CAAb;AACA,UAAImB,GAAG,GAAGV,OAAO,CAACC,MAAD,CAAP,GAAkB,CAA5B;AACA,UAAIK,GAAG,GAAG,EAAV;;AACA,WAAK,IAAI5J,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuB,EAAEA,CAAzB,EAA4B;AAC1B4J,QAAAA,GAAG,CAAC/F,IAAJ,CAAUmG,GAAG,IAAI,KAAK,IAAIhK,CAAT,CAAR,GAAuB,EAAhC;AACD;;AACD,aAAO4J,GAAP;AACD;;AAED,aAAStI,MAAT,CAAiBqI,GAAjB,EAAsBG,IAAtB,EAA4B;AAC1B,UAAIG,QAAQ,GAAGH,IAAI,CAACjB,MAAL,CAAYkB,cAAc,CAACJ,GAAD,EAAMG,IAAN,CAA1B,CAAf;AACA,UAAIF,GAAG,GAAGD,GAAG,GAAG,GAAhB;;AACA,WAAK,IAAI3J,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGiK,QAAQ,CAAC9J,MAA7B,EAAqC,EAAEH,CAAvC,EAA0C;AACxC4J,QAAAA,GAAG,IAAIR,OAAO,CAACvI,MAAR,CAAeoJ,QAAQ,CAACjK,CAAD,CAAvB,CAAP;AACD;;AACD,aAAO4J,GAAP;AACD;;AAED,aAASnH,MAAT,CAAiByH,UAAjB,EAA6B;AAC3B,UAAIlK,CAAJ;AACA,UAAImK,SAAS,GAAG,KAAhB;AACA,UAAIC,SAAS,GAAG,KAAhB;;AACA,WAAKpK,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGkK,UAAU,CAAC/J,MAA3B,EAAmC,EAAEH,CAArC,EAAwC;AACtC,YAAIkK,UAAU,CAACnJ,UAAX,CAAsBf,CAAtB,IAA2B,EAA3B,IAAiCkK,UAAU,CAACnJ,UAAX,CAAsBf,CAAtB,IAA2B,GAAhE,EAAqE;AACnE,iBAAO,IAAP;AACD;;AACD,YAAIkK,UAAU,CAACnJ,UAAX,CAAsBf,CAAtB,KAA4B,EAA5B,IAAkCkK,UAAU,CAACnJ,UAAX,CAAsBf,CAAtB,KAA4B,GAAlE,EAAuE;AACnEmK,UAAAA,SAAS,GAAG,IAAZ;AACH;;AACD,YAAID,UAAU,CAACnJ,UAAX,CAAsBf,CAAtB,KAA4B,EAA5B,IAAkCkK,UAAU,CAACnJ,UAAX,CAAsBf,CAAtB,KAA4B,EAAlE,EAAsE;AAClEoK,UAAAA,SAAS,GAAG,IAAZ;AACH;AACF;;AACD,UAAID,SAAS,IAAIC,SAAjB,EAA4B;AAC1B,eAAO,IAAP;AACD;;AACDF,MAAAA,UAAU,GAAGA,UAAU,CAACG,WAAX,EAAb;AACA,UAAIC,GAAG,GAAGJ,UAAU,CAACvG,WAAX,CAAuB,GAAvB,CAAV;;AACA,UAAI2G,GAAG,GAAG,CAAN,IAAWA,GAAG,GAAG,CAAN,GAAUJ,UAAU,CAAC/J,MAAhC,IAA0C+J,UAAU,CAAC/J,MAAX,GAAoB,EAAlE,EAAsE;AACpE,eAAO,IAAP;AACD;;AACD,UAAIwJ,GAAG,GAAGO,UAAU,CAACK,SAAX,CAAqB,CAArB,EAAwBD,GAAxB,CAAV;AACA,UAAIR,IAAI,GAAG,EAAX;;AACA,WAAK9J,CAAC,GAAGsK,GAAG,GAAG,CAAf,EAAkBtK,CAAC,GAAGkK,UAAU,CAAC/J,MAAjC,EAAyC,EAAEH,CAA3C,EAA8C;AAC5C,YAAI8C,CAAC,GAAGsG,OAAO,CAAC7D,OAAR,CAAgB2E,UAAU,CAACrJ,MAAX,CAAkBb,CAAlB,CAAhB,CAAR;;AACA,YAAI8C,CAAC,KAAK,CAAC,CAAX,EAAc;AACZ,iBAAO,IAAP;AACD;;AACDgH,QAAAA,IAAI,CAACjG,IAAL,CAAUf,CAAV;AACD;;AACD,UAAI,CAAC+G,cAAc,CAACF,GAAD,EAAMG,IAAN,CAAnB,EAAgC;AAC9B,eAAO,IAAP;AACD;;AACD,aAAO;AAACH,QAAAA,GAAG,EAAEA,GAAN;AAAWG,QAAAA,IAAI,EAAEA,IAAI,CAAChG,KAAL,CAAW,CAAX,EAAcgG,IAAI,CAAC3J,MAAL,GAAc,CAA5B;AAAjB,OAAP;AACD;AAEA,GAtHO,EAsHN,EAtHM,CAjXkc;AAuepc,KAAE,CAAC,UAASR,OAAT,EAAiBS,MAAjB,EAAwBH,OAAxB,EAAgC;AACzC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEE;AACF;AACA;AACA;AACA;AACE,KAAC,UAASA,OAAT,EAAkB;AACf;AACA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEM,UAAIuK,SAAS,GAAG,EAAhB,CAlBe,CAkBK;;AAEpB;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACM,eAASC,UAAT,CAAoBpL,CAApB,EAAuBqL,CAAvB,EAA0BC,KAA1B,EAAiC;AAE7B,YAAIA,KAAK,KAAKH,SAAd,EAAyB;AACrB,cAAInL,CAAC,YAAYoL,UAAjB,EAA6B;AACzB,mBAAOpL,CAAP;AACH,WAFD,MAGK,IAAI,OAAOA,CAAP,KAAa,WAAjB,EAA8B;AAC/B,mBAAOuL,IAAP;AACH;;AACD,iBAAOH,UAAU,CAACI,KAAX,CAAiBxL,CAAjB,CAAP;AACH;;AAEDA,QAAAA,CAAC,GAAGA,CAAC,IAAI,EAAT,CAZ6B,CAYf;;AACd,eAAOA,CAAC,CAACc,MAAF,IAAY,CAACd,CAAC,CAACA,CAAC,CAACc,MAAF,GAAW,CAAZ,CAArB,EAAqC;AACjC,YAAEd,CAAC,CAACc,MAAJ;AACH;;AACD,aAAK2K,EAAL,GAAUzL,CAAV;AACA,aAAK0L,EAAL,GAAU1L,CAAC,CAACc,MAAF,GAAYuK,CAAC,IAAI,CAAjB,GAAsB,CAAhC;AACH;;AAEDD,MAAAA,UAAU,CAACO,UAAX,GAAwB,UAAS3L,CAAT,EAAYqL,CAAZ,EAAe;AACnC,eAAO,IAAID,UAAJ,CAAepL,CAAf,EAAkBqL,CAAlB,EAAqBF,SAArB,CAAP;AACH,OAFD,CAjEe,CAqEf;AACA;AACA;;;AACA,UAAIS,eAAe,GAAG,QAAtB;AACA,UAAIC,qBAAqB,GAAG,CAA5B;AAEAT,MAAAA,UAAU,CAACnK,IAAX,GAAkB2K,eAAlB;AACAR,MAAAA,UAAU,CAACU,UAAX,GAAwBD,qBAAxB;AAEA,UAAIN,IAAI,GAAG,IAAIH,UAAJ,CAAe,EAAf,EAAmB,CAAnB,EAAsBD,SAAtB,CAAX,CA9Ee,CA+Ef;AACA;;AACAC,MAAAA,UAAU,CAACG,IAAX,GAAkBA,IAAlB;AAEA,UAAIQ,GAAG,GAAG,IAAIX,UAAJ,CAAe,CAAC,CAAD,CAAf,EAAoB,CAApB,EAAuBD,SAAvB,CAAV,CAnFe,CAoFf;AACA;;AACAC,MAAAA,UAAU,CAACW,GAAX,GAAiBA,GAAjB;AAEA,UAAIC,KAAK,GAAG,IAAIZ,UAAJ,CAAeW,GAAG,CAACN,EAAnB,EAAuB,CAAC,CAAxB,EAA2BN,SAA3B,CAAZ,CAxFe,CAyFf;AACA;;AACAC,MAAAA,UAAU,CAACY,KAAX,GAAmBA,KAAnB,CA3Fe,CA6Ff;AACA;;AACAZ,MAAAA,UAAU,CAACa,EAAX,GAAgBV,IAAhB,CA/Fe,CAiGf;AACA;;AACAH,MAAAA,UAAU,CAACc,EAAX,GAAgBH,GAAhB;AAEA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;AACMX,MAAAA,UAAU,CAACe,KAAX,GAAmB,CACfZ,IADe,EAEfQ,GAFe;AAGf;AACA,UAAIX,UAAJ,CAAgB,CAAC,CAAD,CAAhB,EAAqB,CAArB,EAAwBD,SAAxB,CAJe,EAKf,IAAIC,UAAJ,CAAgB,CAAC,CAAD,CAAhB,EAAqB,CAArB,EAAwBD,SAAxB,CALe,EAMf,IAAIC,UAAJ,CAAgB,CAAC,CAAD,CAAhB,EAAqB,CAArB,EAAwBD,SAAxB,CANe,EAOf,IAAIC,UAAJ,CAAgB,CAAC,CAAD,CAAhB,EAAqB,CAArB,EAAwBD,SAAxB,CAPe,EAQf,IAAIC,UAAJ,CAAgB,CAAC,CAAD,CAAhB,EAAqB,CAArB,EAAwBD,SAAxB,CARe,EASf,IAAIC,UAAJ,CAAgB,CAAC,CAAD,CAAhB,EAAqB,CAArB,EAAwBD,SAAxB,CATe,EAUf,IAAIC,UAAJ,CAAgB,CAAC,CAAD,CAAhB,EAAqB,CAArB,EAAwBD,SAAxB,CAVe,EAWf,IAAIC,UAAJ,CAAgB,CAAC,CAAD,CAAhB,EAAqB,CAArB,EAAwBD,SAAxB,CAXe,EAYf,IAAIC,UAAJ,CAAe,CAAC,EAAD,CAAf,EAAqB,CAArB,EAAwBD,SAAxB,CAZe,EAaf,IAAIC,UAAJ,CAAe,CAAC,EAAD,CAAf,EAAqB,CAArB,EAAwBD,SAAxB,CAbe,EAcf,IAAIC,UAAJ,CAAe,CAAC,EAAD,CAAf,EAAqB,CAArB,EAAwBD,SAAxB,CAde,EAef,IAAIC,UAAJ,CAAe,CAAC,EAAD,CAAf,EAAqB,CAArB,EAAwBD,SAAxB,CAfe,EAgBf,IAAIC,UAAJ,CAAe,CAAC,EAAD,CAAf,EAAqB,CAArB,EAAwBD,SAAxB,CAhBe,EAiBf,IAAIC,UAAJ,CAAe,CAAC,EAAD,CAAf,EAAqB,CAArB,EAAwBD,SAAxB,CAjBe,EAkBf,IAAIC,UAAJ,CAAe,CAAC,EAAD,CAAf,EAAqB,CAArB,EAAwBD,SAAxB,CAlBe,EAmBf,IAAIC,UAAJ,CAAe,CAAC,EAAD,CAAf,EAAqB,CAArB,EAAwBD,SAAxB,CAnBe,EAoBf,IAAIC,UAAJ,CAAe,CAAC,EAAD,CAAf,EAAqB,CAArB,EAAwBD,SAAxB,CApBe,EAqBf,IAAIC,UAAJ,CAAe,CAAC,EAAD,CAAf,EAAqB,CAArB,EAAwBD,SAAxB,CArBe,EAsBf,IAAIC,UAAJ,CAAe,CAAC,EAAD,CAAf,EAAqB,CAArB,EAAwBD,SAAxB,CAtBe,EAuBf,IAAIC,UAAJ,CAAe,CAAC,EAAD,CAAf,EAAqB,CAArB,EAAwBD,SAAxB,CAvBe,EAwBf,IAAIC,UAAJ,CAAe,CAAC,EAAD,CAAf,EAAqB,CAArB,EAAwBD,SAAxB,CAxBe,EAyBf,IAAIC,UAAJ,CAAe,CAAC,EAAD,CAAf,EAAqB,CAArB,EAAwBD,SAAxB,CAzBe,EA0Bf,IAAIC,UAAJ,CAAe,CAAC,EAAD,CAAf,EAAqB,CAArB,EAAwBD,SAAxB,CA1Be,EA2Bf,IAAIC,UAAJ,CAAe,CAAC,EAAD,CAAf,EAAqB,CAArB,EAAwBD,SAAxB,CA3Be,EA4Bf,IAAIC,UAAJ,CAAe,CAAC,EAAD,CAAf,EAAqB,CAArB,EAAwBD,SAAxB,CA5Be,EA6Bf,IAAIC,UAAJ,CAAe,CAAC,EAAD,CAAf,EAAqB,CAArB,EAAwBD,SAAxB,CA7Be,EA8Bf,IAAIC,UAAJ,CAAe,CAAC,EAAD,CAAf,EAAqB,CAArB,EAAwBD,SAAxB,CA9Be,EA+Bf,IAAIC,UAAJ,CAAe,CAAC,EAAD,CAAf,EAAqB,CAArB,EAAwBD,SAAxB,CA/Be,EAgCf,IAAIC,UAAJ,CAAe,CAAC,EAAD,CAAf,EAAqB,CAArB,EAAwBD,SAAxB,CAhCe,EAiCf,IAAIC,UAAJ,CAAe,CAAC,EAAD,CAAf,EAAqB,CAArB,EAAwBD,SAAxB,CAjCe,EAkCf,IAAIC,UAAJ,CAAe,CAAC,EAAD,CAAf,EAAqB,CAArB,EAAwBD,SAAxB,CAlCe,EAmCf,IAAIC,UAAJ,CAAe,CAAC,EAAD,CAAf,EAAqB,CAArB,EAAwBD,SAAxB,CAnCe,EAoCf,IAAIC,UAAJ,CAAe,CAAC,EAAD,CAAf,EAAqB,CAArB,EAAwBD,SAAxB,CApCe,EAqCf,IAAIC,UAAJ,CAAe,CAAC,EAAD,CAAf,EAAqB,CAArB,EAAwBD,SAAxB,CArCe,EAsCf,IAAIC,UAAJ,CAAe,CAAC,EAAD,CAAf,EAAqB,CAArB,EAAwBD,SAAxB,CAtCe,CAAnB,CA7Ge,CAsJf;;AACAC,MAAAA,UAAU,CAACgB,MAAX,GAAoB,uCAAuCC,KAAvC,CAA6C,EAA7C,CAApB;AAEA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACMjB,MAAAA,UAAU,CAACkB,SAAX,CAAqBC,QAArB,GAAgC,UAAStL,IAAT,EAAe;AAC3CA,QAAAA,IAAI,GAAG,CAACA,IAAD,IAAS,EAAhB;;AACA,YAAIA,IAAI,GAAG,CAAP,IAAYA,IAAI,GAAG,EAAvB,EAA2B;AACvB,gBAAM,IAAIR,KAAJ,CAAU,mBAAmBQ,IAAnB,GAA0B,GAApC,CAAN;AACH;;AACD,YAAI,KAAKyK,EAAL,KAAY,CAAhB,EAAmB;AACf,iBAAO,GAAP;AACH;;AACD,YAAIzK,IAAI,KAAK,EAAb,EAAiB;AACb,cAAI0B,GAAG,GAAG,KAAK+I,EAAL,GAAU,CAAV,GAAc,GAAd,GAAoB,EAA9B;AACA/I,UAAAA,GAAG,IAAI,KAAK8I,EAAL,CAAQ,KAAKA,EAAL,CAAQ3K,MAAR,GAAiB,CAAzB,EAA4ByL,QAA5B,EAAP;;AACA,eAAK,IAAIpM,CAAC,GAAG,KAAKsL,EAAL,CAAQ3K,MAAR,GAAiB,CAA9B,EAAiCX,CAAC,IAAI,CAAtC,EAAyCA,CAAC,EAA1C,EAA8C;AAC1C,gBAAIqM,KAAK,GAAG,KAAKf,EAAL,CAAQtL,CAAR,EAAWoM,QAAX,EAAZ;;AACA,mBAAOC,KAAK,CAAC1L,MAAN,GAAe+K,qBAAtB,EAA6CW,KAAK,GAAG,MAAMA,KAAd;;AAC7C7J,YAAAA,GAAG,IAAI6J,KAAP;AACH;;AACD,iBAAO7J,GAAP;AACH,SATD,MAUK;AACD,cAAI8J,QAAQ,GAAGrB,UAAU,CAACgB,MAA1B;AACAnL,UAAAA,IAAI,GAAGmK,UAAU,CAACe,KAAX,CAAiBlL,IAAjB,CAAP;AACA,cAAIyL,IAAI,GAAG,KAAKhB,EAAhB;AAEA,cAAI1L,CAAC,GAAG,KAAK2M,GAAL,EAAR;AACA,cAAIP,MAAM,GAAG,EAAb;AACA,cAAIQ,KAAJ;;AAEA,iBAAO5M,CAAC,CAAC0L,EAAF,KAAS,CAAhB,EAAmB;AACf,gBAAImB,MAAM,GAAG7M,CAAC,CAAC8M,MAAF,CAAS7L,IAAT,CAAb;AACAjB,YAAAA,CAAC,GAAG6M,MAAM,CAAC,CAAD,CAAV;AACAD,YAAAA,KAAK,GAAGC,MAAM,CAAC,CAAD,CAAd,CAHe,CAIf;AACA;;AACAT,YAAAA,MAAM,CAAC5H,IAAP,CAAYiI,QAAQ,CAACG,KAAK,CAACG,OAAN,EAAD,CAApB;AACH;;AACD,iBAAO,CAACL,IAAI,GAAG,CAAP,GAAW,GAAX,GAAiB,EAAlB,IAAwBN,MAAM,CAACtC,OAAP,GAAiBkD,IAAjB,CAAsB,EAAtB,CAA/B;AACH;AACJ,OArCD,CAnKe,CA0Mf;;;AACA5B,MAAAA,UAAU,CAAC6B,UAAX,GAAwB,CACpB,IADoB,EAEpB,IAFoB,EAGpB,SAHoB,EAIpB,UAJoB,EAKpB,UALoB,EAMpB,UANoB,EAOpB,UAPoB,EAQpB,UARoB,EASpB,UAToB,EAUpB,UAVoB,EAWpB,UAXoB,EAYpB,YAZoB,EAapB,cAboB,EAcpB,gBAdoB,EAepB,gBAfoB,EAgBpB,gBAhBoB,EAiBpB,gBAjBoB,EAkBpB,gBAlBoB,EAmBpB,gBAnBoB,EAoBpB,gBApBoB,EAqBpB,gBArBoB,EAsBpB,gBAtBoB,EAuBpB,gBAvBoB,EAwBpB,gBAxBoB,EAyBpB,gBAzBoB,EA0BpB,gBA1BoB,EA2BpB,gBA3BoB,EA4BpB,gBA5BoB,EA6BpB,gBA7BoB,EA8BpB,gBA9BoB,EA+BpB,gBA/BoB,EAgCpB,gBAhCoB,EAiCpB,gBAjCoB,EAkCpB,gBAlCoB,EAmCpB,gBAnCoB,EAoCpB,gBApCoB,EAqCpB,gBArCoB,CAAxB;AAwCA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACM7B,MAAAA,UAAU,CAACI,KAAX,GAAmB,UAASH,CAAT,EAAYpK,IAAZ,EAAkB;AACjC;AACA;AACA;AACA;AACA,iBAASiM,iBAAT,CAA2BvK,GAA3B,EAAgC;AAC5BA,UAAAA,GAAG,GAAGA,GAAG,CAACwD,OAAJ,CAAY,8BAAZ,EAA4C,GAA5C,CAAN;AAEA,iBAAOxD,GAAG,CAACwD,OAAJ,CAAY,wCAAZ,EAAsD,UAAS5E,CAAT,EAAY8J,CAAZ,EAAerL,CAAf,EAAkBI,CAAlB,EAAqBC,CAArB,EAAwB;AACjFA,YAAAA,CAAC,GAAG,CAACA,CAAL;AACA,gBAAIqD,CAAC,GAAGrD,CAAC,GAAG,CAAZ;AACA,gBAAIF,CAAC,GAAGH,CAAC,CAACc,MAAF,GAAWT,CAAnB;AACAkB,YAAAA,CAAC,GAAG,CAACmC,CAAC,GAAG1D,CAAH,GAAOI,CAAT,EAAYU,MAAhB;AACAT,YAAAA,CAAC,GAAI,CAACA,CAAC,GAAGyB,IAAI,CAAC6K,GAAL,CAAStM,CAAT,CAAL,KAAqBkB,CAArB,GAAyBlB,CAAC,GAAGkB,CAAJ,GAAQmC,CAAjC,GAAqC,CAA1C;AACA,gBAAIQ,CAAC,GAAI,IAAIiJ,KAAJ,CAAU9M,CAAC,GAAG,CAAd,CAAD,CAAmB2M,IAAnB,CAAwB,GAAxB,CAAR;AACA,gBAAIlN,CAAC,GAAGE,CAAC,GAAGI,CAAZ;AACA,mBAAO,CAACiL,CAAC,IAAI,EAAN,IAAY,CAAC3H,CAAC,GAAG5D,CAAC,GAAGoE,CAAC,GAAGpE,CAAX,GAAeA,CAAC,IAAIoE,CAAtB,EAAyB6B,MAAzB,CAAgC,CAAhC,EAAmC5F,CAAC,IAAIuD,CAAC,GAAGQ,CAAC,CAACpD,MAAL,GAAc,CAAvD,CAAZ,IAAyEX,CAAC,GAAGL,CAAC,CAACgB,MAAN,GAAe,MAAMhB,CAAC,CAACiG,MAAF,CAAS5F,CAAT,CAArB,GAAmC,EAA5G,CAAP;AACH,WATM,CAAP;AAUH;;AAEDkL,QAAAA,CAAC,GAAGA,CAAC,CAACkB,QAAF,EAAJ;;AACA,YAAI,OAAOtL,IAAP,KAAgB,WAAhB,IAA+B,CAACA,IAAD,KAAU,EAA7C,EAAiD;AAC7CoK,UAAAA,CAAC,GAAG6B,iBAAiB,CAAC7B,CAAD,CAArB;AACH;;AAED,YAAI+B,QAAJ;;AACA,YAAI,OAAOnM,IAAP,KAAgB,WAApB,EAAiC;AAC7BmM,UAAAA,QAAQ,GAAG,QAAX;AACH,SAFD,MAGK,IAAInM,IAAI,IAAI,EAAZ,EAAgB;AACjBmM,UAAAA,QAAQ,GAAG,IAAX;AACH,SAFI,MAGA,IAAInM,IAAI,IAAI,CAAZ,EAAe;AAChBmM,UAAAA,QAAQ,GAAG,IAAX;AACH,SAFI,MAGA,IAAInM,IAAI,IAAI,CAAZ,EAAe;AAChBmM,UAAAA,QAAQ,GAAG,IAAX;AACH,SAFI,MAGA;AACDA,UAAAA,QAAQ,GAAG,EAAX;AACH;;AACD,YAAIC,KAAK,GAAG,IAAIC,MAAJ,CAAW,gBAAgBF,QAAhB,GAA2B,4BAAtC,EAAoE,GAApE,EAAyEG,IAAzE,CAA8ElC,CAA9E,CAAZ;;AACA,YAAIgC,KAAJ,EAAW;AACP,cAAIX,IAAI,GAAGW,KAAK,CAAC,CAAD,CAAL,IAAY,GAAvB;AACA,cAAIG,WAAW,GAAGH,KAAK,CAAC,CAAD,CAAL,IAAY,EAA9B;AACA,cAAIjB,MAAM,GAAGiB,KAAK,CAAC,CAAD,CAAL,IAAY,EAAzB;;AAEA,cAAI,OAAOpM,IAAP,KAAgB,WAApB,EAAiC;AAC7B;AACA,gBAAIuM,WAAW,KAAK,IAAhB,IAAwBA,WAAW,KAAK,IAA5C,EAAkD;AAAE;AAChDvM,cAAAA,IAAI,GAAG,EAAP;AACH,aAFD,MAGK,IAAIuM,WAAW,KAAK,IAAhB,IAAwBA,WAAW,KAAK,IAA5C,EAAkD;AAAE;AACrDvM,cAAAA,IAAI,GAAG,CAAP;AACH,aAFI,MAGA,IAAIuM,WAAW,KAAK,IAAhB,IAAwBA,WAAW,KAAK,IAA5C,EAAkD;AAAE;AACrDvM,cAAAA,IAAI,GAAG,CAAP;AACH,aAFI,MAGA;AACDA,cAAAA,IAAI,GAAG,EAAP;AACH;AACJ,WAdD,MAeK,IAAIA,IAAI,GAAG,CAAP,IAAYA,IAAI,GAAG,EAAvB,EAA2B;AAC5B,kBAAM,IAAIR,KAAJ,CAAU,mBAAmBQ,IAAnB,GAA0B,GAApC,CAAN;AACH;;AAEDA,UAAAA,IAAI,GAAG,CAACA,IAAR,CAxBO,CA0BP;;AACA,cAAI,CAAEmK,UAAU,CAAC6B,UAAX,CAAsBhM,IAAtB,EAA4BwM,IAA5B,CAAiCrB,MAAjC,CAAN,EAAiD;AAC7C,kBAAM,IAAI3L,KAAJ,CAAU,yBAAyBQ,IAAnC,CAAN;AACH,WA7BM,CA+BP;;;AACAmL,UAAAA,MAAM,GAAGA,MAAM,CAACjG,OAAP,CAAe,KAAf,EAAsB,EAAtB,EAA0BkG,KAA1B,CAAgC,EAAhC,CAAT;;AACA,cAAID,MAAM,CAACtL,MAAP,KAAkB,CAAtB,EAAyB;AACrB,mBAAOyK,IAAP;AACH,WAnCM,CAqCP;;;AACAmB,UAAAA,IAAI,GAAIA,IAAI,KAAK,GAAV,GAAiB,CAAC,CAAlB,GAAsB,CAA7B,CAtCO,CAwCP;;AACA,cAAIzL,IAAI,IAAI,EAAZ,EAAgB;AACZ,gBAAIwC,CAAC,GAAG,EAAR;;AACA,mBAAO2I,MAAM,CAACtL,MAAP,IAAiB+K,qBAAxB,EAA+C;AAC3CpI,cAAAA,CAAC,CAACe,IAAF,CAAOH,QAAQ,CAAC+H,MAAM,CAACsB,MAAP,CAActB,MAAM,CAACtL,MAAP,GAAcsK,UAAU,CAACU,UAAvC,EAAmDV,UAAU,CAACU,UAA9D,EAA0EkB,IAA1E,CAA+E,EAA/E,CAAD,EAAqF,EAArF,CAAf;AACH;;AACDvJ,YAAAA,CAAC,CAACe,IAAF,CAAOH,QAAQ,CAAC+H,MAAM,CAACY,IAAP,CAAY,EAAZ,CAAD,EAAkB,EAAlB,CAAf;AACA,mBAAO,IAAI5B,UAAJ,CAAe3H,CAAf,EAAkBiJ,IAAlB,EAAwBvB,SAAxB,CAAP;AACH,WAhDM,CAkDP;;;AACA,cAAI1H,CAAC,GAAG8H,IAAR;AACAtK,UAAAA,IAAI,GAAGmK,UAAU,CAACe,KAAX,CAAiBlL,IAAjB,CAAP;AACA,cAAIkL,KAAK,GAAGf,UAAU,CAACe,KAAvB;;AACA,eAAK,IAAIhM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGiM,MAAM,CAACtL,MAA3B,EAAmCX,CAAC,EAApC,EAAwC;AACpCsD,YAAAA,CAAC,GAAGA,CAAC,CAACkK,QAAF,CAAW1M,IAAX,EAAiB2M,GAAjB,CAAqBzB,KAAK,CAAC9H,QAAQ,CAAC+H,MAAM,CAACjM,CAAD,CAAP,EAAY,EAAZ,CAAT,CAA1B,CAAJ;AACH;;AACD,iBAAO,IAAIiL,UAAJ,CAAe3H,CAAC,CAACgI,EAAjB,EAAqBiB,IAArB,EAA2BvB,SAA3B,CAAP;AACH,SA1DD,MA2DK;AACD,gBAAM,IAAI1K,KAAJ,CAAU,gCAAgC4K,CAA1C,CAAN;AACH;AACJ,OAxGD;AA0GA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACMD,MAAAA,UAAU,CAACkB,SAAX,CAAqBsB,GAArB,GAA2B,UAAS5N,CAAT,EAAY;AACnC,YAAI,KAAK0L,EAAL,KAAY,CAAhB,EAAmB;AACf,iBAAON,UAAU,CAACpL,CAAD,CAAjB;AACH;;AAEDA,QAAAA,CAAC,GAAGoL,UAAU,CAACpL,CAAD,CAAd;;AACA,YAAIA,CAAC,CAAC0L,EAAF,KAAS,CAAb,EAAgB;AACZ,iBAAO,IAAP;AACH;;AACD,YAAI,KAAKA,EAAL,KAAY1L,CAAC,CAAC0L,EAAlB,EAAsB;AAClB1L,UAAAA,CAAC,GAAGA,CAAC,CAAC6N,MAAF,EAAJ;AACA,iBAAO,KAAKC,QAAL,CAAc9N,CAAd,CAAP;AACH;;AAED,YAAIQ,CAAC,GAAG,KAAKiL,EAAb;AACA,YAAI9H,CAAC,GAAG3D,CAAC,CAACyL,EAAV;AACA,YAAIsC,EAAE,GAAGvN,CAAC,CAACM,MAAX;AACA,YAAIkN,EAAE,GAAGrK,CAAC,CAAC7C,MAAX;AACA,YAAImN,GAAG,GAAG,IAAId,KAAJ,CAAUrL,IAAI,CAACoM,GAAL,CAASH,EAAT,EAAaC,EAAb,IAAmB,CAA7B,CAAV;AACA,YAAIzL,IAAI,GAAGT,IAAI,CAACqM,GAAL,CAASJ,EAAT,EAAaC,EAAb,CAAX;AACA,YAAIvL,KAAK,GAAG,CAAZ;AACA,YAAImK,KAAJ;;AAEA,aAAK,IAAIzM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGoC,IAApB,EAA0BpC,CAAC,EAA3B,EAA+B;AAC3ByM,UAAAA,KAAK,GAAGpM,CAAC,CAACL,CAAD,CAAD,GAAOwD,CAAC,CAACxD,CAAD,CAAR,GAAcsC,KAAtB;AACAwL,UAAAA,GAAG,CAAC9N,CAAD,CAAH,GAASyM,KAAK,GAAGhB,eAAjB;AACAnJ,UAAAA,KAAK,GAAImK,KAAK,GAAGhB,eAAT,GAA4B,CAApC;AACH;;AACD,YAAIoC,EAAE,GAAGD,EAAT,EAAa;AACTvN,UAAAA,CAAC,GAAGmD,CAAJ;AACAoK,UAAAA,EAAE,GAAGC,EAAL;AACH;;AACD,aAAK7N,CAAC,GAAGoC,IAAT,EAAeE,KAAK,IAAItC,CAAC,GAAG4N,EAA5B,EAAgC5N,CAAC,EAAjC,EAAqC;AACjCyM,UAAAA,KAAK,GAAGpM,CAAC,CAACL,CAAD,CAAD,GAAOsC,KAAf;AACAwL,UAAAA,GAAG,CAAC9N,CAAD,CAAH,GAASyM,KAAK,GAAGhB,eAAjB;AACAnJ,UAAAA,KAAK,GAAImK,KAAK,GAAGhB,eAAT,GAA4B,CAApC;AACH;;AACD,YAAInJ,KAAJ,EAAW;AACPwL,UAAAA,GAAG,CAAC9N,CAAD,CAAH,GAASsC,KAAT;AACH;;AAED,eAAQtC,CAAC,GAAG4N,EAAZ,EAAgB5N,CAAC,EAAjB,EAAqB;AACjB8N,UAAAA,GAAG,CAAC9N,CAAD,CAAH,GAASK,CAAC,CAACL,CAAD,CAAV;AACH;;AAED,eAAO,IAAIiL,UAAJ,CAAe6C,GAAf,EAAoB,KAAKvC,EAAzB,EAA6BP,SAA7B,CAAP;AACH,OA9CD;AAgDA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;;AACMC,MAAAA,UAAU,CAACkB,SAAX,CAAqBuB,MAArB,GAA8B,YAAW;AACrC,eAAO,IAAIzC,UAAJ,CAAe,KAAKK,EAApB,EAAyB,CAAC,KAAKC,EAAP,GAAa,CAArC,EAAwCP,SAAxC,CAAP;AACH,OAFD;AAIA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;;AACMC,MAAAA,UAAU,CAACkB,SAAX,CAAqBK,GAArB,GAA2B,YAAW;AAClC,eAAQ,KAAKjB,EAAL,GAAU,CAAX,GAAgB,KAAKmC,MAAL,EAAhB,GAAgC,IAAvC;AACH,OAFD;AAIA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACMzC,MAAAA,UAAU,CAACkB,SAAX,CAAqBwB,QAArB,GAAgC,UAAS9N,CAAT,EAAY;AACxC,YAAI,KAAK0L,EAAL,KAAY,CAAhB,EAAmB;AACf,iBAAON,UAAU,CAACpL,CAAD,CAAV,CAAc6N,MAAd,EAAP;AACH;;AAED7N,QAAAA,CAAC,GAAGoL,UAAU,CAACpL,CAAD,CAAd;;AACA,YAAIA,CAAC,CAAC0L,EAAF,KAAS,CAAb,EAAgB;AACZ,iBAAO,IAAP;AACH;;AACD,YAAI,KAAKA,EAAL,KAAY1L,CAAC,CAAC0L,EAAlB,EAAsB;AAClB1L,UAAAA,CAAC,GAAGA,CAAC,CAAC6N,MAAF,EAAJ;AACA,iBAAO,KAAKD,GAAL,CAAS5N,CAAT,CAAP;AACH;;AAED,YAAIiE,CAAC,GAAG,IAAR,CAdwC,CAexC;;AACA,YAAI,KAAKyH,EAAL,GAAU,CAAd,EAAiB;AACbzH,UAAAA,CAAC,GAAG,IAAImH,UAAJ,CAAepL,CAAC,CAACyL,EAAjB,EAAqB,CAArB,EAAwBN,SAAxB,CAAJ;AACAnL,UAAAA,CAAC,GAAG,IAAIoL,UAAJ,CAAe,KAAKK,EAApB,EAAwB,CAAxB,EAA2BN,SAA3B,CAAJ;AACH,SAnBuC,CAqBxC;;;AACA,YAAIuB,IAAI,GAAGzI,CAAC,CAACmK,UAAF,CAAapO,CAAb,CAAX;;AACA,YAAI0M,IAAI,KAAK,CAAb,EAAgB;AACZ,iBAAOnB,IAAP;AACH,SAFD,MAGK,IAAImB,IAAI,GAAG,CAAX,EAAc;AACf;AACA,cAAIzM,CAAC,GAAGD,CAAR;AACAA,UAAAA,CAAC,GAAGiE,CAAJ;AACAA,UAAAA,CAAC,GAAGhE,CAAJ;AACH,SA/BuC,CAiCxC;;;AACA,YAAIO,CAAC,GAAGyD,CAAC,CAACwH,EAAV;AACA,YAAI9H,CAAC,GAAG3D,CAAC,CAACyL,EAAV;AACA,YAAIsC,EAAE,GAAGvN,CAAC,CAACM,MAAX;AACA,YAAIkN,EAAE,GAAGrK,CAAC,CAAC7C,MAAX;AACA,YAAIuN,IAAI,GAAG,IAAIlB,KAAJ,CAAUY,EAAV,CAAX,CAtCwC,CAsCd;;AAC1B,YAAIO,MAAM,GAAG,CAAb;AACA,YAAInO,CAAJ;AACA,YAAIyM,KAAJ;;AAEA,aAAKzM,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG6N,EAAhB,EAAoB7N,CAAC,EAArB,EAAyB;AACrByM,UAAAA,KAAK,GAAGpM,CAAC,CAACL,CAAD,CAAD,GAAOmO,MAAP,GAAgB3K,CAAC,CAACxD,CAAD,CAAzB;;AACA,cAAIyM,KAAK,GAAG,CAAZ,EAAe;AACXA,YAAAA,KAAK,IAAIhB,eAAT;AACA0C,YAAAA,MAAM,GAAG,CAAT;AACH,WAHD,MAIK;AACDA,YAAAA,MAAM,GAAG,CAAT;AACH;;AACDD,UAAAA,IAAI,CAAClO,CAAD,CAAJ,GAAUyM,KAAV;AACH;;AACD,aAAKzM,CAAC,GAAG6N,EAAT,EAAa7N,CAAC,GAAG4N,EAAjB,EAAqB5N,CAAC,EAAtB,EAA0B;AACtByM,UAAAA,KAAK,GAAGpM,CAAC,CAACL,CAAD,CAAD,GAAOmO,MAAf;;AACA,cAAI1B,KAAK,GAAG,CAAZ,EAAe;AACXA,YAAAA,KAAK,IAAIhB,eAAT;AACH,WAFD,MAGK;AACDyC,YAAAA,IAAI,CAAClO,CAAC,EAAF,CAAJ,GAAYyM,KAAZ;AACA;AACH;;AACDyB,UAAAA,IAAI,CAAClO,CAAD,CAAJ,GAAUyM,KAAV;AACH;;AACD,eAAQzM,CAAC,GAAG4N,EAAZ,EAAgB5N,CAAC,EAAjB,EAAqB;AACjBkO,UAAAA,IAAI,CAAClO,CAAD,CAAJ,GAAUK,CAAC,CAACL,CAAD,CAAX;AACH;;AAED,eAAO,IAAIiL,UAAJ,CAAeiD,IAAf,EAAqB3B,IAArB,EAA2BvB,SAA3B,CAAP;AACH,OAtED;;AAwEA,OAAC,YAAW;AACR,iBAASoD,MAAT,CAAgBvO,CAAhB,EAAmB0M,IAAnB,EAAyB;AACrB,cAAIlM,CAAC,GAAGR,CAAC,CAACyL,EAAV;AACA,cAAIwC,GAAG,GAAGzN,CAAC,CAACiE,KAAF,EAAV;AACA,cAAIhC,KAAK,GAAG,IAAZ;AACA,cAAItC,CAAC,GAAG,CAAR;;AAEA,iBAAO,IAAP,EAAa;AACT,gBAAIyM,KAAK,GAAG,CAACpM,CAAC,CAACL,CAAD,CAAD,IAAQ,CAAT,IAAc,CAA1B;AACA8N,YAAAA,GAAG,CAAC9N,CAAD,CAAH,GAASyM,KAAK,GAAGhB,eAAjB;;AACA,gBAAIgB,KAAK,IAAIhB,eAAe,GAAG,CAA/B,EAAkC;AAC9B;AACH;;AACD,cAAEzL,CAAF;AACH;;AAED,iBAAO,IAAIiL,UAAJ,CAAe6C,GAAf,EAAoBvB,IAApB,EAA0BvB,SAA1B,CAAP;AACH;;AAED,iBAASqD,WAAT,CAAqBxO,CAArB,EAAwB0M,IAAxB,EAA8B;AAC1B,cAAIlM,CAAC,GAAGR,CAAC,CAACyL,EAAV;AACA,cAAIwC,GAAG,GAAGzN,CAAC,CAACiE,KAAF,EAAV;AACA,cAAI6J,MAAM,GAAG,IAAb;AACA,cAAInO,CAAC,GAAG,CAAR;;AAEA,iBAAO,IAAP,EAAa;AACT,gBAAIyM,KAAK,GAAG,CAACpM,CAAC,CAACL,CAAD,CAAD,IAAQ,CAAT,IAAc,CAA1B;;AACA,gBAAIyM,KAAK,GAAG,CAAZ,EAAe;AACXqB,cAAAA,GAAG,CAAC9N,CAAD,CAAH,GAASyM,KAAK,GAAGhB,eAAjB;AACH,aAFD,MAGK;AACDqC,cAAAA,GAAG,CAAC9N,CAAD,CAAH,GAASyM,KAAT;AACA;AACH;;AACD,cAAEzM,CAAF;AACH;;AAED,iBAAO,IAAIiL,UAAJ,CAAe6C,GAAf,EAAoBvB,IAApB,EAA0BvB,SAA1B,CAAP;AACH;AAED;AACV;AACA;AACA;AACA;AACA;AACA;AACA;;;AACUC,QAAAA,UAAU,CAACkB,SAAX,CAAqBmC,IAArB,GAA4B,YAAW;AACnC,kBAAQ,KAAK/C,EAAb;AACA,iBAAK,CAAL;AACI,qBAAOK,GAAP;;AACJ,iBAAK,CAAC,CAAN;AACI,qBAAOyC,WAAW,CAAC,IAAD,EAAO,CAAC,CAAR,CAAlB;AACJ;;AACA;AACI,qBAAOD,MAAM,CAAC,IAAD,EAAO,CAAP,CAAb;AAPJ;AASH,SAVD;AAYA;AACV;AACA;AACA;AACA;AACA;AACA;AACA;;;AACUnD,QAAAA,UAAU,CAACkB,SAAX,CAAqBoC,IAArB,GAA4B,YAAW;AACnC,kBAAQ,KAAKhD,EAAb;AACA,iBAAK,CAAL;AACI,qBAAOM,KAAP;;AACJ,iBAAK,CAAC,CAAN;AACI,qBAAOuC,MAAM,CAAC,IAAD,EAAO,CAAC,CAAR,CAAb;AACJ;;AACA;AACI,qBAAOC,WAAW,CAAC,IAAD,EAAO,CAAP,CAAlB;AAPJ;AASH,SAVD;AAWH,OA/ED;AAiFA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACMpD,MAAAA,UAAU,CAACkB,SAAX,CAAqB8B,UAArB,GAAkC,UAASpO,CAAT,EAAY;AAC1C,YAAI,SAASA,CAAb,EAAgB;AACZ,iBAAO,CAAP;AACH;;AAED,YAAI,EAAEA,CAAC,YAAYoL,UAAf,CAAJ,EAAgC;AAC5B,cAAI,CAACuD,QAAQ,CAAC3O,CAAD,CAAb,EAAkB;AACd,mBAAOgG,KAAK,CAAChG,CAAD,CAAL,GAAWA,CAAX,GAAe,CAAC,CAAvB;AACH;;AACDA,UAAAA,CAAC,GAAGoL,UAAU,CAACpL,CAAD,CAAd;AACH;;AAED,YAAI,KAAK0L,EAAL,KAAY,CAAhB,EAAmB;AACf,iBAAQ1L,CAAC,CAAC0L,EAAF,KAAS,CAAV,GAAe,CAAC,CAAhB,GAAoB,CAA3B;AACH;;AACD,YAAI1L,CAAC,CAAC0L,EAAF,KAAS,CAAb,EAAgB;AACZ,iBAAO,CAAP;AACH;;AAED,YAAIhI,CAAC,GAAG,KAAK+H,EAAL,CAAQ3K,MAAhB;AACA,YAAI8N,EAAE,GAAG5O,CAAC,CAACyL,EAAF,CAAK3K,MAAd;;AACA,YAAI4C,CAAC,GAAGkL,EAAR,EAAY;AACR,iBAAO,CAAC,CAAR;AACH,SAFD,MAGK,IAAIlL,CAAC,GAAGkL,EAAR,EAAY;AACb,iBAAO,CAAP;AACH;;AAED,YAAIpO,CAAC,GAAG,KAAKiL,EAAb;AACA,YAAI9H,CAAC,GAAG3D,CAAC,CAACyL,EAAV;;AACA,aAAK,IAAItL,CAAC,GAAGuD,CAAC,GAAC,CAAf,EAAkBvD,CAAC,IAAI,CAAvB,EAA0BA,CAAC,EAA3B,EAA+B;AAC3B,cAAIK,CAAC,CAACL,CAAD,CAAD,KAASwD,CAAC,CAACxD,CAAD,CAAd,EAAmB;AACf,mBAAOK,CAAC,CAACL,CAAD,CAAD,GAAOwD,CAAC,CAACxD,CAAD,CAAR,GAAc,CAAC,CAAf,GAAmB,CAA1B;AACH;AACJ;;AAED,eAAO,CAAP;AACH,OArCD;AAuCA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACMiL,MAAAA,UAAU,CAACkB,SAAX,CAAqBuC,OAArB,GAA+B,UAAS7O,CAAT,EAAY;AACvC,YAAI,SAASA,CAAb,EAAgB;AACZ,iBAAO,CAAP;AACH;;AAEDA,QAAAA,CAAC,GAAGoL,UAAU,CAACpL,CAAD,CAAd;;AAEA,YAAI,KAAK0L,EAAL,KAAY,CAAhB,EAAmB;AACf,iBAAO,CAAC1L,CAAC,CAAC0L,EAAV;AACH;;AAED,YAAI,KAAKA,EAAL,KAAY1L,CAAC,CAAC0L,EAAlB,EAAsB;AAAE;AACpB,cAAIoD,GAAG,GAAG,KAAKV,UAAL,CAAgBpO,CAAhB,CAAV;AACA,iBAAO8O,GAAG,GAAG,KAAKpD,EAAlB;AACH,SAHD,MAIK;AACD,iBAAO,KAAKA,EAAZ;AACH;AACJ,OAlBD;AAoBA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACMN,MAAAA,UAAU,CAACkB,SAAX,CAAqByC,MAArB,GAA8B,YAAW;AACrC,eAAO,SAAShD,GAAT,IACH,SAASC,KADN,IAEF,KAAKP,EAAL,CAAQ3K,MAAR,KAAmB,CAAnB,IAAwB,KAAK2K,EAAL,CAAQ,CAAR,MAAe,CAF5C;AAGH,OAJD;AAMA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACML,MAAAA,UAAU,CAACkB,SAAX,CAAqBqB,QAArB,GAAgC,UAAS3N,CAAT,EAAY;AACxC;AACA,YAAI,KAAK0L,EAAL,KAAY,CAAhB,EAAmB;AACf,iBAAOH,IAAP;AACH;;AAEDvL,QAAAA,CAAC,GAAGoL,UAAU,CAACpL,CAAD,CAAd;;AACA,YAAIA,CAAC,CAAC0L,EAAF,KAAS,CAAb,EAAgB;AACZ,iBAAOH,IAAP;AACH;;AACD,YAAI,KAAKwD,MAAL,EAAJ,EAAmB;AACf,cAAI,KAAKrD,EAAL,GAAU,CAAd,EAAiB;AACb,mBAAO1L,CAAC,CAAC6N,MAAF,EAAP;AACH;;AACD,iBAAO7N,CAAP;AACH;;AACD,YAAIA,CAAC,CAAC+O,MAAF,EAAJ,EAAgB;AACZ,cAAI/O,CAAC,CAAC0L,EAAF,GAAO,CAAX,EAAc;AACV,mBAAO,KAAKmC,MAAL,EAAP;AACH;;AACD,iBAAO,IAAP;AACH;;AACD,YAAI,SAAS7N,CAAb,EAAgB;AACZ,iBAAO,KAAKgP,MAAL,EAAP;AACH;;AAED,YAAIlP,CAAC,GAAI,KAAK2L,EAAL,CAAQ3K,MAAR,IAAkBd,CAAC,CAACyL,EAAF,CAAK3K,MAAhC;AACA,YAAIN,CAAC,GAAG,CAACV,CAAC,GAAG,IAAH,GAAUE,CAAZ,EAAeyL,EAAvB,CA3BwC,CA2Bb;;AAC3B,YAAI9H,CAAC,GAAG,CAAC7D,CAAC,GAAGE,CAAH,GAAO,IAAT,EAAeyL,EAAvB;AACA,YAAIsC,EAAE,GAAGvN,CAAC,CAACM,MAAX;AACA,YAAIkN,EAAE,GAAGrK,CAAC,CAAC7C,MAAX;AAEA,YAAImO,EAAE,GAAGlB,EAAE,GAAGC,EAAd;AACA,YAAIkB,OAAO,GAAG,IAAI/B,KAAJ,CAAU8B,EAAV,CAAd;AACA,YAAI9O,CAAJ;;AACA,aAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG8O,EAAhB,EAAoB9O,CAAC,EAArB,EAAyB;AACrB+O,UAAAA,OAAO,CAAC/O,CAAD,CAAP,GAAa,CAAb;AACH;;AAED,aAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG6N,EAAhB,EAAoB7N,CAAC,EAArB,EAAyB;AACrB,cAAIsC,KAAK,GAAG,CAAZ;AACA,cAAI0M,EAAE,GAAGxL,CAAC,CAACxD,CAAD,CAAV;AACA,cAAIiP,MAAM,GAAGrB,EAAE,GAAG5N,CAAlB;AACA,cAAIyM,KAAJ;;AACA,eAAK,IAAIzJ,CAAC,GAAGhD,CAAb,EAAgBgD,CAAC,GAAGiM,MAApB,EAA4BjM,CAAC,EAA7B,EAAiC;AAC7ByJ,YAAAA,KAAK,GAAGsC,OAAO,CAAC/L,CAAD,CAAP,GAAagM,EAAE,GAAG3O,CAAC,CAAC2C,CAAC,GAAGhD,CAAL,CAAnB,GAA6BsC,KAArC;AACAA,YAAAA,KAAK,GAAImK,KAAK,GAAGhB,eAAT,GAA4B,CAApC;AACAsD,YAAAA,OAAO,CAAC/L,CAAD,CAAP,GAAcyJ,KAAK,GAAGhB,eAAT,GAA4B,CAAzC;AACH;;AACD,cAAInJ,KAAJ,EAAW;AACPmK,YAAAA,KAAK,GAAGsC,OAAO,CAAC/L,CAAD,CAAP,GAAaV,KAArB;AACAA,YAAAA,KAAK,GAAImK,KAAK,GAAGhB,eAAT,GAA4B,CAApC;AACAsD,YAAAA,OAAO,CAAC/L,CAAD,CAAP,GAAayJ,KAAK,GAAGhB,eAArB;AACH;AACJ;;AACD,eAAO,IAAIR,UAAJ,CAAe8D,OAAf,EAAwB,KAAKxD,EAAL,GAAU1L,CAAC,CAAC0L,EAApC,EAAwCP,SAAxC,CAAP;AACH,OAxDD,CAntBe,CA6wBf;AACA;AACA;;;AACAC,MAAAA,UAAU,CAACkB,SAAX,CAAqB+C,mBAArB,GAA2C,UAASrP,CAAT,EAAY;AACnD,YAAIA,CAAC,KAAK,CAAN,IAAW,KAAK0L,EAAL,KAAY,CAA3B,EAA8B;AAC1B,iBAAOH,IAAP;AACH;;AACD,YAAIvL,CAAC,KAAK,CAAV,EAAa;AACT,iBAAO,IAAP;AACH;;AAED,YAAI4M,KAAJ;;AACA,YAAI,KAAKnB,EAAL,CAAQ3K,MAAR,KAAmB,CAAvB,EAA0B;AACtB8L,UAAAA,KAAK,GAAG,KAAKnB,EAAL,CAAQ,CAAR,IAAazL,CAArB;;AACA,cAAI4M,KAAK,IAAIhB,eAAb,EAA8B;AAC1B,mBAAO,IAAIR,UAAJ,CAAe,CAAEwB,KAAK,GAAGhB,eAAT,GAA0B,CAA3B,EACbgB,KAAK,GAAGhB,eAAT,GAA0B,CADZ,CAAf,EAC+B,CAD/B,EACkCT,SADlC,CAAP;AAEH;;AACD,iBAAO,IAAIC,UAAJ,CAAe,CAACwB,KAAD,CAAf,EAAwB,CAAxB,EAA2BzB,SAA3B,CAAP;AACH;;AAED,YAAInL,CAAC,KAAK,CAAV,EAAa;AACT,iBAAO,KAAK4N,GAAL,CAAS,IAAT,CAAP;AACH;;AACD,YAAI,KAAKmB,MAAL,EAAJ,EAAmB;AACf,iBAAO,IAAI3D,UAAJ,CAAe,CAACpL,CAAD,CAAf,EAAoB,CAApB,EAAuBmL,SAAvB,CAAP;AACH;;AAED,YAAI3K,CAAC,GAAG,KAAKiL,EAAb;AACA,YAAIsC,EAAE,GAAGvN,CAAC,CAACM,MAAX;AAEA,YAAImO,EAAE,GAAGlB,EAAE,GAAG,CAAd;AACA,YAAImB,OAAO,GAAG,IAAI/B,KAAJ,CAAU8B,EAAV,CAAd;;AACA,aAAK,IAAI9O,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG8O,EAApB,EAAwB9O,CAAC,EAAzB,EAA6B;AACzB+O,UAAAA,OAAO,CAAC/O,CAAD,CAAP,GAAa,CAAb;AACH;;AAED,YAAIsC,KAAK,GAAG,CAAZ;;AACA,aAAK,IAAIU,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG4K,EAApB,EAAwB5K,CAAC,EAAzB,EAA6B;AACzByJ,UAAAA,KAAK,GAAG5M,CAAC,GAAGQ,CAAC,CAAC2C,CAAD,CAAL,GAAWV,KAAnB;AACAA,UAAAA,KAAK,GAAImK,KAAK,GAAGhB,eAAT,GAA4B,CAApC;AACAsD,UAAAA,OAAO,CAAC/L,CAAD,CAAP,GAAcyJ,KAAK,GAAGhB,eAAT,GAA4B,CAAzC;AACH;;AACD,YAAInJ,KAAJ,EAAW;AACPyM,UAAAA,OAAO,CAAC/L,CAAD,CAAP,GAAaV,KAAb;AACH;;AAED,eAAO,IAAI2I,UAAJ,CAAe8D,OAAf,EAAwB,CAAxB,EAA2B/D,SAA3B,CAAP;AACH,OA7CD;AA+CA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACMC,MAAAA,UAAU,CAACkB,SAAX,CAAqB0C,MAArB,GAA8B,YAAW;AACrC;AACA;AACA;AACA;AAEA,YAAI,KAAKtD,EAAL,KAAY,CAAhB,EAAmB;AACf,iBAAOH,IAAP;AACH;;AACD,YAAI,KAAKwD,MAAL,EAAJ,EAAmB;AACf,iBAAOhD,GAAP;AACH;;AAED,YAAIK,MAAM,GAAG,KAAKX,EAAlB;AACA,YAAI3K,MAAM,GAAGsL,MAAM,CAACtL,MAApB;AACA,YAAIwO,MAAM,GAAG,IAAInC,KAAJ,CAAUrM,MAAM,GAAGA,MAAT,GAAkB,CAA5B,CAAb;AACA,YAAIyO,OAAJ,EAAa9M,KAAb,EAAoBoB,CAApB;AACA,YAAI1D,CAAJ,CAjBqC,CAmBrC;;AACA,aAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGW,MAAhB,EAAwBX,CAAC,EAAzB,EAA6B;AACzB0D,UAAAA,CAAC,GAAG1D,CAAC,GAAG,CAAR;AACAoP,UAAAA,OAAO,GAAGnD,MAAM,CAACjM,CAAD,CAAN,GAAYiM,MAAM,CAACjM,CAAD,CAA5B;AACAsC,UAAAA,KAAK,GAAI8M,OAAO,GAAG3D,eAAX,GAA8B,CAAtC;AACA0D,UAAAA,MAAM,CAACzL,CAAD,CAAN,GAAY0L,OAAO,GAAG3D,eAAtB;AACA0D,UAAAA,MAAM,CAACzL,CAAC,GAAG,CAAL,CAAN,GAAgBpB,KAAhB;AACH,SA1BoC,CA4BrC;;;AACA,aAAKtC,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGW,MAAhB,EAAwBX,CAAC,EAAzB,EAA6B;AACzBsC,UAAAA,KAAK,GAAG,CAAR;AACAoB,UAAAA,CAAC,GAAG1D,CAAC,GAAG,CAAJ,GAAQ,CAAZ;;AACA,eAAK,IAAIgD,CAAC,GAAGhD,CAAC,GAAG,CAAjB,EAAoBgD,CAAC,GAAGrC,MAAxB,EAAgCqC,CAAC,IAAIU,CAAC,EAAtC,EAA0C;AACtC0L,YAAAA,OAAO,GAAGnD,MAAM,CAACjJ,CAAD,CAAN,GAAYiJ,MAAM,CAACjM,CAAD,CAAlB,GAAwB,CAAxB,GAA4BmP,MAAM,CAACzL,CAAD,CAAlC,GAAwCpB,KAAlD;AACAA,YAAAA,KAAK,GAAI8M,OAAO,GAAG3D,eAAX,GAA8B,CAAtC;AACA0D,YAAAA,MAAM,CAACzL,CAAD,CAAN,GAAY0L,OAAO,GAAG3D,eAAtB;AACH;;AACD/H,UAAAA,CAAC,GAAG/C,MAAM,GAAGX,CAAb;AACA,cAAIyM,KAAK,GAAGnK,KAAK,GAAG6M,MAAM,CAACzL,CAAD,CAA1B;AACApB,UAAAA,KAAK,GAAImK,KAAK,GAAGhB,eAAT,GAA4B,CAApC;AACA0D,UAAAA,MAAM,CAACzL,CAAD,CAAN,GAAY+I,KAAK,GAAGhB,eAApB;AACA0D,UAAAA,MAAM,CAACzL,CAAC,GAAG,CAAL,CAAN,IAAiBpB,KAAjB;AACH;;AAED,eAAO,IAAI2I,UAAJ,CAAekE,MAAf,EAAuB,CAAvB,EAA0BnE,SAA1B,CAAP;AACH,OA7CD;AA+CA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACMC,MAAAA,UAAU,CAACkB,SAAX,CAAqBkD,QAArB,GAAgC,UAASxP,CAAT,EAAY;AACxC,eAAO,KAAK8M,MAAL,CAAY9M,CAAZ,EAAe,CAAf,CAAP;AACH,OAFD;AAIA;AACN;AACA;AACA;;;AACMoL,MAAAA,UAAU,CAACkB,SAAX,CAAqBmD,MAArB,GAA8BrE,UAAU,CAACkB,SAAX,CAAqBkD,QAAnD;AAEA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACMpE,MAAAA,UAAU,CAACkB,SAAX,CAAqBoD,SAArB,GAAiC,UAAS1P,CAAT,EAAY;AACzC,eAAO,KAAK8M,MAAL,CAAY9M,CAAZ,EAAe,CAAf,CAAP;AACH,OAFD;AAIA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACMoL,MAAAA,UAAU,CAACkB,SAAX,CAAqBQ,MAArB,GAA8B,UAAS9M,CAAT,EAAY;AACtCA,QAAAA,CAAC,GAAGoL,UAAU,CAACpL,CAAD,CAAd;;AACA,YAAIA,CAAC,CAAC0L,EAAF,KAAS,CAAb,EAAgB;AACZ,gBAAM,IAAIjL,KAAJ,CAAU,gBAAV,CAAN;AACH;;AACD,YAAI,KAAKiL,EAAL,KAAY,CAAhB,EAAmB;AACf,iBAAO,CAACH,IAAD,EAAOA,IAAP,CAAP;AACH;;AACD,YAAIvL,CAAC,CAACyL,EAAF,CAAK3K,MAAL,KAAgB,CAApB,EAAuB;AACnB,iBAAO,KAAK6O,WAAL,CAAiB3P,CAAC,CAAC0L,EAAF,GAAO1L,CAAC,CAACyL,EAAF,CAAK,CAAL,CAAxB,CAAP;AACH,SAVqC,CAYtC;;;AACA,gBAAQ,KAAK2C,UAAL,CAAgBpO,CAAhB,CAAR;AACA,eAAK,CAAL;AAAQ;AACJ,mBAAO,CAAC,KAAK0L,EAAL,KAAY1L,CAAC,CAAC0L,EAAd,GAAmBK,GAAnB,GAAyBC,KAA1B,EAAiCT,IAAjC,CAAP;;AACJ,eAAK,CAAC,CAAN;AAAS;AACL,mBAAO,CAACA,IAAD,EAAO,IAAP,CAAP;AAJJ;;AAOA,YAAImB,IAAI,GAAG,KAAKhB,EAAL,GAAU1L,CAAC,CAAC0L,EAAvB;AACA,YAAIlL,CAAC,GAAGR,CAAC,CAAC2M,GAAF,EAAR;AACA,YAAIiD,QAAQ,GAAG,KAAKnE,EAApB;AACA,YAAIoE,OAAO,GAAGD,QAAQ,CAAC9O,MAAvB;AACA,YAAIsL,MAAM,GAAGpM,CAAC,CAACyL,EAAF,CAAK3K,MAAlB;AACA,YAAIgP,IAAI,GAAG,EAAX;AACA,YAAIC,KAAJ;AAEA,YAAIC,IAAI,GAAG,IAAI5E,UAAJ,CAAe,EAAf,EAAmB,CAAnB,EAAsBD,SAAtB,CAAX;;AAEA,eAAO0E,OAAP,EAAgB;AACZG,UAAAA,IAAI,CAACvE,EAAL,CAAQwE,OAAR,CAAgBL,QAAQ,CAAC,EAAEC,OAAH,CAAxB;;AACAG,UAAAA,IAAI,GAAG,IAAI5E,UAAJ,CAAe4E,IAAI,CAACvE,EAApB,EAAwB,CAAxB,EAA2BN,SAA3B,CAAP;;AAEA,cAAI6E,IAAI,CAAC5B,UAAL,CAAgBpO,CAAhB,IAAqB,CAAzB,EAA4B;AACxB8P,YAAAA,IAAI,CAACtL,IAAL,CAAU,CAAV;AACA;AACH;;AACD,cAAIwL,IAAI,CAACtE,EAAL,KAAY,CAAhB,EAAmB;AACfqE,YAAAA,KAAK,GAAG,CAAR;AACH,WAFD,MAGK;AACD,gBAAIG,IAAI,GAAGF,IAAI,CAACvE,EAAL,CAAQ3K,MAAnB;AAAA,gBAA2BqP,IAAI,GAAG3P,CAAC,CAACiL,EAAF,CAAK3K,MAAvC;AACA,gBAAIsP,KAAK,GAAGJ,IAAI,CAACvE,EAAL,CAAQyE,IAAI,GAAC,CAAb,IAAgBtE,eAAhB,GAAkCoE,IAAI,CAACvE,EAAL,CAAQyE,IAAI,GAAC,CAAb,CAA9C;AACA,gBAAIG,KAAK,GAAG7P,CAAC,CAACiL,EAAF,CAAK0E,IAAI,GAAC,CAAV,IAAavE,eAAb,GAA+BpL,CAAC,CAACiL,EAAF,CAAK0E,IAAI,GAAC,CAAV,CAA3C;;AACA,gBAAIH,IAAI,CAACvE,EAAL,CAAQ3K,MAAR,GAAiBN,CAAC,CAACiL,EAAF,CAAK3K,MAA1B,EAAkC;AAC9B;AACA;AACAsP,cAAAA,KAAK,GAAG,CAACA,KAAK,GAAC,CAAP,IAAUxE,eAAlB;AACH;;AACDmE,YAAAA,KAAK,GAAGjO,IAAI,CAACwO,IAAL,CAAUF,KAAK,GAACC,KAAhB,CAAR;AACH;;AACD,aAAG;AACC,gBAAIE,KAAK,GAAG/P,CAAC,CAAC6O,mBAAF,CAAsBU,KAAtB,CAAZ;;AACA,gBAAIQ,KAAK,CAACnC,UAAN,CAAiB4B,IAAjB,KAA0B,CAA9B,EAAiC;AAC7B;AACH;;AACDD,YAAAA,KAAK;AACR,WAND,QAMSA,KANT;;AAQAD,UAAAA,IAAI,CAACtL,IAAL,CAAUuL,KAAV;;AACA,cAAI,CAACA,KAAL,EAAY;AACR;AACH;;AACD,cAAI1B,IAAI,GAAG2B,IAAI,CAAClC,QAAL,CAAcyC,KAAd,CAAX;AACAP,UAAAA,IAAI,CAACvE,EAAL,GAAU4C,IAAI,CAAC5C,EAAL,CAAQhH,KAAR,EAAV;AACH;;AAED,eAAO,CAAC,IAAI2G,UAAJ,CAAe0E,IAAI,CAAChG,OAAL,EAAf,EAA+B4C,IAA/B,EAAqCvB,SAArC,CAAD,EACA,IAAIC,UAAJ,CAAe4E,IAAI,CAACvE,EAApB,EAAwB,KAAKC,EAA7B,EAAiCP,SAAjC,CADA,CAAP;AAEH,OAtED,CA56Be,CAo/Bf;AACA;AACA;;;AACAC,MAAAA,UAAU,CAACkB,SAAX,CAAqBqD,WAArB,GAAmC,UAAS3P,CAAT,EAAY;AAC3C,YAAIF,CAAJ;AACAE,QAAAA,CAAC,GAAG,CAACA,CAAL;;AACA,YAAIA,CAAC,KAAK,CAAV,EAAa;AACT,gBAAM,IAAIS,KAAJ,CAAU,gBAAV,CAAN;AACH;;AAED,YAAI+P,GAAG,GAAGxQ,CAAC,GAAG,CAAJ,GAAQ,CAAC,CAAT,GAAa,CAAvB;AACA,YAAI0M,IAAI,GAAG,KAAKhB,EAAL,GAAU8E,GAArB;AACAxQ,QAAAA,CAAC,GAAG8B,IAAI,CAAC6K,GAAL,CAAS3M,CAAT,CAAJ;;AAEA,YAAIA,CAAC,GAAG,CAAJ,IAASA,CAAC,IAAI4L,eAAlB,EAAmC;AAC/B,gBAAM,IAAInL,KAAJ,CAAU,uBAAV,CAAN;AACH;;AAED,YAAI,KAAKiL,EAAL,KAAY,CAAhB,EAAmB;AACf,iBAAO,CAACH,IAAD,EAAOA,IAAP,CAAP;AACH;;AAED,YAAIvL,CAAC,KAAK,CAAN,IAAWA,CAAC,KAAK,CAAC,CAAtB,EAAyB;AACrB,iBAAO,CAAE0M,IAAI,KAAK,CAAV,GAAe,KAAKC,GAAL,EAAf,GAA4B,IAAIvB,UAAJ,CAAe,KAAKK,EAApB,EAAwBiB,IAAxB,EAA8BvB,SAA9B,CAA7B,EAAuEI,IAAvE,CAAP;AACH,SArB0C,CAuB3C;AAEA;;;AACA,YAAI,KAAKE,EAAL,CAAQ3K,MAAR,KAAmB,CAAvB,EAA0B;AACtB,cAAIiD,CAAC,GAAG,IAAIqH,UAAJ,CAAe,CAAE,KAAKK,EAAL,CAAQ,CAAR,IAAazL,CAAd,GAAmB,CAApB,CAAf,EAAuC,CAAvC,EAA0CmL,SAA1C,CAAR;AACArL,UAAAA,CAAC,GAAG,IAAIsL,UAAJ,CAAe,CAAE,KAAKK,EAAL,CAAQ,CAAR,IAAazL,CAAd,GAAmB,CAApB,CAAf,EAAuC,CAAvC,EAA0CmL,SAA1C,CAAJ;;AACA,cAAIuB,IAAI,GAAG,CAAX,EAAc;AACV3I,YAAAA,CAAC,GAAGA,CAAC,CAAC8J,MAAF,EAAJ;AACH;;AACD,cAAI,KAAKnC,EAAL,GAAU,CAAd,EAAiB;AACb5L,YAAAA,CAAC,GAAGA,CAAC,CAAC+N,MAAF,EAAJ;AACH;;AACD,iBAAO,CAAC9J,CAAD,EAAIjE,CAAJ,CAAP;AACH;;AAED,YAAIsM,MAAM,GAAG,KAAKX,EAAL,CAAQhH,KAAR,EAAb;;AACA,YAAIqL,IAAI,GAAG,IAAI3C,KAAJ,CAAUf,MAAM,CAACtL,MAAjB,CAAX;AACA,YAAIkP,IAAI,GAAG,CAAX;AACA,YAAI3B,IAAI,GAAG,CAAX;AACA,YAAIlO,CAAC,GAAG,CAAR;AACA,YAAI4P,KAAJ;;AAEA,eAAO3D,MAAM,CAACtL,MAAd,EAAsB;AAClBkP,UAAAA,IAAI,GAAGA,IAAI,GAAGpE,eAAP,GAAyBQ,MAAM,CAACA,MAAM,CAACtL,MAAP,GAAgB,CAAjB,CAAtC;;AACA,cAAIkP,IAAI,GAAGhQ,CAAX,EAAc;AACV8P,YAAAA,IAAI,CAAC3P,CAAC,EAAF,CAAJ,GAAY,CAAZ;AACAiM,YAAAA,MAAM,CAACqE,GAAP;AACApC,YAAAA,IAAI,GAAGzC,eAAe,GAAGyC,IAAlB,GAAyB2B,IAAhC;AACA;AACH;;AACD,cAAIA,IAAI,KAAK,CAAb,EAAgB;AACZD,YAAAA,KAAK,GAAG,CAAR;AACH,WAFD,MAGK;AACDA,YAAAA,KAAK,GAAIC,IAAI,GAAGhQ,CAAR,GAAa,CAArB;AACH;;AAED,cAAIuQ,KAAK,GAAGvQ,CAAC,GAAG+P,KAAhB;AACA1B,UAAAA,IAAI,GAAG2B,IAAI,GAAGO,KAAd;AACAT,UAAAA,IAAI,CAAC3P,CAAC,EAAF,CAAJ,GAAY4P,KAAZ;;AACA,cAAI,CAACA,KAAL,EAAY;AACR3D,YAAAA,MAAM,CAACqE,GAAP;AACA;AACH;;AAEDrE,UAAAA,MAAM,CAACqE,GAAP;AACAT,UAAAA,IAAI,GAAG3B,IAAP;AACH;;AAEDvO,QAAAA,CAAC,GAAG,IAAIsL,UAAJ,CAAe,CAACiD,IAAD,CAAf,EAAuB,CAAvB,EAA0BlD,SAA1B,CAAJ;;AACA,YAAI,KAAKO,EAAL,GAAU,CAAd,EAAiB;AACb5L,UAAAA,CAAC,GAAGA,CAAC,CAAC+N,MAAF,EAAJ;AACH;;AACD,eAAO,CAAC,IAAIzC,UAAJ,CAAe0E,IAAI,CAAChG,OAAL,EAAf,EAA+B4C,IAA/B,EAAqCvB,SAArC,CAAD,EAAkDrL,CAAlD,CAAP;AACH,OA7ED;AA+EA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACMsL,MAAAA,UAAU,CAACkB,SAAX,CAAqBoE,MAArB,GAA8B,YAAW;AACrC,YAAItE,MAAM,GAAG,KAAKX,EAAlB;AACA,eAAO,KAAKC,EAAL,KAAY,CAAZ,IAAiBU,MAAM,CAACtL,MAAP,KAAkB,CAAnC,IAAyCsL,MAAM,CAAC,CAAD,CAAN,GAAY,CAAb,KAAoB,CAAnE;AACH,OAHD;AAKA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;;AACMhB,MAAAA,UAAU,CAACkB,SAAX,CAAqBqE,KAArB,GAA6B,YAAW;AACpC,eAAO,CAAC,KAAKD,MAAL,EAAR;AACH,OAFD;AAIA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACMtF,MAAAA,UAAU,CAACkB,SAAX,CAAqBI,IAArB,GAA4B,YAAW;AACnC,eAAO,KAAKhB,EAAZ;AACH,OAFD;AAIA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;;AACMN,MAAAA,UAAU,CAACkB,SAAX,CAAqBsE,UAArB,GAAkC,YAAW;AACzC,eAAO,KAAKlF,EAAL,GAAU,CAAjB;AACH,OAFD;AAIA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;;AACMN,MAAAA,UAAU,CAACkB,SAAX,CAAqBuE,UAArB,GAAkC,YAAW;AACzC,eAAO,KAAKnF,EAAL,GAAU,CAAjB;AACH,OAFD;AAIA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;;AACMN,MAAAA,UAAU,CAACkB,SAAX,CAAqBwE,MAArB,GAA8B,YAAW;AACrC,eAAO,KAAKpF,EAAL,KAAY,CAAnB;AACH,OAFD;AAIA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACMN,MAAAA,UAAU,CAACkB,SAAX,CAAqByE,KAArB,GAA6B,UAAS/Q,CAAT,EAAY;AACrCA,QAAAA,CAAC,GAAG,CAACA,CAAL;;AACA,YAAIA,CAAC,KAAK,CAAV,EAAa;AACT,iBAAO,IAAP;AACH;;AACD,YAAI8B,IAAI,CAAC6K,GAAL,CAAS3M,CAAT,IAAc8G,MAAM,CAACkK,OAAD,CAAxB,EAAmC;AAC/B,gBAAM,IAAIvQ,KAAJ,CAAU,wCAAV,CAAN;AACH,SAPoC,CAQrC;;;AACA,YAAI,KAAKiL,EAAL,KAAY,CAAhB,EAAmB;AACf,iBAAOH,IAAP;AACH;;AACD,YAAIvL,CAAC,GAAG,CAAR,EAAW;AACP,cAAI6D,CAAC,GAAG,IAAIuH,UAAJ,CAAe,KAAKK,EAAL,CAAQhH,KAAR,EAAf,EAAgC,KAAKiH,EAArC,EAAyCP,SAAzC,CAAR;;AAEA,iBAAOnL,CAAC,IAAI6L,qBAAZ,EAAmC7L,CAAC,IAAI6L,qBAAxC,EAA+D;AAC3DhI,YAAAA,CAAC,CAAC4H,EAAF,CAAKwE,OAAL,CAAa,CAAb;AACH;;AACD,cAAIjQ,CAAC,IAAI,CAAT,EACI,OAAO6D,CAAP;AACJA,UAAAA,CAAC,CAAC6H,EAAF,GAAO,CAAP;AACA7H,UAAAA,CAAC,GAAGA,CAAC,CAACwL,mBAAF,CAAsBvN,IAAI,CAACmP,GAAL,CAAS,EAAT,EAAajR,CAAb,CAAtB,CAAJ;AACA,iBAAQ,KAAK0L,EAAL,GAAU,CAAV,GAAc7H,CAAC,CAACgK,MAAF,EAAd,GAA2BhK,CAAnC;AACH,SAXD,MAWO,IAAI,CAAC7D,CAAD,IAAM,KAAKyL,EAAL,CAAQ3K,MAAR,GAAe+K,qBAAzB,EAAgD;AACnD,iBAAON,IAAP;AACH,SAFM,MAEA;AACH,cAAI1H,CAAC,GAAG,IAAIuH,UAAJ,CAAe,KAAKK,EAAL,CAAQhH,KAAR,EAAf,EAAgC,KAAKiH,EAArC,EAAyCP,SAAzC,CAAR;;AAEA,eAAKnL,CAAC,GAAG,CAACA,CAAV,EAAaA,CAAC,IAAI6L,qBAAlB,EAAyC7L,CAAC,IAAI6L,qBAA9C,EAAqE;AACjEhI,YAAAA,CAAC,CAAC4H,EAAF,CAAKyF,KAAL;AACH;;AACD,iBAAQlR,CAAC,IAAI,CAAN,GAAW6D,CAAX,GAAeA,CAAC,CAAC8L,WAAF,CAAc7N,IAAI,CAACmP,GAAL,CAAS,EAAT,EAAajR,CAAb,CAAd,EAA+B,CAA/B,CAAtB;AACH;AACJ,OAjCD;AAmCA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACMoL,MAAAA,UAAU,CAACkB,SAAX,CAAqB2E,GAArB,GAA2B,UAASjR,CAAT,EAAY;AACnC,YAAI,KAAK+O,MAAL,EAAJ,EAAmB;AACf,cAAI,KAAKrD,EAAL,GAAU,CAAd,EAAiB;AACb,mBAAO,IAAP;AACH,WAFD,MAGK;AACD,mBAAON,UAAU,CAACpL,CAAD,CAAV,CAAc2Q,KAAd,KAAwB,IAAxB,GAA+B,KAAK9C,MAAL,EAAtC;AACH;AACJ;;AAED7N,QAAAA,CAAC,GAAGoL,UAAU,CAACpL,CAAD,CAAd;;AACA,YAAIA,CAAC,CAAC0L,EAAF,KAAS,CAAb,EAAgB;AACZ,iBAAOK,GAAP;AACH,SAFD,MAGK,IAAI/L,CAAC,CAAC0L,EAAF,GAAO,CAAX,EAAc;AACf,cAAI,KAAKA,EAAL,KAAY,CAAhB,EAAmB;AACf,kBAAM,IAAIjL,KAAJ,CAAU,gBAAV,CAAN;AACH,WAFD,MAGK;AACD,mBAAO8K,IAAP;AACH;AACJ;;AACD,YAAI,KAAKG,EAAL,KAAY,CAAhB,EAAmB;AACf,iBAAOH,IAAP;AACH;;AACD,YAAIvL,CAAC,CAAC+O,MAAF,EAAJ,EAAgB;AACZ,iBAAO,IAAP;AACH;;AAED,YAAI/O,CAAC,CAACoO,UAAF,CAAa4C,OAAb,IAAwB,CAA5B,EAA+B;AAC3B,gBAAM,IAAIvQ,KAAJ,CAAU,sCAAV,CAAN;AACH;;AACD,YAAIc,CAAC,GAAG,IAAR;AACA,YAAI4P,GAAG,GAAGpF,GAAV;AACA,YAAIqF,GAAG,GAAGhG,UAAU,CAACe,KAAX,CAAiB,CAAjB,CAAV;;AAEA,eAAOnM,CAAC,CAAC4Q,UAAF,EAAP,EAAuB;AACnB,cAAI5Q,CAAC,CAAC2Q,KAAF,EAAJ,EAAe;AACXQ,YAAAA,GAAG,GAAGA,GAAG,CAACxD,QAAJ,CAAapM,CAAb,CAAN;;AACA,gBAAIvB,CAAC,CAAC+O,MAAF,EAAJ,EAAgB;AACZ,qBAAOoC,GAAP;AACH;AACJ;;AACD5P,UAAAA,CAAC,GAAGA,CAAC,CAACyN,MAAF,EAAJ;AACAhP,UAAAA,CAAC,GAAGA,CAAC,CAACwP,QAAF,CAAW4B,GAAX,CAAJ;AACH;;AAED,eAAOD,GAAP;AACH,OAhDD;AAkDA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACM/F,MAAAA,UAAU,CAACkB,SAAX,CAAqB+E,MAArB,GAA8B,UAASC,QAAT,EAAmBC,OAAnB,EAA4B;AACtD,YAAIC,MAAM,GAAGzF,GAAb;AACA,YAAI9K,IAAI,GAAG,IAAX;;AAEA,eAAOqQ,QAAQ,CAACV,UAAT,EAAP,EAA8B;AAC1B,cAAIU,QAAQ,CAACX,KAAT,EAAJ,EAAsB;AAClBa,YAAAA,MAAM,GAAGA,MAAM,CAAC7D,QAAP,CAAgB1M,IAAhB,EAAsByO,SAAtB,CAAgC6B,OAAhC,CAAT;AACH;;AAEDD,UAAAA,QAAQ,GAAGA,QAAQ,CAAC9B,QAAT,CAAkBpE,UAAU,CAACe,KAAX,CAAiB,CAAjB,CAAlB,CAAX;;AACA,cAAImF,QAAQ,CAACV,UAAT,EAAJ,EAA2B;AACvB3P,YAAAA,IAAI,GAAGA,IAAI,CAAC+N,MAAL,GAAcU,SAAd,CAAwB6B,OAAxB,CAAP;AACH;AACJ;;AAED,eAAOC,MAAP;AACH,OAhBD;AAkBA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACMpG,MAAAA,UAAU,CAACkB,SAAX,CAAqBvK,GAArB,GAA2B,YAAW;AAClC,gBAAQ,KAAK2J,EAAb;AACA,eAAK,CAAL;AAAS,mBAAO,CAAC+F,QAAR;;AACT,eAAK,CAAC,CAAN;AAAS,mBAAOC,GAAP;;AACT,kBAHA,CAGS;;AAHT;;AAMA,YAAIhO,CAAC,GAAG,KAAK+H,EAAL,CAAQ3K,MAAhB;;AAEA,YAAI4C,CAAC,GAACmI,qBAAF,GAA0B,EAA9B,EAAkC;AAC9B,iBAAO/J,IAAI,CAACC,GAAL,CAAS,KAAKgL,OAAL,EAAT,CAAP;AACH;;AAED,YAAItG,CAAC,GAAG3E,IAAI,CAACwO,IAAL,CAAU,KAAGzE,qBAAb,CAAR;;AACA,YAAI8F,YAAY,GAAG,KAAKlG,EAAL,CAAQhH,KAAR,CAAcf,CAAC,GAAG+C,CAAlB,CAAnB;;AACA,eAAO3E,IAAI,CAACC,GAAL,CAAU,IAAIqJ,UAAJ,CAAeuG,YAAf,EAA6B,CAA7B,EAAgCxG,SAAhC,CAAD,CAA6C4B,OAA7C,EAAT,IAAmE,CAACrJ,CAAC,GAAG+C,CAAL,IAAU3E,IAAI,CAACC,GAAL,CAAS6J,eAAT,CAApF;AACH,OAhBD;AAkBA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACMR,MAAAA,UAAU,CAACkB,SAAX,CAAqBS,OAArB,GAA+B,YAAW;AACtC,eAAO1I,QAAQ,CAAC,KAAKkI,QAAL,EAAD,EAAkB,EAAlB,CAAf;AACH,OAFD;AAIA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACMnB,MAAAA,UAAU,CAACkB,SAAX,CAAqBsF,SAArB,GAAiC,YAAW;AACxC,eAAOvN,QAAQ,CAAC,KAAKkI,QAAL,EAAD,EAAkB,EAAlB,CAAf;AACH,OAFD;AAKA;AACN;AACA;AACA;;;AACMnB,MAAAA,UAAU,CAACkB,SAAX,CAAqBuF,MAArB,GAA8B,YAAY;AACtC,eAAO,KAAKpG,EAAL,CAAQ,CAAR,KAAc,CAArB;AACH,OAFD;;AAIA,UAAIuF,OAAO,GAAG5F,UAAU,CAAC,UAAD,CAAxB,CAt2Ce,CAu2Cf;AACA;;AACAA,MAAAA,UAAU,CAAC4F,OAAX,GAAqBA,OAArB;;AAEA,OAAC,YAAW;AACR,iBAASc,SAAT,CAAmBC,EAAnB,EAAuB;AACnB,iBAAO,UAASvR,CAAT,EAAY;AACf,mBAAOuR,EAAE,CAAClR,IAAH,CAAQuK,UAAU,CAAC5K,CAAD,CAAlB,CAAP;AACH,WAFD;AAGH;;AAED,iBAASwR,UAAT,CAAoBD,EAApB,EAAwB;AACpB,iBAAO,UAASvR,CAAT,EAAYmD,CAAZ,EAAe;AAClB,mBAAOoO,EAAE,CAAClR,IAAH,CAAQuK,UAAU,CAAC5K,CAAD,CAAlB,EAAuB4K,UAAU,CAACzH,CAAD,CAAjC,CAAP;AACH,WAFD;AAGH;;AAED,iBAASsO,WAAT,CAAqBF,EAArB,EAAyB;AACrB,iBAAO,UAASvR,CAAT,EAAYmD,CAAZ,EAAetD,CAAf,EAAkB;AACrB,mBAAO0R,EAAE,CAAClR,IAAH,CAAQuK,UAAU,CAAC5K,CAAD,CAAlB,EAAuB4K,UAAU,CAACzH,CAAD,CAAjC,EAAsCyH,UAAU,CAAC/K,CAAD,CAAhD,CAAP;AACH,WAFD;AAGH;;AAED,SAAC,YAAW;AACR,cAAIF,CAAJ,EAAO4R,EAAP;AACA,cAAIG,KAAK,GAAG,2GAA2G7F,KAA3G,CAAiH,GAAjH,CAAZ;AACA,cAAI8F,MAAM,GAAG,gFAAgF9F,KAAhF,CAAsF,GAAtF,CAAb;AACA,cAAI+F,OAAO,GAAG,CAAC,QAAD,CAAd;;AAEA,eAAKjS,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG+R,KAAK,CAACpR,MAAtB,EAA8BX,CAAC,EAA/B,EAAmC;AAC/B4R,YAAAA,EAAE,GAAGG,KAAK,CAAC/R,CAAD,CAAV;AACAiL,YAAAA,UAAU,CAAC2G,EAAD,CAAV,GAAiBD,SAAS,CAAC1G,UAAU,CAACkB,SAAX,CAAqByF,EAArB,CAAD,CAA1B;AACH;;AAED,eAAK5R,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGgS,MAAM,CAACrR,MAAvB,EAA+BX,CAAC,EAAhC,EAAoC;AAChC4R,YAAAA,EAAE,GAAGI,MAAM,CAAChS,CAAD,CAAX;AACAiL,YAAAA,UAAU,CAAC2G,EAAD,CAAV,GAAiBC,UAAU,CAAC5G,UAAU,CAACkB,SAAX,CAAqByF,EAArB,CAAD,CAA3B;AACH;;AAED,eAAK5R,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGiS,OAAO,CAACtR,MAAxB,EAAgCX,CAAC,EAAjC,EAAqC;AACjC4R,YAAAA,EAAE,GAAGK,OAAO,CAACjS,CAAD,CAAZ;AACAiL,YAAAA,UAAU,CAAC2G,EAAD,CAAV,GAAiBE,WAAW,CAAC7G,UAAU,CAACkB,SAAX,CAAqByF,EAArB,CAAD,CAA5B;AACH;;AAED3G,UAAAA,UAAU,CAAC2F,KAAX,GAAmB,UAASxP,CAAT,EAAYvB,CAAZ,EAAe;AAC9B,mBAAOoL,UAAU,CAAC7J,CAAD,CAAV,CAAcwP,KAAd,CAAoB/Q,CAApB,CAAP;AACH,WAFD;AAGH,SAxBD;AAyBH,OA5CD;;AA8CAY,MAAAA,OAAO,CAACyR,QAAR,GAAmBjH,UAAnB,CAz5Ce,CAy5CgB;AAC9B,KA15CL,EA05CO,OAAOxK,OAAP,KAAmB,WAAnB,GAAiCA,OAAjC,GAA2C,IA15ClD;AA25CC,GA36CO,EA26CN,EA36CM,CAvekc;AAk5Dpc,KAAE,CAAC,UAASN,OAAT,EAAiBS,MAAjB,EAAwBH,OAAxB,EAAgC;AACzC,KAAC,UAAUI,MAAV,EAAiB;AAClB;AAEA;AACF;AACA;;AACEsR,MAAAA,QAAQ,CAACC,KAAT,GAAiB,CACb,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,EAA/B,EAAmC,EAAnC,EAAuC,EAAvC,EAA2C,EAA3C,EAA+C,EAA/C,EAAmD,EAAnD,CADa,EAEb,CAAC,EAAD,EAAK,EAAL,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,EAAlB,EAAsB,EAAtB,EAA0B,CAA1B,EAA6B,CAA7B,EAAgC,EAAhC,EAAoC,CAApC,EAAuC,CAAvC,EAA0C,EAA1C,EAA8C,CAA9C,EAAiD,CAAjD,EAAoD,CAApD,CAFa,EAGb,CAAC,EAAD,EAAK,CAAL,EAAQ,EAAR,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,EAAqB,EAArB,EAAyB,EAAzB,EAA6B,EAA7B,EAAiC,EAAjC,EAAqC,CAArC,EAAwC,CAAxC,EAA2C,CAA3C,EAA8C,CAA9C,EAAiD,CAAjD,EAAoD,CAApD,CAHa,EAIb,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,EAA6B,CAA7B,EAAgC,CAAhC,EAAmC,CAAnC,EAAsC,EAAtC,EAA0C,CAA1C,EAA6C,CAA7C,EAAgD,EAAhD,EAAoD,CAApD,CAJa,EAKb,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,EAAnB,EAAuB,EAAvB,EAA2B,EAA3B,EAA+B,CAA/B,EAAkC,EAAlC,EAAsC,EAAtC,EAA0C,CAA1C,EAA6C,CAA7C,EAAgD,CAAhD,EAAmD,EAAnD,CALa,EAMb,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,EAAX,EAAe,CAAf,EAAkB,EAAlB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,EAA/B,EAAmC,CAAnC,EAAsC,CAAtC,EAAyC,EAAzC,EAA6C,EAA7C,EAAiD,CAAjD,EAAoD,CAApD,CANa,EAOb,CAAC,EAAD,EAAK,CAAL,EAAQ,CAAR,EAAW,EAAX,EAAe,EAAf,EAAmB,EAAnB,EAAuB,CAAvB,EAA0B,EAA1B,EAA8B,CAA9B,EAAiC,CAAjC,EAAoC,CAApC,EAAuC,CAAvC,EAA0C,CAA1C,EAA6C,CAA7C,EAAgD,CAAhD,EAAmD,EAAnD,CAPa,EAQb,CAAC,EAAD,EAAK,EAAL,EAAS,CAAT,EAAY,EAAZ,EAAgB,EAAhB,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B,EAA6B,CAA7B,EAAgC,CAAhC,EAAmC,EAAnC,EAAuC,CAAvC,EAA0C,CAA1C,EAA6C,CAA7C,EAAgD,CAAhD,EAAmD,EAAnD,CARa,EASb,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,CAAZ,EAAe,EAAf,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,EAA5B,EAAgC,CAAhC,EAAmC,EAAnC,EAAuC,CAAvC,EAA0C,CAA1C,EAA6C,CAA7C,EAAgD,EAAhD,EAAoD,CAApD,CATa,EAUb,CAAC,EAAD,EAAK,CAAL,EAAQ,CAAR,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,EAA1B,EAA8B,EAA9B,EAAkC,CAAlC,EAAqC,EAArC,EAAyC,CAAzC,EAA4C,EAA5C,EAAgD,EAAhD,EAAoD,CAApD,CAVa,EAWb,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,EAA/B,EAAmC,EAAnC,EAAuC,EAAvC,EAA2C,EAA3C,EAA+C,EAA/C,EAAmD,EAAnD,CAXa,EAYb,CAAC,EAAD,EAAK,EAAL,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,EAAlB,EAAsB,EAAtB,EAA0B,CAA1B,EAA6B,CAA7B,EAAgC,EAAhC,EAAoC,CAApC,EAAuC,CAAvC,EAA0C,EAA1C,EAA8C,CAA9C,EAAiD,CAAjD,EAAoD,CAApD,CAZa,EAab,CAAC,EAAD,EAAK,CAAL,EAAQ,EAAR,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,EAAqB,EAArB,EAAyB,EAAzB,EAA6B,EAA7B,EAAiC,EAAjC,EAAqC,CAArC,EAAwC,CAAxC,EAA2C,CAA3C,EAA8C,CAA9C,EAAiD,CAAjD,EAAoD,CAApD,CAba,EAcb,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,EAA6B,CAA7B,EAAgC,CAAhC,EAAmC,CAAnC,EAAsC,EAAtC,EAA0C,CAA1C,EAA6C,CAA7C,EAAgD,EAAhD,EAAoD,CAApD,CAda,EAeb,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,EAAnB,EAAuB,EAAvB,EAA2B,EAA3B,EAA+B,CAA/B,EAAkC,EAAlC,EAAsC,EAAtC,EAA0C,CAA1C,EAA6C,CAA7C,EAAgD,CAAhD,EAAmD,EAAnD,CAfa,EAgBb,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,EAAX,EAAe,CAAf,EAAkB,EAAlB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,EAA/B,EAAmC,CAAnC,EAAsC,CAAtC,EAAyC,EAAzC,EAA6C,EAA7C,EAAiD,CAAjD,EAAoD,CAApD,CAhBa,CAAjB;AAmBAD,MAAAA,QAAQ,CAACE,IAAT,GAAgB,CACZ,UADY,EACA,UADA,EACY,UADZ,EACwB,UADxB,EAEZ,UAFY,EAEA,UAFA,EAEY,UAFZ,EAEwB,UAFxB,EAGZ,UAHY,EAGA,UAHA,EAGY,UAHZ,EAGwB,UAHxB,EAIZ,UAJY,EAIA,UAJA,EAIY,UAJZ,EAIwB,UAJxB,CAAhB;AAOAF,MAAAA,QAAQ,CAACG,OAAT,GAAmB,IAAIzR,MAAJ,CAAW,CAC1B,IAD0B,EACpB,CADoB,EACjB,CADiB,EACd,CADc,EACX,CADW,EACR,CADQ,EACL,CADK,EACF,CADE,EACC,CADD,EACI,CADJ,EACO,CADP,EACU,CADV,EACa,CADb,EACgB,CADhB,EACmB,CADnB,EACsB,CADtB,EAE1B,CAF0B,EAEvB,CAFuB,EAEpB,CAFoB,EAEjB,CAFiB,EAEd,CAFc,EAEX,CAFW,EAER,CAFQ,EAEL,CAFK,EAEF,CAFE,EAEC,CAFD,EAEI,CAFJ,EAEO,CAFP,EAEU,CAFV,EAEa,CAFb,EAEgB,CAFhB,EAEmB,CAFnB,EAEsB,CAFtB,EAG1B,CAH0B,EAGvB,CAHuB,EAGpB,CAHoB,EAGjB,CAHiB,EAGd,CAHc,EAGX,CAHW,EAGR,CAHQ,EAGL,CAHK,EAGF,CAHE,EAGC,CAHD,EAGI,CAHJ,EAGO,CAHP,EAGU,CAHV,EAGa,CAHb,EAGgB,CAHhB,EAGmB,CAHnB,EAGsB,CAHtB,EAI1B,CAJ0B,EAIvB,CAJuB,EAIpB,CAJoB,EAIjB,CAJiB,EAId,CAJc,EAIX,CAJW,EAIR,CAJQ,EAIL,CAJK,EAIF,CAJE,EAIC,CAJD,EAII,CAJJ,EAIO,CAJP,EAIU,CAJV,EAIa,CAJb,EAIgB,CAJhB,EAImB,CAJnB,EAIsB,CAJtB,EAK1B,CAL0B,EAKvB,CALuB,EAKpB,CALoB,EAKjB,CALiB,EAKd,CALc,EAKX,CALW,EAKR,CALQ,EAKL,CALK,EAKF,CALE,EAKC,CALD,EAKI,CALJ,EAKO,CALP,EAKU,CALV,EAKa,CALb,EAKgB,CALhB,EAKmB,CALnB,EAKsB,CALtB,EAM1B,CAN0B,EAMvB,CANuB,EAMpB,CANoB,EAMjB,CANiB,EAMd,CANc,EAMX,CANW,EAMR,CANQ,EAML,CANK,EAMF,CANE,EAMC,CAND,EAMI,CANJ,EAMO,CANP,EAMU,CANV,EAMa,CANb,EAMgB,CANhB,EAMmB,CANnB,EAMsB,CANtB,EAO1B,CAP0B,EAOvB,CAPuB,EAOpB,CAPoB,EAOjB,CAPiB,EAOd,CAPc,EAOX,CAPW,EAOR,CAPQ,EAOL,CAPK,EAOF,CAPE,EAOC,CAPD,EAOI,CAPJ,EAOO,CAPP,EAOU,CAPV,EAOa,CAPb,EAOgB,CAPhB,EAOmB,CAPnB,EAOsB,CAPtB,EAQ1B,CAR0B,EAQvB,CARuB,EAQpB,CARoB,EAQjB,CARiB,EAQd,CARc,EAQX,CARW,EAQR,CARQ,EAQL,CARK,EAQF,CARE,EAQC,CARD,EAQI,CARJ,CAAX,CAAnB;;AAWAsR,MAAAA,QAAQ,CAAChG,SAAT,CAAmBoG,aAAnB,GAAmC,UAAUC,GAAV,EAAe;AAC9C,aAAK,IAAIxP,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGwP,GAAG,CAAC7R,MAAxB,EAAgC,EAAEqC,CAAlC,EAAqC;AACjC,cAAIwP,GAAG,CAACxP,CAAD,CAAH,GAAS,YAAb,EAA2B;AAC3BwP,UAAAA,GAAG,CAACxP,CAAD,CAAH,IAAU,YAAV;AACAwP,UAAAA,GAAG,CAACxP,CAAC,GAAG,CAAL,CAAH,IAAc,CAAd;AACH;AACJ,OAND;;AAQAmP,MAAAA,QAAQ,CAAChG,SAAT,CAAmBxH,MAAnB,GAA4B,UAAU2F,IAAV,EAAgBtG,QAAhB,EAA0B;AAClDsG,QAAAA,IAAI,GAAG,IAAIzJ,MAAJ,CAAWyJ,IAAX,EAAiBtG,QAAjB,CAAP;AACA,YAAIyO,KAAK,GAAG,KAAKC,MAAjB;AACA,YAAIC,MAAM,GAAG,CAAb;;AAEA,eAAO,KAAKC,YAAL,GAAoBtI,IAAI,CAAC3J,MAAzB,GAAkCgS,MAAlC,IAA4CF,KAAK,CAAC9R,MAAzD,EAAiE;AAC7D,eAAK,IAAIX,CAAC,GAAG,KAAK4S,YAAlB,EAAgC5S,CAAC,GAAGyS,KAAK,CAAC9R,MAA1C,GAAmD8R,KAAK,CAACzS,CAAC,EAAF,CAAL,GAAasK,IAAI,CAACqI,MAAM,EAAP,CAAjB;;AAEnD,eAAKE,OAAL,CAAa,CAAb,KAAmBJ,KAAK,CAAC9R,MAAN,GAAe,CAAlC;;AACA,eAAK4R,aAAL,CAAmB,KAAKM,OAAxB;;AAEA,eAAKC,SAAL;;AACA,eAAKF,YAAL,GAAoB,CAApB;AACH;;AAED,eAAOD,MAAM,GAAGrI,IAAI,CAAC3J,MAArB,EAA6B8R,KAAK,CAAC,KAAKG,YAAL,EAAD,CAAL,GAA6BtI,IAAI,CAACqI,MAAM,EAAP,CAAjC;;AAC7B,eAAO,IAAP;AACH,OAjBD;;AAmBA,UAAII,EAAE,GAAG,IAAIlS,MAAJ,CAAW,CAAC,IAAD,CAAX,CAAT;AACA,UAAImS,EAAE,GAAG,IAAInS,MAAJ,CAAW,CAAC,IAAD,CAAX,CAAT;;AAEA,eAASoS,GAAT,CAAc7R,CAAd,EAAiBvB,CAAjB,EAAoB;AAChB,eAAO,CAAEuB,CAAC,IAAK,KAAKvB,CAAZ,GAAmBuB,CAAC,KAAKvB,CAA1B,MAAkC,CAAzC;AACH;;AAED,eAAS4D,CAAT,CAAYyB,CAAZ,EAAepB,CAAf,EAAkB9D,CAAlB,EAAqBK,CAArB,EAAwBmD,CAAxB,EAA2BtD,CAA3B,EAA8BoD,CAA9B,EAAiC1D,CAAjC,EAAoC;AAChC,YAAIwS,KAAK,GAAGD,QAAQ,CAACC,KAArB;AACA,YAAIC,IAAI,GAAGF,QAAQ,CAACE,IAApB;AAEAnN,QAAAA,CAAC,CAAC7E,CAAD,CAAD,GAAQ6E,CAAC,CAAC7E,CAAD,CAAD,IAAQ,CAACyD,CAAC,CAACsO,KAAK,CAACpS,CAAD,CAAL,CAASJ,CAAT,CAAD,CAAD,GAAiByS,IAAI,CAACD,KAAK,CAACpS,CAAD,CAAL,CAASJ,CAAC,GAAG,CAAb,CAAD,CAAtB,MAA6C,CAArD,IAA0DsF,CAAC,CAAC1B,CAAD,CAA5D,KAAqE,CAA5E;AACA0B,QAAAA,CAAC,CAAC5B,CAAD,CAAD,GAAO2P,GAAG,CAAC/N,CAAC,CAAC5B,CAAD,CAAD,GAAO4B,CAAC,CAAC7E,CAAD,CAAT,EAAc,EAAd,CAAV;AACA6E,QAAAA,CAAC,CAAChF,CAAD,CAAD,GAAQgF,CAAC,CAAChF,CAAD,CAAD,GAAOgF,CAAC,CAAC5B,CAAD,CAAT,KAAkB,CAAzB;AACA4B,QAAAA,CAAC,CAAC1B,CAAD,CAAD,GAAOyP,GAAG,CAAC/N,CAAC,CAAC1B,CAAD,CAAD,GAAO0B,CAAC,CAAChF,CAAD,CAAT,EAAc,EAAd,CAAV;AACAgF,QAAAA,CAAC,CAAC7E,CAAD,CAAD,GAAQ6E,CAAC,CAAC7E,CAAD,CAAD,IAAQ,CAACyD,CAAC,CAACsO,KAAK,CAACpS,CAAD,CAAL,CAASJ,CAAC,GAAG,CAAb,CAAD,CAAD,GAAqByS,IAAI,CAACD,KAAK,CAACpS,CAAD,CAAL,CAASJ,CAAT,CAAD,CAA1B,MAA6C,CAArD,IAA0DsF,CAAC,CAAC1B,CAAD,CAA5D,KAAqE,CAA5E;AACA0B,QAAAA,CAAC,CAAC5B,CAAD,CAAD,GAAO2P,GAAG,CAAC/N,CAAC,CAAC5B,CAAD,CAAD,GAAO4B,CAAC,CAAC7E,CAAD,CAAT,EAAc,CAAd,CAAV;AACA6E,QAAAA,CAAC,CAAChF,CAAD,CAAD,GAAQgF,CAAC,CAAChF,CAAD,CAAD,GAAOgF,CAAC,CAAC5B,CAAD,CAAT,KAAkB,CAAzB;AACA4B,QAAAA,CAAC,CAAC1B,CAAD,CAAD,GAAOyP,GAAG,CAAC/N,CAAC,CAAC1B,CAAD,CAAD,GAAO0B,CAAC,CAAChF,CAAD,CAAT,EAAc,CAAd,CAAV;AACH;;AAED,eAASiS,QAAT,GAAqB;AACjB,aAAKe,EAAL,GAAU,CACN,UADM,EACM,UADN,EACkB,UADlB,EAC8B,UAD9B,EAEN,UAFM,EAEM,UAFN,EAEkB,UAFlB,EAE8B,UAF9B,CAAV;AAKA,aAAK3H,EAAL,GAAU,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAAV;AAEA,aAAKmH,MAAL,GAAc,IAAI7R,MAAJ,CAAW,EAAX,CAAd;AACA,aAAK+R,YAAL,GAAoB,CAApB;AACA,aAAKC,OAAL,GAAe,CAAC,CAAD,EAAI,CAAJ,CAAf;AAEA,aAAKM,MAAL,GAAc,KAAd;AAEA,aAAKC,GAAL,GAAWL,EAAX;AACA,aAAKM,GAAL,GAAWL,EAAX;AACH;;AAEDb,MAAAA,QAAQ,CAAChG,SAAT,CAAmB2G,SAAnB,GAA+B,YAAY;AACvC,YAAIT,IAAI,GAAGF,QAAQ,CAACE,IAApB;AACA,YAAInN,CAAC,GAAG,IAAI8H,KAAJ,CAAU,EAAV,CAAR;AACA,YAAIlJ,CAAC,GAAG,IAAIkJ,KAAJ,CAAU,EAAV,CAAR;AACA,YAAIhN,CAAJ;;AAEA,aAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,EAAhB,EAAoB,EAAEA,CAAtB,EAAyB8D,CAAC,CAAC9D,CAAD,CAAD,GAAO,KAAK0S,MAAL,CAAYY,YAAZ,CAAyBtT,CAAC,GAAG,CAA7B,CAAP;;AACzB,aAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,CAAhB,EAAmB,EAAEA,CAArB,EAAwBkF,CAAC,CAAClF,CAAD,CAAD,GAAO,KAAKkT,EAAL,CAAQlT,CAAR,MAAe,CAAtB;;AACxB,aAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,EAAhB,EAAoB,EAAEA,CAAtB,EAAyBkF,CAAC,CAAClF,CAAD,CAAD,GAAO,CAAC,KAAKuL,EAAL,CAAQvL,CAAC,GAAG,CAAZ,IAAiBqS,IAAI,CAACrS,CAAC,GAAG,CAAL,CAAtB,MAAmC,CAA1C;;AACzB,aAAKA,CAAC,GAAG,EAAT,EAAaA,CAAC,GAAG,EAAjB,EAAqB,EAAEA,CAAvB,EAA0BkF,CAAC,CAAClF,CAAD,CAAD,GAAOqS,IAAI,CAACrS,CAAC,GAAG,CAAL,CAAX;;AAE1B,YAAI,CAAC,KAAKmT,MAAV,EAAkB;AACdjO,UAAAA,CAAC,CAAC,EAAD,CAAD,GAAQ,CAACA,CAAC,CAAC,EAAD,CAAD,GAAQ,KAAK2N,OAAL,CAAa,CAAb,CAAT,MAA8B,CAAtC;AACA3N,UAAAA,CAAC,CAAC,EAAD,CAAD,GAAQ,CAACA,CAAC,CAAC,EAAD,CAAD,GAAQ,KAAK2N,OAAL,CAAa,CAAb,CAAT,MAA8B,CAAtC;AACA3N,UAAAA,CAAC,CAAC,EAAD,CAAD,GAAQ,CAACA,CAAC,CAAC,EAAD,CAAD,GAAQ,KAAK2N,OAAL,CAAa,CAAb,CAAT,MAA8B,CAAtC;AACA3N,UAAAA,CAAC,CAAC,EAAD,CAAD,GAAQ,CAACA,CAAC,CAAC,EAAD,CAAD,GAAQ,KAAK2N,OAAL,CAAa,CAAb,CAAT,MAA8B,CAAtC;AACH;;AAED,aAAK7S,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,EAAhB,EAAoB,EAAEA,CAAtB,EAAyB;AACrB;AACAyD,UAAAA,CAAC,CAACyB,CAAD,EAAIpB,CAAJ,EAAO9D,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,EAAnB,EAAuB,CAAvB,CAAD;AACAyD,UAAAA,CAAC,CAACyB,CAAD,EAAIpB,CAAJ,EAAO9D,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,EAAnB,EAAuB,CAAvB,CAAD;AACAyD,UAAAA,CAAC,CAACyB,CAAD,EAAIpB,CAAJ,EAAO9D,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,EAAhB,EAAoB,EAApB,EAAwB,CAAxB,CAAD;AACAyD,UAAAA,CAAC,CAACyB,CAAD,EAAIpB,CAAJ,EAAO9D,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,EAAhB,EAAoB,EAApB,EAAwB,CAAxB,CAAD;AACA;;AACAyD,UAAAA,CAAC,CAACyB,CAAD,EAAIpB,CAAJ,EAAO9D,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,EAAhB,EAAoB,EAApB,EAAwB,CAAxB,CAAD;AACAyD,UAAAA,CAAC,CAACyB,CAAD,EAAIpB,CAAJ,EAAO9D,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,EAAhB,EAAoB,EAApB,EAAwB,EAAxB,CAAD;AACAyD,UAAAA,CAAC,CAACyB,CAAD,EAAIpB,CAAJ,EAAO9D,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,EAAnB,EAAuB,EAAvB,CAAD;AACAyD,UAAAA,CAAC,CAACyB,CAAD,EAAIpB,CAAJ,EAAO9D,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,EAAnB,EAAuB,EAAvB,CAAD;AACH;;AAED,aAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,EAAhB,EAAoB,EAAEA,CAAtB,EAAyB,KAAKkT,EAAL,CAAQlT,CAAC,GAAG,CAAZ,IAAiB,CAAC,KAAKkT,EAAL,CAAQlT,CAAC,GAAG,CAAZ,IAAiBkF,CAAC,CAAClF,CAAD,CAAnB,MAA4B,CAA7C;;AACzB,aAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,CAAhB,EAAmB,EAAEA,CAArB,EAAwB,KAAKkT,EAAL,CAAQlT,CAAR,IAAa,CAAC,KAAKkT,EAAL,CAAQlT,CAAR,IAAa,KAAKuL,EAAL,CAAQvL,CAAC,GAAG,CAAZ,CAAd,MAAkC,CAA/C;AAC3B,OAjCD;;AAmCAmS,MAAAA,QAAQ,CAAChG,SAAT,CAAmBoH,QAAnB,GAA8B,YAAY;AACtC,YAAIC,EAAE,GAAG,KAAKX,OAAL,CAAa,CAAb,IAAkB,KAAKD,YAAL,GAAoB,CAA/C;AACA,YAAIa,EAAE,GAAG,KAAKZ,OAAL,CAAa,CAAb,CAAT;;AACA,YAAIW,EAAE,IAAI,YAAV,EAAwB;AACpBA,UAAAA,EAAE,IAAI,YAAN;AACAC,UAAAA,EAAE,IAAI,CAAN;AACH;;AAED,YAAIC,MAAM,GAAG,IAAI7S,MAAJ,CAAW,CAAX,CAAb;AACA6S,QAAAA,MAAM,CAACC,aAAP,CAAqBF,EAArB,EAAyB,CAAzB;AACAC,QAAAA,MAAM,CAACC,aAAP,CAAqBH,EAArB,EAAyB,CAAzB;;AAEA,YAAI,KAAKZ,YAAL,KAAsB,EAA1B,EAA8B;AAC1B,eAAKC,OAAL,CAAa,CAAb,KAAmB,CAAnB;AACA,eAAKlO,MAAL,CAAY,KAAK0O,GAAjB;AACH,SAHD,MAGO;AACH,cAAI,KAAKT,YAAL,GAAoB,EAAxB,EAA4B;AACxB,gBAAI,KAAKA,YAAL,KAAsB,CAA1B,EAA6B,KAAKO,MAAL,GAAc,IAAd;AAC7B,iBAAKN,OAAL,CAAa,CAAb,KAAmB,CAAC,KAAK,KAAKD,YAAX,IAA2B,CAA9C;AACA,iBAAKjO,MAAL,CAAYwN,QAAQ,CAACG,OAAT,CAAiBhO,KAAjB,CAAuB,CAAvB,EAA0B,KAAK,KAAKsO,YAApC,CAAZ;AACH,WAJD,MAIO;AACH,iBAAKC,OAAL,CAAa,CAAb,KAAmB,CAAC,KAAK,KAAKD,YAAX,IAA2B,CAA9C;AACA,iBAAKjO,MAAL,CAAYwN,QAAQ,CAACG,OAAT,CAAiBhO,KAAjB,CAAuB,CAAvB,EAA0B,KAAK,KAAKsO,YAApC,CAAZ;AACA,iBAAKC,OAAL,CAAa,CAAb,KAAmB,KAAK,CAAxB;AACA,iBAAKlO,MAAL,CAAYwN,QAAQ,CAACG,OAAT,CAAiBhO,KAAjB,CAAuB,CAAvB,EAA0B,IAAI,EAA9B,CAAZ;AACA,iBAAK6O,MAAL,GAAc,IAAd;AACH;;AAED,eAAKxO,MAAL,CAAY,KAAKyO,GAAjB;AACA,eAAKP,OAAL,CAAa,CAAb,KAAmB,CAAnB;AACH;;AAED,aAAKA,OAAL,CAAa,CAAb,KAAmB,EAAnB;AACA,aAAKlO,MAAL,CAAY+O,MAAZ;AACH,OAlCD;;AAoCAvB,MAAAA,QAAQ,CAAChG,SAAT,CAAmByH,MAAnB,GAA4B,UAAU5P,QAAV,EAAoB;AAC5C,aAAKuP,QAAL;;AAEA,YAAIpQ,MAAM,GAAG,IAAItC,MAAJ,CAAW,EAAX,CAAb;;AACA,aAAK,IAAIb,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuB,EAAEA,CAAzB,EAA4BmD,MAAM,CAACwQ,aAAP,CAAqB,KAAKT,EAAL,CAAQlT,CAAR,CAArB,EAAiCA,CAAC,GAAG,CAArC;;AAC5B,eAAOmD,MAAM,CAACiJ,QAAP,CAAgBpI,QAAhB,CAAP;AACH,OAND;;AAQApD,MAAAA,MAAM,CAACH,OAAP,GAAiB0R,QAAjB;AACC,KA7LD,EA6LGzR,IA7LH,CA6LQ,IA7LR,EA6LaP,OAAO,CAAC,QAAD,CAAP,CAAkBU,MA7L/B;AA8LC,GA/LO,EA+LN;AAAC,cAAS;AAAV,GA/LM,CAl5Dkc;AAilEzb,KAAE,CAAC,UAASV,OAAT,EAAiBS,MAAjB,EAAwBH,OAAxB,EAAgC;AACpD;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEE;AACA;AACA;;AACA,aAASoT,OAAT,CAAkB3O,CAAlB,EAAqB7E,CAArB,EAAwBmD,CAAxB,EAA2B;AACzB,UAAIsQ,EAAE,GAAG5O,CAAC,CAAC7E,CAAD,CAAD,GAAO6E,CAAC,CAAC1B,CAAD,CAAjB;AACA,UAAIuQ,EAAE,GAAG7O,CAAC,CAAC7E,CAAC,GAAG,CAAL,CAAD,GAAW6E,CAAC,CAAC1B,CAAC,GAAG,CAAL,CAArB;;AACA,UAAIsQ,EAAE,IAAI,WAAV,EAAuB;AACrBC,QAAAA,EAAE;AACH;;AACD7O,MAAAA,CAAC,CAAC7E,CAAD,CAAD,GAAOyT,EAAP;AACA5O,MAAAA,CAAC,CAAC7E,CAAC,GAAG,CAAL,CAAD,GAAW0T,EAAX;AACD,KAxBmD,CA0BpD;AACA;AACA;;;AACA,aAASC,OAAT,CAAkB9O,CAAlB,EAAqB7E,CAArB,EAAwB4T,EAAxB,EAA4BC,EAA5B,EAAgC;AAC9B,UAAIJ,EAAE,GAAG5O,CAAC,CAAC7E,CAAD,CAAD,GAAO4T,EAAhB;;AACA,UAAIA,EAAE,GAAG,CAAT,EAAY;AACVH,QAAAA,EAAE,IAAI,WAAN;AACD;;AACD,UAAIC,EAAE,GAAG7O,CAAC,CAAC7E,CAAC,GAAG,CAAL,CAAD,GAAW6T,EAApB;;AACA,UAAIJ,EAAE,IAAI,WAAV,EAAuB;AACrBC,QAAAA,EAAE;AACH;;AACD7O,MAAAA,CAAC,CAAC7E,CAAD,CAAD,GAAOyT,EAAP;AACA5O,MAAAA,CAAC,CAAC7E,CAAC,GAAG,CAAL,CAAD,GAAW0T,EAAX;AACD,KAxCmD,CA0CpD;;;AACA,aAASI,SAAT,CAAoB3B,GAApB,EAAyBxS,CAAzB,EAA4B;AAC1B,aAAQwS,GAAG,CAACxS,CAAD,CAAH,GACPwS,GAAG,CAACxS,CAAC,GAAG,CAAL,CAAH,IAAc,CADP,GAEPwS,GAAG,CAACxS,CAAC,GAAG,CAAL,CAAH,IAAc,EAFP,GAGPwS,GAAG,CAACxS,CAAC,GAAG,CAAL,CAAH,IAAc,EAHf;AAID,KAhDmD,CAkDpD;AACA;;;AACA,aAASoU,KAAT,CAAgB/T,CAAhB,EAAmBmD,CAAnB,EAAsBtD,CAAtB,EAAyBoD,CAAzB,EAA4B+Q,EAA5B,EAAgCC,EAAhC,EAAoC;AAClC,UAAIC,EAAE,GAAGzQ,CAAC,CAACuQ,EAAD,CAAV;AACA,UAAIG,EAAE,GAAG1Q,CAAC,CAACuQ,EAAE,GAAG,CAAN,CAAV;AACA,UAAII,EAAE,GAAG3Q,CAAC,CAACwQ,EAAD,CAAV;AACA,UAAII,EAAE,GAAG5Q,CAAC,CAACwQ,EAAE,GAAG,CAAN,CAAV;AAEAT,MAAAA,OAAO,CAAC3O,CAAD,EAAI7E,CAAJ,EAAOmD,CAAP,CAAP,CANkC,CAMjB;;AACjBwQ,MAAAA,OAAO,CAAC9O,CAAD,EAAI7E,CAAJ,EAAOkU,EAAP,EAAWC,EAAX,CAAP,CAPkC,CAOZ;AAEtB;;AACA,UAAIG,IAAI,GAAGzP,CAAC,CAAC5B,CAAD,CAAD,GAAO4B,CAAC,CAAC7E,CAAD,CAAnB;AACA,UAAIuU,IAAI,GAAG1P,CAAC,CAAC5B,CAAC,GAAG,CAAL,CAAD,GAAW4B,CAAC,CAAC7E,CAAC,GAAG,CAAL,CAAvB;AACA6E,MAAAA,CAAC,CAAC5B,CAAD,CAAD,GAAOsR,IAAP;AACA1P,MAAAA,CAAC,CAAC5B,CAAC,GAAG,CAAL,CAAD,GAAWqR,IAAX;AAEAd,MAAAA,OAAO,CAAC3O,CAAD,EAAIhF,CAAJ,EAAOoD,CAAP,CAAP,CAfkC,CAiBlC;;AACAqR,MAAAA,IAAI,GAAGzP,CAAC,CAAC1B,CAAD,CAAD,GAAO0B,CAAC,CAAChF,CAAD,CAAf;AACA0U,MAAAA,IAAI,GAAG1P,CAAC,CAAC1B,CAAC,GAAG,CAAL,CAAD,GAAW0B,CAAC,CAAChF,CAAC,GAAG,CAAL,CAAnB;AACAgF,MAAAA,CAAC,CAAC1B,CAAD,CAAD,GAAQmR,IAAI,KAAK,EAAV,GAAiBC,IAAI,IAAI,CAAhC;AACA1P,MAAAA,CAAC,CAAC1B,CAAC,GAAG,CAAL,CAAD,GAAYoR,IAAI,KAAK,EAAV,GAAiBD,IAAI,IAAI,CAApC;AAEAd,MAAAA,OAAO,CAAC3O,CAAD,EAAI7E,CAAJ,EAAOmD,CAAP,CAAP;AACAwQ,MAAAA,OAAO,CAAC9O,CAAD,EAAI7E,CAAJ,EAAOoU,EAAP,EAAWC,EAAX,CAAP,CAxBkC,CA0BlC;;AACAC,MAAAA,IAAI,GAAGzP,CAAC,CAAC5B,CAAD,CAAD,GAAO4B,CAAC,CAAC7E,CAAD,CAAf;AACAuU,MAAAA,IAAI,GAAG1P,CAAC,CAAC5B,CAAC,GAAG,CAAL,CAAD,GAAW4B,CAAC,CAAC7E,CAAC,GAAG,CAAL,CAAnB;AACA6E,MAAAA,CAAC,CAAC5B,CAAD,CAAD,GAAQqR,IAAI,KAAK,EAAV,GAAiBC,IAAI,IAAI,EAAhC;AACA1P,MAAAA,CAAC,CAAC5B,CAAC,GAAG,CAAL,CAAD,GAAYsR,IAAI,KAAK,EAAV,GAAiBD,IAAI,IAAI,EAApC;AAEAd,MAAAA,OAAO,CAAC3O,CAAD,EAAIhF,CAAJ,EAAOoD,CAAP,CAAP,CAhCkC,CAkClC;;AACAqR,MAAAA,IAAI,GAAGzP,CAAC,CAAC1B,CAAD,CAAD,GAAO0B,CAAC,CAAChF,CAAD,CAAf;AACA0U,MAAAA,IAAI,GAAG1P,CAAC,CAAC1B,CAAC,GAAG,CAAL,CAAD,GAAW0B,CAAC,CAAChF,CAAC,GAAG,CAAL,CAAnB;AACAgF,MAAAA,CAAC,CAAC1B,CAAD,CAAD,GAAQoR,IAAI,KAAK,EAAV,GAAiBD,IAAI,IAAI,CAAhC;AACAzP,MAAAA,CAAC,CAAC1B,CAAC,GAAG,CAAL,CAAD,GAAYmR,IAAI,KAAK,EAAV,GAAiBC,IAAI,IAAI,CAApC;AACD,KA3FmD,CA6FpD;;;AACA,QAAIC,YAAY,GAAG,IAAIC,WAAJ,CAAgB,CACjC,UADiC,EACrB,UADqB,EACT,UADS,EACG,UADH,EAEjC,UAFiC,EAErB,UAFqB,EAET,UAFS,EAEG,UAFH,EAGjC,UAHiC,EAGrB,UAHqB,EAGT,UAHS,EAGG,UAHH,EAIjC,UAJiC,EAIrB,UAJqB,EAIT,UAJS,EAIG,UAJH,CAAhB,CAAnB;AAOA,QAAIC,MAAM,GAAG,CACX,CADW,EACR,CADQ,EACL,CADK,EACF,CADE,EACC,CADD,EACI,CADJ,EACO,CADP,EACU,CADV,EACa,CADb,EACgB,CADhB,EACmB,EADnB,EACuB,EADvB,EAC2B,EAD3B,EAC+B,EAD/B,EACmC,EADnC,EACuC,EADvC,EAEX,EAFW,EAEP,EAFO,EAEH,CAFG,EAEA,CAFA,EAEG,CAFH,EAEM,EAFN,EAEU,EAFV,EAEc,CAFd,EAEiB,CAFjB,EAEoB,EAFpB,EAEwB,CAFxB,EAE2B,CAF3B,EAE8B,EAF9B,EAEkC,CAFlC,EAEqC,CAFrC,EAEwC,CAFxC,EAGX,EAHW,EAGP,CAHO,EAGJ,EAHI,EAGA,CAHA,EAGG,CAHH,EAGM,CAHN,EAGS,EAHT,EAGa,EAHb,EAGiB,EAHjB,EAGqB,EAHrB,EAGyB,CAHzB,EAG4B,CAH5B,EAG+B,CAH/B,EAGkC,CAHlC,EAGqC,CAHrC,EAGwC,CAHxC,EAIX,CAJW,EAIR,CAJQ,EAIL,CAJK,EAIF,CAJE,EAIC,EAJD,EAIK,EAJL,EAIS,EAJT,EAIa,EAJb,EAIiB,CAJjB,EAIoB,CAJpB,EAIuB,CAJvB,EAI0B,EAJ1B,EAI8B,CAJ9B,EAIiC,CAJjC,EAIoC,EAJpC,EAIwC,CAJxC,EAKX,CALW,EAKR,CALQ,EAKL,CALK,EAKF,CALE,EAKC,CALD,EAKI,CALJ,EAKO,EALP,EAKW,EALX,EAKe,EALf,EAKmB,CALnB,EAKsB,EALtB,EAK0B,EAL1B,EAK8B,CAL9B,EAKiC,CALjC,EAKoC,CALpC,EAKuC,EALvC,EAMX,CANW,EAMR,EANQ,EAMJ,CANI,EAMD,EANC,EAMG,CANH,EAMM,EANN,EAMU,CANV,EAMa,CANb,EAMgB,CANhB,EAMmB,EANnB,EAMuB,CANvB,EAM0B,CAN1B,EAM6B,EAN7B,EAMiC,EANjC,EAMqC,CANrC,EAMwC,CANxC,EAOX,EAPW,EAOP,CAPO,EAOJ,CAPI,EAOD,EAPC,EAOG,EAPH,EAOO,EAPP,EAOW,CAPX,EAOc,EAPd,EAOkB,CAPlB,EAOqB,CAPrB,EAOwB,CAPxB,EAO2B,CAP3B,EAO8B,CAP9B,EAOiC,CAPjC,EAOoC,CAPpC,EAOuC,EAPvC,EAQX,EARW,EAQP,EARO,EAQH,CARG,EAQA,EARA,EAQI,EARJ,EAQQ,CARR,EAQW,CARX,EAQc,CARd,EAQiB,CARjB,EAQoB,CARpB,EAQuB,EARvB,EAQ2B,CAR3B,EAQ8B,CAR9B,EAQiC,CARjC,EAQoC,CARpC,EAQuC,EARvC,EASX,CATW,EASR,EATQ,EASJ,EATI,EASA,CATA,EASG,EATH,EASO,CATP,EASU,CATV,EASa,CATb,EASgB,EAThB,EASoB,CATpB,EASuB,EATvB,EAS2B,CAT3B,EAS8B,CAT9B,EASiC,CATjC,EASoC,EATpC,EASwC,CATxC,EAUX,EAVW,EAUP,CAVO,EAUJ,CAVI,EAUD,CAVC,EAUE,CAVF,EAUK,CAVL,EAUQ,CAVR,EAUW,CAVX,EAUc,EAVd,EAUkB,EAVlB,EAUsB,CAVtB,EAUyB,EAVzB,EAU6B,CAV7B,EAUgC,EAVhC,EAUoC,EAVpC,EAUwC,CAVxC,EAWX,CAXW,EAWR,CAXQ,EAWL,CAXK,EAWF,CAXE,EAWC,CAXD,EAWI,CAXJ,EAWO,CAXP,EAWU,CAXV,EAWa,CAXb,EAWgB,CAXhB,EAWmB,EAXnB,EAWuB,EAXvB,EAW2B,EAX3B,EAW+B,EAX/B,EAWmC,EAXnC,EAWuC,EAXvC,EAYX,EAZW,EAYP,EAZO,EAYH,CAZG,EAYA,CAZA,EAYG,CAZH,EAYM,EAZN,EAYU,EAZV,EAYc,CAZd,EAYiB,CAZjB,EAYoB,EAZpB,EAYwB,CAZxB,EAY2B,CAZ3B,EAY8B,EAZ9B,EAYkC,CAZlC,EAYqC,CAZrC,EAYwC,CAZxC,CAAb,CArGoD,CAoHpD;AACA;AACA;;AACA,QAAIC,OAAO,GAAG,IAAI9T,UAAJ,CAAe6T,MAAM,CAACE,GAAP,CAAW,UAAU7T,CAAV,EAAa;AAAE,aAAOA,CAAC,GAAG,CAAX;AAAc,KAAxC,CAAf,CAAd,CAvHoD,CAyHpD;AACA;;AACA,QAAI8D,CAAC,GAAG,IAAI4P,WAAJ,CAAgB,EAAhB,CAAR;AACA,QAAIhR,CAAC,GAAG,IAAIgR,WAAJ,CAAgB,EAAhB,CAAR;;AACA,aAASI,eAAT,CAA0BC,GAA1B,EAA+BC,IAA/B,EAAqC;AACnC,UAAIpV,CAAC,GAAG,CAAR,CADmC,CAGnC;;AACA,WAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,EAAhB,EAAoBA,CAAC,EAArB,EAAyB;AACvBkF,QAAAA,CAAC,CAAClF,CAAD,CAAD,GAAOmV,GAAG,CAACxR,CAAJ,CAAM3D,CAAN,CAAP;AACAkF,QAAAA,CAAC,CAAClF,CAAC,GAAG,EAAL,CAAD,GAAY6U,YAAY,CAAC7U,CAAD,CAAxB;AACD,OAPkC,CASnC;;;AACAkF,MAAAA,CAAC,CAAC,EAAD,CAAD,GAAQA,CAAC,CAAC,EAAD,CAAD,GAAQiQ,GAAG,CAACrV,CAApB;AACAoF,MAAAA,CAAC,CAAC,EAAD,CAAD,GAAQA,CAAC,CAAC,EAAD,CAAD,GAASiQ,GAAG,CAACrV,CAAJ,GAAQ,WAAzB,CAXmC,CAYnC;AAEA;;AACA,UAAIsV,IAAJ,EAAU;AACRlQ,QAAAA,CAAC,CAAC,EAAD,CAAD,GAAQ,CAACA,CAAC,CAAC,EAAD,CAAV;AACAA,QAAAA,CAAC,CAAC,EAAD,CAAD,GAAQ,CAACA,CAAC,CAAC,EAAD,CAAV;AACD,OAlBkC,CAoBnC;;;AACA,WAAKlF,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,EAAhB,EAAoBA,CAAC,EAArB,EAAyB;AACvB8D,QAAAA,CAAC,CAAC9D,CAAD,CAAD,GAAOmU,SAAS,CAACgB,GAAG,CAAC3R,CAAL,EAAQ,IAAIxD,CAAZ,CAAhB;AACD,OAvBkC,CAyBnC;;;AACA,WAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,EAAhB,EAAoBA,CAAC,EAArB,EAAyB;AACvBoU,QAAAA,KAAK,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,EAAW,EAAX,EAAeY,OAAO,CAAChV,CAAC,GAAG,EAAJ,GAAS,CAAV,CAAtB,EAAoCgV,OAAO,CAAChV,CAAC,GAAG,EAAJ,GAAS,CAAV,CAA3C,CAAL;AACAoU,QAAAA,KAAK,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgBY,OAAO,CAAChV,CAAC,GAAG,EAAJ,GAAS,CAAV,CAAvB,EAAqCgV,OAAO,CAAChV,CAAC,GAAG,EAAJ,GAAS,CAAV,CAA5C,CAAL;AACAoU,QAAAA,KAAK,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgBY,OAAO,CAAChV,CAAC,GAAG,EAAJ,GAAS,CAAV,CAAvB,EAAqCgV,OAAO,CAAChV,CAAC,GAAG,EAAJ,GAAS,CAAV,CAA5C,CAAL;AACAoU,QAAAA,KAAK,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgBY,OAAO,CAAChV,CAAC,GAAG,EAAJ,GAAS,CAAV,CAAvB,EAAqCgV,OAAO,CAAChV,CAAC,GAAG,EAAJ,GAAS,CAAV,CAA5C,CAAL;AACAoU,QAAAA,KAAK,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgBY,OAAO,CAAChV,CAAC,GAAG,EAAJ,GAAS,CAAV,CAAvB,EAAqCgV,OAAO,CAAChV,CAAC,GAAG,EAAJ,GAAS,CAAV,CAA5C,CAAL;AACAoU,QAAAA,KAAK,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgBY,OAAO,CAAChV,CAAC,GAAG,EAAJ,GAAS,EAAV,CAAvB,EAAsCgV,OAAO,CAAChV,CAAC,GAAG,EAAJ,GAAS,EAAV,CAA7C,CAAL;AACAoU,QAAAA,KAAK,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgBY,OAAO,CAAChV,CAAC,GAAG,EAAJ,GAAS,EAAV,CAAvB,EAAsCgV,OAAO,CAAChV,CAAC,GAAG,EAAJ,GAAS,EAAV,CAA7C,CAAL;AACAoU,QAAAA,KAAK,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,EAAW,EAAX,EAAeY,OAAO,CAAChV,CAAC,GAAG,EAAJ,GAAS,EAAV,CAAtB,EAAqCgV,OAAO,CAAChV,CAAC,GAAG,EAAJ,GAAS,EAAV,CAA5C,CAAL;AACD;;AAED,WAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,EAAhB,EAAoBA,CAAC,EAArB,EAAyB;AACvBmV,QAAAA,GAAG,CAACxR,CAAJ,CAAM3D,CAAN,IAAWmV,GAAG,CAACxR,CAAJ,CAAM3D,CAAN,IAAWkF,CAAC,CAAClF,CAAD,CAAZ,GAAkBkF,CAAC,CAAClF,CAAC,GAAG,EAAL,CAA9B;AACD;AACF,KArKmD,CAuKpD;;;AACA,QAAIqV,eAAe,GAAG,IAAInU,UAAJ,CAAe,CACnC,CADmC,EAChC,CADgC,EAC7B,CAD6B,EAC1B,CAD0B,EAClB;AACjB,KAFmC,EAEhC,CAFgC,EAE7B,CAF6B,EAE1B,CAF0B,EAElB;AACjB,KAHmC,EAGhC,CAHgC,EAG7B,CAH6B,EAG1B,CAH0B,EAGlB;AACjB,KAJmC,EAIhC,CAJgC,EAI7B,CAJ6B,EAI1B,CAJ0B,EAIlB;AACjB,KALmC,EAKhC,CALgC,EAK7B,CAL6B,EAK1B,CAL0B,EAKlB;AACjB,KANmC,EAMhC,CANgC,EAM7B,CAN6B,EAM1B,CAN0B,EAMlB;AACjB,KAPmC,EAOhC,CAPgC,EAO7B,CAP6B,EAO1B,CAP0B,EAOlB;AACjB,KARmC,EAQhC,CARgC,EAQ7B,CAR6B,EAQ1B,CAR0B,EAQlB;AACjB,KATmC,EAShC,CATgC,EAS7B,CAT6B,EAS1B,CAT0B,EASlB;AACjB,KAVmC,EAUhC,CAVgC,EAU7B,CAV6B,EAU1B,CAV0B,EAUlB;AACjB,KAXmC,EAWhC,CAXgC,EAW7B,CAX6B,EAW1B,CAX0B,EAWlB;AACjB,KAZmC,EAYhC,CAZgC,EAY7B,CAZ6B,EAY1B,CAZ0B,EAYlB;AACjB,KAbmC,EAahC,CAbgC,EAa7B,CAb6B,EAa1B,CAb0B,EAalB;AACjB,KAdmC,EAchC,CAdgC,EAc7B,CAd6B,EAc1B,CAd0B,EAclB;AACjB,KAfmC,EAehC,CAfgC,EAe7B,CAf6B,EAe1B,CAf0B,EAelB;AACjB,KAhBmC,EAgBhC,CAhBgC,EAgB7B,CAhB6B,EAgB1B,CAhB0B,CAgBlB;AAhBkB,KAAf,CAAtB,CAxKoD,CA2LpD;AACA;AACA;;AACA,aAASoU,OAAT,CAAkBC,MAAlB,EAA0BpO,GAA1B,EAA+BqO,IAA/B,EAAqCC,QAArC,EAA+C;AAC7C;AACAJ,MAAAA,eAAe,CAAClU,IAAhB,CAAqB,CAArB,EAF6C,CAG7C;;AAEA,WAAKqC,CAAL,GAAS,IAAItC,UAAJ,CAAe,GAAf,CAAT;AACA,WAAKyC,CAAL,GAAS,IAAImR,WAAJ,CAAgB,EAAhB,CAAT;AACA,WAAKhV,CAAL,GAAS,CAAT,CAP6C,CAOlC;;AACX,WAAKI,CAAL,GAAS,CAAT,CAR6C,CAQlC;;AACX,WAAKqV,MAAL,GAAcA,MAAd,CAT6C,CASxB;;AAErBF,MAAAA,eAAe,CAAC,CAAD,CAAf,GAAqBE,MAArB;AACA,UAAIpO,GAAJ,EAASkO,eAAe,CAAC,CAAD,CAAf,GAAqBlO,GAAG,CAACxG,MAAzB;AACT0U,MAAAA,eAAe,CAAC,CAAD,CAAf,GAAqB,CAArB,CAb6C,CAatB;;AACvBA,MAAAA,eAAe,CAAC,CAAD,CAAf,GAAqB,CAArB,CAd6C,CActB;;AAEvB,UAAIG,IAAJ,EAAUH,eAAe,CAACK,GAAhB,CAAoBF,IAApB,EAA0B,EAA1B;AACV,UAAIC,QAAJ,EAAcJ,eAAe,CAACK,GAAhB,CAAoBD,QAApB,EAA8B,EAA9B,EAjB+B,CAmB7C;;AACA,WAAK,IAAIzV,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3B,aAAK2D,CAAL,CAAO3D,CAAP,IAAY6U,YAAY,CAAC7U,CAAD,CAAZ,GAAkBmU,SAAS,CAACkB,eAAD,EAAkBrV,CAAC,GAAG,CAAtB,CAAvC;AACD,OAtB4C,CAwB7C;;;AACA,UAAImH,GAAJ,EAAS;AACPwO,QAAAA,aAAa,CAAC,IAAD,EAAOxO,GAAP,CAAb,CADO,CAEP;;AACA,aAAKjH,CAAL,GAAS,GAAT;AACD;AACF;;AAEDoV,IAAAA,OAAO,CAACnJ,SAAR,CAAkBxH,MAAlB,GAA2B,UAAUiR,KAAV,EAAiB;AAC1CD,MAAAA,aAAa,CAAC,IAAD,EAAOC,KAAP,CAAb;AACA,aAAO,IAAP;AACD,KAHD;;AAKAN,IAAAA,OAAO,CAACnJ,SAAR,CAAkByH,MAAlB,GAA2B,UAAUiC,GAAV,EAAe;AACxC,UAAIpO,GAAG,GAAI,CAACoO,GAAD,IAAQA,GAAG,KAAK,QAAhB,IAA4BA,GAAG,KAAK,KAArC,GAA8C,IAAI3U,UAAJ,CAAe,KAAKqU,MAApB,CAA9C,GAA4EM,GAAtF;AACAC,MAAAA,YAAY,CAAC,IAAD,EAAOrO,GAAP,CAAZ;AACA,UAAIoO,GAAG,KAAK,KAAZ,EAAmB,OAAOE,QAAQ,CAACtO,GAAD,CAAf;AACnB,aAAOA,GAAP;AACD,KALD;;AAOA6N,IAAAA,OAAO,CAACnJ,SAAR,CAAkB6J,KAAlB,GAA0BV,OAAO,CAACnJ,SAAR,CAAkByH,MAA5C,CA1OoD,CA4OpD;AACA;;AACA,aAAS+B,aAAT,CAAwBR,GAAxB,EAA6BS,KAA7B,EAAoC;AAClC,WAAK,IAAI5V,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG4V,KAAK,CAACjV,MAA1B,EAAkCX,CAAC,EAAnC,EAAuC;AACrC,YAAImV,GAAG,CAACjV,CAAJ,KAAU,GAAd,EAAmB;AAAE;AACnBiV,UAAAA,GAAG,CAACrV,CAAJ,IAASqV,GAAG,CAACjV,CAAb,CADiB,CACF;;AACfgV,UAAAA,eAAe,CAACC,GAAD,EAAM,KAAN,CAAf,CAFiB,CAEW;;AAC5BA,UAAAA,GAAG,CAACjV,CAAJ,GAAQ,CAAR,CAHiB,CAGP;AACX;;AACDiV,QAAAA,GAAG,CAAC3R,CAAJ,CAAM2R,GAAG,CAACjV,CAAJ,EAAN,IAAiB0V,KAAK,CAAC5V,CAAD,CAAtB;AACD;AACF,KAvPmD,CAyPpD;AACA;;;AACA,aAAS8V,YAAT,CAAuBX,GAAvB,EAA4BU,GAA5B,EAAiC;AAC/BV,MAAAA,GAAG,CAACrV,CAAJ,IAASqV,GAAG,CAACjV,CAAb,CAD+B,CAChB;;AAEf,aAAOiV,GAAG,CAACjV,CAAJ,GAAQ,GAAf,EAAoB;AAAE;AACpBiV,QAAAA,GAAG,CAAC3R,CAAJ,CAAM2R,GAAG,CAACjV,CAAJ,EAAN,IAAiB,CAAjB;AACD;;AACDgV,MAAAA,eAAe,CAACC,GAAD,EAAM,IAAN,CAAf,CAN+B,CAMJ;;AAE3B,WAAK,IAAInV,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGmV,GAAG,CAACI,MAAxB,EAAgCvV,CAAC,EAAjC,EAAqC;AACnC6V,QAAAA,GAAG,CAAC7V,CAAD,CAAH,GAASmV,GAAG,CAACxR,CAAJ,CAAM3D,CAAC,IAAI,CAAX,KAAkB,KAAKA,CAAC,GAAG,CAAT,CAA3B;AACD;;AACD,aAAO6V,GAAP;AACD;;AAED,aAASE,QAAT,CAAmBtO,GAAnB,EAAwB;AACtB,UAAIjF,GAAG,GAAG,EAAV;;AACA,WAAK,IAAIxC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGyH,GAAG,CAAC9G,MAAxB,EAAgCX,CAAC,EAAjC,EAAqCwC,GAAG,IAAIoG,KAAK,CAACnB,GAAG,CAACzH,CAAD,CAAJ,CAAZ;;AACrC,aAAOwC,GAAP;AACD;;AAED,aAASoG,KAAT,CAAgB/I,CAAhB,EAAmB;AACjB,UAAIA,CAAC,GAAG,EAAR,EAAY,OAAO,MAAMA,CAAC,CAACuM,QAAF,CAAW,EAAX,CAAb;AACZ,aAAOvM,CAAC,CAACuM,QAAF,CAAW,EAAX,CAAP;AACD;;AAEDxL,IAAAA,MAAM,CAACH,OAAP,GAAiB6U,OAAjB;AACC,GArRkB,EAqRjB,EArRiB,CAjlEub;AAs2Epc,MAAG,CAAC,UAASnV,OAAT,EAAiBS,MAAjB,EAAwBH,OAAxB,EAAgC;AAC1C,QAAIyR,QAAQ,GAAG/R,OAAO,CAAC,cAAD,CAAP,CAAwB,UAAxB,CAAf;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEE,QAAI8V,QAAQ,GAAI,YAAY;AACxB,UAAI5T,GAAG,GAAG,EAAV;AAEA,UAAI6T,YAAY,GAAG,4DAAnB;AACA,UAAIC,QAAQ,GAAG,EAAf;;AACA,WAAK,IAAInW,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGkW,YAAY,CAACvV,MAAjC,EAAyCX,CAAC,EAA1C,EAA8C;AAC1CmW,QAAAA,QAAQ,CAAC9R,IAAT,CAAc6R,YAAY,CAAC3U,UAAb,CAAwBvB,CAAxB,CAAd;AACH;;AACD,UAAIoW,mBAAmB,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,EAAtB,EAA0B,EAA1B,CAA1B;AAEA,UAAIC,aAAa,GAAGF,QAAQ,CAACxV,MAA7B;AACA,UAAI2V,eAAe,GAAG,CAAtB;AACA,UAAIC,uBAAuB,GAAG,EAA9B;AAEA,UAAIC,UAAU,GAAG,IAAItE,QAAJ,CAAa,CAAb,EAAgBpB,GAAhB,CAAoB,EAApB,CAAjB;;AAEA,eAAS2F,QAAT,CAAkBC,GAAlB,EAAuB;AACnB,YAAIA,GAAG,CAAC/V,MAAJ,GAAa,CAAb,KAAmB,CAAvB,EAA0B,MAAM,gCAAN;AAC1B,YAAIgW,GAAG,GAAG,IAAIzV,UAAJ,CAAewV,GAAG,CAAC/V,MAAJ,GAAa,CAA5B,CAAV;;AACA,aAAK,IAAIX,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG0W,GAAG,CAAC/V,MAAJ,GAAa,CAAjC,EAAoC,EAAEX,CAAtC,EAAyC;AACrC2W,UAAAA,GAAG,CAAC3W,CAAD,CAAH,GAASkE,QAAQ,CAACwS,GAAG,CAACpS,KAAJ,CAAUtE,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG,CAAJ,GAAQ,CAAzB,CAAD,EAA8B,EAA9B,CAAjB;AACH;;AACD,eAAO2W,GAAP;AACH;;AAED,eAASC,QAAT,CAAkBC,GAAlB,EAAuB;AACnB,YAAIhB,GAAG,GAAG,EAAV;;AACA,aAAK,IAAI7V,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG6W,GAAG,CAAClW,MAAxB,EAAgC,EAAEX,CAAlC,EAAqC;AACjC6V,UAAAA,GAAG,CAACxR,IAAJ,CAAS,CAAC,MAAMwS,GAAG,CAAC7W,CAAD,CAAH,CAAOoM,QAAP,CAAgB,EAAhB,CAAP,EAA4B9H,KAA5B,CAAkC,CAAC,CAAnC,CAAT;AACH;;AACD,eAAOuR,GAAG,CAAChJ,IAAJ,CAAS,EAAT,CAAP;AACH;;AAED,eAASiK,QAAT,CAAkBtU,GAAlB,EAAuB;AACnB,YAAImU,GAAG,GAAG,IAAIzV,UAAJ,CAAesB,GAAG,CAAC7B,MAAnB,CAAV;;AACA,aAAK,IAAIX,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGwC,GAAG,CAAC7B,MAAxB,EAAgCX,CAAC,EAAjC,EAAqC;AACjC2W,UAAAA,GAAG,CAAC3W,CAAD,CAAH,GAASwC,GAAG,CAACjB,UAAJ,CAAevB,CAAf,CAAT;AACH;;AACD,eAAO2W,GAAP;AACH;;AAED,eAASI,QAAT,CAAkBF,GAAlB,EAAuB;AACnB,YAAIhB,GAAG,GAAG,EAAV;;AACA,aAAK,IAAI7V,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG6W,GAAG,CAAClW,MAAxB,EAAgCX,CAAC,EAAjC,EAAqC;AACjC6V,UAAAA,GAAG,CAACxR,IAAJ,CAASmB,MAAM,CAACC,YAAP,CAAoBoR,GAAG,CAAC7W,CAAD,CAAvB,CAAT;AACH;;AACD,eAAO6V,GAAG,CAAChJ,IAAJ,CAAS,EAAT,CAAP;AACH;;AAED,eAASmK,cAAT,CAAwB1M,IAAxB,EAA8B;AAC1B,YAAIA,IAAI,CAAC3J,MAAL,GAAc,CAAd,IAAmB2J,IAAI,CAAC3J,MAAL,GAAc,CAArC,EAAwC;AACpC,gBAAM,sBAAN;AACH;;AACD,YAAIgW,GAAG,GAAGzE,QAAQ,CAAC9G,IAAnB;AACA,YAAI6L,OAAO,GAAG,IAAI/E,QAAJ,CAAa,CAAb,EAAgBpB,GAAhB,CAAoB,CAApB,CAAd;AACA,YAAI9Q,CAAC,GAAG,CAAR;;AACA,gBAAQ,IAAIsK,IAAI,CAAC3J,MAAjB;AACA,eAAK,CAAL;AACIgW,YAAAA,GAAG,GAAGA,GAAG,CAAClJ,GAAJ,CAAQnD,IAAI,CAACtK,CAAC,EAAF,CAAZ,CAAN;;AACJ,eAAK,CAAL;AACI2W,YAAAA,GAAG,GAAGA,GAAG,CAACnJ,QAAJ,CAAayJ,OAAb,EAAsBxJ,GAAtB,CAA0BnD,IAAI,CAACtK,CAAC,EAAF,CAA9B,CAAN;;AACJ,eAAK,CAAL;AACI2W,YAAAA,GAAG,GAAGA,GAAG,CAACnJ,QAAJ,CAAayJ,OAAb,EAAsBxJ,GAAtB,CAA0BnD,IAAI,CAACtK,CAAC,EAAF,CAA9B,CAAN;;AACJ,eAAK,CAAL;AACI2W,YAAAA,GAAG,GAAGA,GAAG,CAACnJ,QAAJ,CAAayJ,OAAb,EAAsBxJ,GAAtB,CAA0BnD,IAAI,CAACtK,CAAC,EAAF,CAA9B,CAAN;;AACJ,eAAK,CAAL;AACI2W,YAAAA,GAAG,GAAGA,GAAG,CAACnJ,QAAJ,CAAayJ,OAAb,EAAsBxJ,GAAtB,CAA0BnD,IAAI,CAACtK,CAAC,EAAF,CAA9B,CAAN;;AACJ,eAAK,CAAL;AACI2W,YAAAA,GAAG,GAAGA,GAAG,CAACnJ,QAAJ,CAAayJ,OAAb,EAAsBxJ,GAAtB,CAA0BnD,IAAI,CAACtK,CAAC,EAAF,CAA9B,CAAN;;AACJ,eAAK,CAAL;AACI2W,YAAAA,GAAG,GAAGA,GAAG,CAACnJ,QAAJ,CAAayJ,OAAb,EAAsBxJ,GAAtB,CAA0BnD,IAAI,CAACtK,CAAC,EAAF,CAA9B,CAAN;;AACJ,eAAK,CAAL;AACI2W,YAAAA,GAAG,GAAGA,GAAG,CAACnJ,QAAJ,CAAayJ,OAAb,EAAsBxJ,GAAtB,CAA0BnD,IAAI,CAACtK,CAAC,EAAF,CAA9B,CAAN;AACA;;AACJ;AACI,kBAAM,sBAAN;AAnBJ;;AAqBA,eAAO2W,GAAP;AACH;;AAED,eAASO,aAAT,CAAuBC,GAAvB,EAA4B/U,IAA5B,EAAkC;AAC9B,YAAIuU,GAAG,GAAG,IAAIzV,UAAJ,CAAekB,IAAf,CAAV;;AACA,YAAIA,IAAI,GAAG,CAAP,IAAYA,IAAI,GAAG,CAAvB,EAA0B;AACtB,gBAAM,sBAAN;AACH;;AACD,YAAI6U,OAAO,GAAG,IAAI/E,QAAJ,CAAa,CAAb,EAAgBpB,GAAhB,CAAoB,CAApB,CAAd;;AACA,aAAK,IAAI9Q,CAAC,GAAGoC,IAAI,GAAG,CAApB,EAAuBpC,CAAC,IAAI,CAA5B,EAA+BA,CAAC,EAAhC,EAAoC;AAChC2W,UAAAA,GAAG,CAAC3W,CAAD,CAAH,GAASmX,GAAG,CAAC5H,SAAJ,CAAc0H,OAAd,EAAuBxF,SAAvB,EAAT;AACA0F,UAAAA,GAAG,GAAGA,GAAG,CAAC7H,MAAJ,CAAW2H,OAAX,CAAN;AACH;;AACD,eAAON,GAAP;AACH;;AAEDtU,MAAAA,GAAG,CAAC+U,YAAJ,GAAmB,UAAU9M,IAAV,EAAgB7C,GAAhB,EAAqB4P,KAArB,EAA4B;AAC3C,YAAI/M,IAAI,CAAC3J,MAAL,GAAc,CAAd,IAAmB2J,IAAI,CAAC3J,MAAL,GAAc4V,uBAArC,EAA8D;AAC1D,gBAAM,2BAA2BjM,IAAI,CAAC3J,MAAtC;AACH;;AACD,YAAIwW,GAAG,GAAGH,cAAc,CAAC1M,IAAD,CAAxB;AACA,YAAItK,CAAC,GAAGoW,mBAAmB,CAAC9L,IAAI,CAAC3J,MAAN,CAAnB,GAAmC,CAA3C,CAL2C,CAM3C;;AACA,eAAOwW,GAAG,CAACzI,OAAJ,CAAY,CAAZ,MAAmB,CAA1B,EAA6B;AACzB,cAAI4I,GAAG,GAAGH,GAAG,CAACxK,MAAJ,CAAW0J,aAAX,CAAV,CADyB,CAEzB;;AACA,cAAI9G,SAAS,GAAG+H,GAAG,CAAC,CAAD,CAAnB,CAHyB,CAIzB;;AACAH,UAAAA,GAAG,GAAGG,GAAG,CAAC,CAAD,CAAT;AACA7P,UAAAA,GAAG,CAAC4P,KAAK,GAAGrX,CAAT,CAAH,GAAiBmW,QAAQ,CAAC5G,SAAS,CAACkC,SAAV,EAAD,CAAzB;AACAzR,UAAAA,CAAC;AACJ;;AACD,eAAOyH,GAAP;AACH,OAjBD;;AAmBApF,MAAAA,GAAG,CAACP,MAAJ,GAAa,UAAU4U,GAAV,EAAe;AACxB,YAAIpM,IAAI,GAAGmM,QAAQ,CAACC,GAAD,CAAnB;;AACA,YAAIpM,IAAI,CAAC3J,MAAL,KAAgB,CAApB,EAAuB;AACnB,iBAAO,EAAP;AACH;;AACD,YAAI4W,gBAAgB,GAAG5V,IAAI,CAAC6V,KAAL,CAAWlN,IAAI,CAAC3J,MAAL,GAAc2V,eAAzB,CAAvB;AACA,YAAImB,eAAe,GAAGnN,IAAI,CAAC3J,MAAL,GAAc2V,eAApC;AACA,YAAIoB,QAAQ,GAAGH,gBAAgB,GAAGhB,uBAAnB,GAA6CH,mBAAmB,CAACqB,eAAD,CAA/E;AAEA,YAAId,GAAG,GAAG,IAAIzV,UAAJ,CAAewW,QAAf,CAAV;AACA,YAAI1X,CAAJ;;AACA,aAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG0X,QAAhB,EAA0B,EAAE1X,CAA5B,EAA+B;AAC3B2W,UAAAA,GAAG,CAAC3W,CAAD,CAAH,GAASmW,QAAQ,CAAC,CAAD,CAAjB;AACH;;AACD,aAAKnW,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGuX,gBAAhB,EAAkCvX,CAAC,EAAnC,EAAuC;AACnC2W,UAAAA,GAAG,GAAGtU,GAAG,CAAC+U,YAAJ,CAAiB9M,IAAI,CAACqN,QAAL,CAAc3X,CAAC,GAAGsW,eAAlB,EAAmCtW,CAAC,GAAGsW,eAAJ,GAAsBA,eAAzD,CAAjB,EAA4FK,GAA5F,EAAiG3W,CAAC,GAAGuW,uBAArG,CAAN;AACH;;AACD,YAAIkB,eAAe,GAAG,CAAtB,EAAyB;AACrBd,UAAAA,GAAG,GAAGtU,GAAG,CAAC+U,YAAJ,CAAiB9M,IAAI,CAACqN,QAAL,CAAcJ,gBAAgB,GAAGjB,eAAjC,EAAkDiB,gBAAgB,GAAGjB,eAAnB,GAAqCmB,eAAvF,CAAjB,EAA0Hd,GAA1H,EAA+HY,gBAAgB,GAAGhB,uBAAlJ,CAAN;AACH;;AACD,eAAOQ,QAAQ,CAACJ,GAAD,CAAf;AACH,OArBD;;AAuBAtU,MAAAA,GAAG,CAACuV,YAAJ,GAAmB,UAAUtN,IAAV,EAAgB7C,GAAhB,EAAqB4P,KAArB,EAA4B;AAC3C,YAAI/M,IAAI,CAAC3J,MAAL,GAAc,CAAd,IAAmB2J,IAAI,CAAC3J,MAAL,GAAc4V,uBAArC,EAA8D;AAC1D,gBAAM,2BAA2BjM,IAAI,CAAC3J,MAAtC;AACH;;AAED,YAAI+W,QAAQ,GAAGtB,mBAAmB,CAACrQ,OAApB,CAA4BuE,IAAI,CAAC3J,MAAjC,CAAf;;AACA,YAAI+W,QAAQ,IAAI,CAAhB,EAAmB;AACf,gBAAM,oBAAN;AACH;;AACD,YAAIG,OAAO,GAAG,IAAI3F,QAAJ,CAAa,CAAb,CAAd;AACA,YAAI4F,KAAK,GAAG,IAAI5F,QAAJ,CAAa,CAAb,CAAZ;;AACA,aAAK,IAAIlS,CAAC,GAAGsK,IAAI,CAAC3J,MAAL,GAAc,CAA3B,EAA8BX,CAAC,IAAI,CAAnC,EAAsCA,CAAC,EAAvC,EAA2C;AACvC,cAAIyM,KAAK,GAAG0J,QAAQ,CAACpQ,OAAT,CAAiBuE,IAAI,CAACtK,CAAD,CAArB,CAAZ;;AACA,cAAIyM,KAAK,GAAG,CAAZ,EAAe;AACX,kBAAM,gBAAN;AACH;;AACD,cAAI2C,OAAO,GAAG0I,KAAK,CAACtK,QAAN,CAAef,KAAf,EAAsBgB,GAAtB,CAA0BoK,OAA1B,CAAd,CALuC,CAMvC;;AACA,cAAIzI,OAAO,CAACV,OAAR,CAAgB8H,UAAhB,MAAgC,CAApC,EAAuC;AACnC,kBAAM,UAAN;AACH;;AACDqB,UAAAA,OAAO,GAAGzI,OAAV;AACA0I,UAAAA,KAAK,GAAGA,KAAK,CAACtK,QAAN,CAAe6I,aAAf,CAAR;AACH;;AACD,YAAIqB,QAAQ,GAAGpB,eAAX,IAA+B,IAAIpE,QAAJ,CAAa,CAAb,EAAgBpB,GAAhB,CAAoB,IAAI4G,QAAxB,EAAkChJ,OAAlC,CAA0CmJ,OAA1C,KAAsD,CAAzF,EAA6F;AACzF,gBAAM,YAAN;AACH;;AACDpQ,QAAAA,GAAG,CAACiO,GAAJ,CAAQwB,aAAa,CAACW,OAAD,EAAUH,QAAV,CAArB,EAA0CL,KAA1C;AACA,eAAO5P,GAAP;AACH,OA7BD;;AA+BApF,MAAAA,GAAG,CAACY,MAAJ,GAAa,UAAU8U,GAAV,EAAe;AACxBA,QAAAA,GAAG,GAAGjB,QAAQ,CAACiB,GAAD,CAAd;;AACA,YAAIA,GAAG,CAACpX,MAAJ,KAAe,CAAnB,EAAsB;AAClB,iBAAO,EAAP;AACH;;AACD,YAAI4W,gBAAgB,GAAG5V,IAAI,CAAC6V,KAAL,CAAWO,GAAG,CAACpX,MAAJ,GAAa4V,uBAAxB,CAAvB;AACA,YAAIkB,eAAe,GAAGM,GAAG,CAACpX,MAAJ,GAAa4V,uBAAnC;AACA,YAAIyB,uBAAuB,GAAG5B,mBAAmB,CAACrQ,OAApB,CAA4B0R,eAA5B,CAA9B;;AACA,YAAIO,uBAAuB,GAAG,CAA9B,EAAiC;AAC7B,gBAAM,wBAAN;AACH;;AACD,YAAIC,SAAS,GAAGV,gBAAgB,GAAGjB,eAAnB,GAAqC0B,uBAArD;AACA,YAAI1N,IAAI,GAAG,IAAIpJ,UAAJ,CAAe+W,SAAf,CAAX;;AACA,aAAK,IAAIjY,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuX,gBAApB,EAAsCvX,CAAC,EAAvC,EAA2C;AACvCsK,UAAAA,IAAI,GAAGjI,GAAG,CAACuV,YAAJ,CAAiBG,GAAG,CAACJ,QAAJ,CAAa3X,CAAC,GAAGuW,uBAAjB,EAA0CvW,CAAC,GAAGuW,uBAAJ,GAA8BA,uBAAxE,CAAjB,EAAmHjM,IAAnH,EAAyHtK,CAAC,GAAGsW,eAA7H,CAAP;AACH;;AACD,YAAImB,eAAe,GAAG,CAAtB,EAAyB;AACrBnN,UAAAA,IAAI,GAAGjI,GAAG,CAACuV,YAAJ,CAAiBG,GAAG,CAACJ,QAAJ,CAAaJ,gBAAgB,GAAGhB,uBAAhC,EAAyDgB,gBAAgB,GAAGhB,uBAAnB,GAA6CkB,eAAtG,CAAjB,EAAyInN,IAAzI,EAA+IiN,gBAAgB,GAAGjB,eAAlK,CAAP;AACH;;AACD,eAAOM,QAAQ,CAACtM,IAAD,CAAf;AACH,OApBD;;AAsBA,aAAOjI,GAAP;AACH,KA7Lc,EAAf;;AA8LAzB,IAAAA,MAAM,CAACH,OAAP,GAAiBwV,QAAjB;AACC,GA5NQ,EA4NP;AAAC,oBAAe;AAAhB,GA5NO,CAt2Eic;AAkkFpb,MAAG,CAAC,UAAS9V,OAAT,EAAiBS,MAAjB,EAAwBH,OAAxB,EAAgC;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,QAAIyX,MAAM,GAAG/X,OAAO,CAAC,UAAD,CAApB;;AAEA,aAASgY,WAAT,CAAsB7N,IAAtB,EAA4B8N,QAA5B,EAAsCC,MAAtC,EAA8CC,GAA9C,EAAmD;AACjD,UAAIC,GAAG,GAAG,CAAV;AACA,UAAIC,IAAI,GAAG,CAAX;AACA,UAAIpO,GAAG,GAAG,EAAV;AACA,UAAIqO,IAAI,GAAG,CAAC,KAAKJ,MAAN,IAAgB,CAA3B;;AACA,WAAK,IAAI7X,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG8J,IAAI,CAAC3J,MAAzB,EAAiC,EAAEH,CAAnC,EAAsC;AACpC,YAAIkE,KAAK,GAAG4F,IAAI,CAAC9J,CAAD,CAAhB;;AACA,YAAIkE,KAAK,GAAG,CAAR,IAAcA,KAAK,IAAI0T,QAAV,KAAwB,CAAzC,EAA4C;AAC1C,iBAAO,IAAP;AACD;;AACDG,QAAAA,GAAG,GAAIA,GAAG,IAAIH,QAAR,GAAoB1T,KAA1B;AACA8T,QAAAA,IAAI,IAAIJ,QAAR;;AACA,eAAOI,IAAI,IAAIH,MAAf,EAAuB;AACrBG,UAAAA,IAAI,IAAIH,MAAR;AACAjO,UAAAA,GAAG,CAAC/F,IAAJ,CAAUkU,GAAG,IAAIC,IAAR,GAAgBC,IAAzB;AACD;AACF;;AACD,UAAIH,GAAJ,EAAS;AACP,YAAIE,IAAI,GAAG,CAAX,EAAc;AACZpO,UAAAA,GAAG,CAAC/F,IAAJ,CAAUkU,GAAG,IAAKF,MAAM,GAAGG,IAAlB,GAA2BC,IAApC;AACD;AACF,OAJD,MAIO,IAAID,IAAI,IAAIJ,QAAR,IAAsBG,GAAG,IAAKF,MAAM,GAAGG,IAAlB,GAA2BC,IAApD,EAA2D;AAChE,eAAO,IAAP;AACD;;AACD,aAAOrO,GAAP;AACD;;AAED,aAASnH,MAAT,CAAiBkH,GAAjB,EAAsBuO,IAAtB,EAA4B;AAC1B,UAAIC,GAAG,GAAGT,MAAM,CAACjV,MAAP,CAAcyV,IAAd,CAAV;;AACA,UAAIC,GAAG,KAAK,IAAR,IAAgBA,GAAG,CAACxO,GAAJ,KAAYA,GAA5B,IAAmCwO,GAAG,CAACrO,IAAJ,CAAS3J,MAAT,GAAkB,CAArD,IAA0DgY,GAAG,CAACrO,IAAJ,CAAS,CAAT,IAAc,EAA5E,EAAgF;AAC9E,eAAO,IAAP;AACD;;AACD,UAAIqM,GAAG,GAAGwB,WAAW,CAACQ,GAAG,CAACrO,IAAJ,CAAShG,KAAT,CAAe,CAAf,CAAD,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,KAA1B,CAArB;;AACA,UAAIqS,GAAG,KAAK,IAAR,IAAgBA,GAAG,CAAChW,MAAJ,GAAa,CAA7B,IAAkCgW,GAAG,CAAChW,MAAJ,GAAa,EAAnD,EAAuD;AACrD,eAAO,IAAP;AACD;;AACD,UAAIgY,GAAG,CAACrO,IAAJ,CAAS,CAAT,MAAgB,CAAhB,IAAqBqM,GAAG,CAAChW,MAAJ,KAAe,EAApC,IAA0CgW,GAAG,CAAChW,MAAJ,KAAe,EAA7D,EAAiE;AAC/D,eAAO,IAAP;AACD;;AACD,aAAO;AAACiY,QAAAA,OAAO,EAAED,GAAG,CAACrO,IAAJ,CAAS,CAAT,CAAV;AAAuBuO,QAAAA,OAAO,EAAElC;AAAhC,OAAP;AACD;;AAED,aAAS7U,MAAT,CAAiBqI,GAAjB,EAAsByO,OAAtB,EAA+BC,OAA/B,EAAwC;AACtC,UAAIzO,GAAG,GAAG8N,MAAM,CAACpW,MAAP,CAAcqI,GAAd,EAAmB,CAACyO,OAAD,EAAUvP,MAAV,CAAiB8O,WAAW,CAACU,OAAD,EAAU,CAAV,EAAa,CAAb,EAAgB,IAAhB,CAA5B,CAAnB,CAAV;;AACA,UAAI5V,MAAM,CAACkH,GAAD,EAAMC,GAAN,CAAN,KAAqB,IAAzB,EAA+B;AAC7B,eAAO,IAAP;AACD;;AACD,aAAOA,GAAP;AACD;;AAED,aAASb,cAAT,CAAwBtB,OAAxB,EAAiCkC,GAAjC,EAAsC;AAClC,UAAIA,GAAG,GAAGA,GAAG,IAAI,IAAjB;AACA,UAAIC,GAAG,GAAGnH,MAAM,CAACkH,GAAD,EAAMlC,OAAN,CAAhB;;AAEA,UAAImC,GAAG,KAAK,IAAZ,EAAkB;AACdD,QAAAA,GAAG,GAAG,IAAN;AACAC,QAAAA,GAAG,GAAGnH,MAAM,CAACkH,GAAD,EAAMlC,OAAN,CAAZ;AACH;;AAED,UAAImC,GAAG,KAAK,IAAZ,EAAkB;AACd,eAAO,KAAP;AACH;;AAED,UAAI0O,QAAQ,GAAGhX,MAAM,CAACqI,GAAD,EAAMC,GAAG,CAACwO,OAAV,EAAmBxO,GAAG,CAACyO,OAAvB,CAArB;AACA,aAAOC,QAAQ,KAAK7Q,OAAO,CAAC4C,WAAR,EAApB;AACH;;AAEDjK,IAAAA,MAAM,CAACH,OAAP,GAAiB;AACbqB,MAAAA,MAAM,EAAEA,MADK;AAEbmB,MAAAA,MAAM,EAAEA,MAFK;AAGbsG,MAAAA,cAAc,EAAEA;AAHH,KAAjB;AAMC,GAhGwB,EAgGvB;AAAC,gBAAW;AAAZ,GAhGuB,CAlkFib;AAkqFxb,MAAG,CAAC,UAASpJ,OAAT,EAAiBS,MAAjB,EAAwBH,OAAxB,EAAgC;AACtD,KAAC,UAAUsY,OAAV,EAAkBC,MAAlB,EAAyB;AAC1B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AACE;AACA;;AAEA,UAAIC,KAAK,GAAG,uBAAZ;AACA,UAAIC,MAAM,GAAG,OAAOC,MAAP,KAAkB,QAA/B;AACA,UAAIC,IAAI,GAAGF,MAAM,GAAGC,MAAH,GAAY,EAA7B;;AACA,UAAIC,IAAI,CAACC,iBAAT,EAA4B;AACxBH,QAAAA,MAAM,GAAG,KAAT;AACH;;AACD,UAAII,UAAU,GAAG,CAACJ,MAAD,IAAW,OAAOK,IAAP,KAAgB,QAA5C;AACA,UAAIC,OAAO,GAAG,CAACJ,IAAI,CAACK,kBAAN,IAA4B,OAAOV,OAAP,KAAmB,QAA/C,IAA2DA,OAAO,CAACW,QAAnE,IAA+EX,OAAO,CAACW,QAAR,CAAiBC,IAA9G;;AACA,UAAIH,OAAJ,EAAa;AACTJ,QAAAA,IAAI,GAAGJ,MAAP;AACH,OAFD,MAEO,IAAIM,UAAJ,EAAgB;AACnBF,QAAAA,IAAI,GAAGG,IAAP;AACH;;AACD,UAAIK,YAAY,GAAG,CAACR,IAAI,CAACS,uBAAN,IAAiC,OAAO5U,WAAP,KAAuB,WAA3E;AACA,UAAI6U,SAAS,GAAG,mBAAmB5N,KAAnB,CAAyB,EAAzB,CAAhB;AACA,UAAI6N,aAAa,GAAG,CAAC,EAAD,EAAK,IAAL,EAAW,OAAX,EAAoB,SAApB,CAApB;AACA,UAAIC,cAAc,GAAG,CAAC,CAAD,EAAI,IAAJ,EAAU,MAAV,EAAkB,QAAlB,CAArB;AACA,UAAIC,cAAc,GAAG,CAAC,CAAD,EAAI,GAAJ,EAAS,KAAT,EAAgB,QAAhB,CAArB;AACA,UAAIC,OAAO,GAAG,CAAC,CAAD,EAAI,IAAJ,EAAU,MAAV,EAAkB,SAAlB,CAAd;AACA,UAAIC,KAAK,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,EAAW,EAAX,CAAZ;AACA,UAAIC,EAAE,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,KAAP,EAAc,CAAd,EAAiB,KAAjB,EAAwB,UAAxB,EAAoC,UAApC,EAAgD,UAAhD,EAA4D,KAA5D,EAAmE,CAAnE,EAAsE,UAAtE,EACL,CADK,EACF,UADE,EACU,UADV,EACsB,KADtB,EAC6B,UAD7B,EACyC,GADzC,EAC8C,CAD9C,EACiD,GADjD,EACsD,CADtD,EACyD,UADzD,EACqE,CADrE,EAEL,UAFK,EAEO,CAFP,EAEU,UAFV,EAEsB,CAFtB,EAEyB,GAFzB,EAE8B,UAF9B,EAE0C,KAF1C,EAEiD,UAFjD,EAE6D,KAF7D,EAGL,UAHK,EAGO,KAHP,EAGc,UAHd,EAG0B,GAH1B,EAG+B,UAH/B,EAG2C,KAH3C,EAGkD,CAHlD,EAGqD,UAHrD,EAGiE,UAHjE,EAIL,UAJK,EAIO,UAJP,EAImB,KAJnB,EAI0B,UAJ1B,EAIsC,UAJtC,EAIkD,CAJlD,EAIqD,UAJrD,EAIiE,UAJjE,CAAT;AAKA,UAAIC,IAAI,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CAAX;AACA,UAAIC,UAAU,GAAG,CAAC,GAAD,EAAM,GAAN,CAAjB;AACA,UAAIC,YAAY,GAAG,CAAC,KAAD,EAAQ,QAAR,EAAkB,aAAlB,EAAiC,OAAjC,EAA0C,QAA1C,CAAnB;AACA,UAAIC,cAAc,GAAG;AACjB,eAAO,GADU;AAEjB,eAAO;AAFU,OAArB;;AAKA,UAAIpB,IAAI,CAACK,kBAAL,IAA2B,CAACzM,KAAK,CAACyN,OAAtC,EAA+C;AAC3CzN,QAAAA,KAAK,CAACyN,OAAN,GAAgB,UAAUC,GAAV,EAAe;AAC3B,iBAAOC,MAAM,CAACxO,SAAP,CAAiBC,QAAjB,CAA0B1L,IAA1B,CAA+Bga,GAA/B,MAAwC,gBAA/C;AACH,SAFD;AAGH;;AAED,UAAId,YAAY,KAAKR,IAAI,CAACwB,+BAAL,IAAwC,CAAC3V,WAAW,CAAC4V,MAA1D,CAAhB,EAAmF;AAC/E5V,QAAAA,WAAW,CAAC4V,MAAZ,GAAqB,UAAUH,GAAV,EAAe;AAChC,iBAAO,OAAOA,GAAP,KAAe,QAAf,IAA2BA,GAAG,CAACvX,MAA/B,IAAyCuX,GAAG,CAACvX,MAAJ,CAAW2X,WAAX,KAA2B7V,WAA3E;AACH,SAFD;AAGH;;AAED,UAAI8V,kBAAkB,GAAG,UAAUvC,IAAV,EAAgBlG,OAAhB,EAAyB0I,UAAzB,EAAqC;AAC1D,eAAO,UAAUC,OAAV,EAAmB;AACtB,iBAAO,IAAIC,MAAJ,CAAW1C,IAAX,EAAiBlG,OAAjB,EAA0BkG,IAA1B,EAAgC7T,MAAhC,CAAuCsW,OAAvC,EAAgDD,UAAhD,GAAP;AACH,SAFD;AAGH,OAJD;;AAMA,UAAIG,uBAAuB,GAAG,UAAU3C,IAAV,EAAgBlG,OAAhB,EAAyB0I,UAAzB,EAAqC;AAC/D,eAAO,UAAUC,OAAV,EAAmBG,UAAnB,EAA+B;AAClC,iBAAO,IAAIF,MAAJ,CAAW1C,IAAX,EAAiBlG,OAAjB,EAA0B8I,UAA1B,EAAsCzW,MAAtC,CAA6CsW,OAA7C,EAAsDD,UAAtD,GAAP;AACH,SAFD;AAGH,OAJD;;AAMA,UAAIK,wBAAwB,GAAG,UAAU7C,IAAV,EAAgBlG,OAAhB,EAAyB0I,UAAzB,EAAqC;AAChE,eAAO,UAAUC,OAAV,EAAmBG,UAAnB,EAA+Bvb,CAA/B,EAAkCqL,CAAlC,EAAqC;AACxC,iBAAOoQ,OAAO,CAAC,WAAW9C,IAAZ,CAAP,CAAyB7T,MAAzB,CAAgCsW,OAAhC,EAAyCG,UAAzC,EAAqDvb,CAArD,EAAwDqL,CAAxD,EAA2D8P,UAA3D,GAAP;AACH,SAFD;AAGH,OAJD;;AAMA,UAAIO,sBAAsB,GAAG,UAAU/C,IAAV,EAAgBlG,OAAhB,EAAyB0I,UAAzB,EAAqC;AAC9D,eAAO,UAAU7T,GAAV,EAAe8T,OAAf,EAAwBG,UAAxB,EAAoClQ,CAApC,EAAuC;AAC1C,iBAAOoQ,OAAO,CAAC,SAAS9C,IAAV,CAAP,CAAuB7T,MAAvB,CAA8BwC,GAA9B,EAAmC8T,OAAnC,EAA4CG,UAA5C,EAAwDlQ,CAAxD,EAA2D8P,UAA3D,GAAP;AACH,SAFD;AAGH,OAJD;;AAMA,UAAIQ,mBAAmB,GAAG,UAAUC,MAAV,EAAkBC,YAAlB,EAAgClD,IAAhC,EAAsClG,OAAtC,EAA+C;AACrE,aAAK,IAAItS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGua,YAAY,CAAC5Z,MAAjC,EAAyC,EAAEX,CAA3C,EAA8C;AAC1C,cAAI2b,IAAI,GAAGpB,YAAY,CAACva,CAAD,CAAvB;AACAyb,UAAAA,MAAM,CAACE,IAAD,CAAN,GAAeD,YAAY,CAAClD,IAAD,EAAOlG,OAAP,EAAgBqJ,IAAhB,CAA3B;AACH;;AACD,eAAOF,MAAP;AACH,OAND;;AAQA,UAAIC,YAAY,GAAG,UAAUlD,IAAV,EAAgBlG,OAAhB,EAAyB;AACxC,YAAImJ,MAAM,GAAGV,kBAAkB,CAACvC,IAAD,EAAOlG,OAAP,EAAgB,KAAhB,CAA/B;;AACAmJ,QAAAA,MAAM,CAACG,MAAP,GAAgB,YAAY;AACxB,iBAAO,IAAIV,MAAJ,CAAW1C,IAAX,EAAiBlG,OAAjB,EAA0BkG,IAA1B,CAAP;AACH,SAFD;;AAGAiD,QAAAA,MAAM,CAAC9W,MAAP,GAAgB,UAAUsW,OAAV,EAAmB;AAC/B,iBAAOQ,MAAM,CAACG,MAAP,GAAgBjX,MAAhB,CAAuBsW,OAAvB,CAAP;AACH,SAFD;;AAGA,eAAOO,mBAAmB,CAACC,MAAD,EAASV,kBAAT,EAA6BvC,IAA7B,EAAmClG,OAAnC,CAA1B;AACH,OATD;;AAWA,UAAIuJ,iBAAiB,GAAG,UAAUrD,IAAV,EAAgBlG,OAAhB,EAAyB;AAC7C,YAAImJ,MAAM,GAAGN,uBAAuB,CAAC3C,IAAD,EAAOlG,OAAP,EAAgB,KAAhB,CAApC;;AACAmJ,QAAAA,MAAM,CAACG,MAAP,GAAgB,UAAUR,UAAV,EAAsB;AAClC,iBAAO,IAAIF,MAAJ,CAAW1C,IAAX,EAAiBlG,OAAjB,EAA0B8I,UAA1B,CAAP;AACH,SAFD;;AAGAK,QAAAA,MAAM,CAAC9W,MAAP,GAAgB,UAAUsW,OAAV,EAAmBG,UAAnB,EAA+B;AAC3C,iBAAOK,MAAM,CAACG,MAAP,CAAcR,UAAd,EAA0BzW,MAA1B,CAAiCsW,OAAjC,CAAP;AACH,SAFD;;AAGA,eAAOO,mBAAmB,CAACC,MAAD,EAASN,uBAAT,EAAkC3C,IAAlC,EAAwClG,OAAxC,CAA1B;AACH,OATD;;AAWA,UAAIwJ,kBAAkB,GAAG,UAAUtD,IAAV,EAAgBlG,OAAhB,EAAyB;AAC9C,YAAIjP,CAAC,GAAGmX,cAAc,CAAChC,IAAD,CAAtB;AACA,YAAIiD,MAAM,GAAGJ,wBAAwB,CAAC7C,IAAD,EAAOlG,OAAP,EAAgB,KAAhB,CAArC;;AACAmJ,QAAAA,MAAM,CAACG,MAAP,GAAgB,UAAUR,UAAV,EAAsBvb,CAAtB,EAAyBqL,CAAzB,EAA4B;AACxC,cAAI,CAACrL,CAAD,IAAM,CAACqL,CAAX,EAAc;AACV,mBAAOoQ,OAAO,CAAC,UAAU9C,IAAX,CAAP,CAAwBoD,MAAxB,CAA+BR,UAA/B,CAAP;AACH,WAFD,MAEO;AACH,mBAAO,IAAIF,MAAJ,CAAW1C,IAAX,EAAiBlG,OAAjB,EAA0B8I,UAA1B,EAAsCW,OAAtC,CAA8C,CAAClc,CAAD,EAAIqL,CAAJ,CAA9C,EAAsD7H,CAAtD,CAAP;AACH;AACJ,SAND;;AAOAoY,QAAAA,MAAM,CAAC9W,MAAP,GAAgB,UAAUsW,OAAV,EAAmBG,UAAnB,EAA+Bvb,CAA/B,EAAkCqL,CAAlC,EAAqC;AACjD,iBAAOuQ,MAAM,CAACG,MAAP,CAAcR,UAAd,EAA0Bvb,CAA1B,EAA6BqL,CAA7B,EAAgCvG,MAAhC,CAAuCsW,OAAvC,CAAP;AACH,SAFD;;AAGA,eAAOO,mBAAmB,CAACC,MAAD,EAASJ,wBAAT,EAAmC7C,IAAnC,EAAyClG,OAAzC,CAA1B;AACH,OAdD;;AAgBA,UAAI0J,gBAAgB,GAAG,UAAUxD,IAAV,EAAgBlG,OAAhB,EAAyB;AAC5C,YAAIjP,CAAC,GAAGmX,cAAc,CAAChC,IAAD,CAAtB;AACA,YAAIiD,MAAM,GAAGF,sBAAsB,CAAC/C,IAAD,EAAOlG,OAAP,EAAgB,KAAhB,CAAnC;;AACAmJ,QAAAA,MAAM,CAACG,MAAP,GAAgB,UAAUzU,GAAV,EAAeiU,UAAf,EAA2BlQ,CAA3B,EAA8B;AAC1C,iBAAO,IAAI+Q,IAAJ,CAASzD,IAAT,EAAelG,OAAf,EAAwB8I,UAAxB,EAAoCW,OAApC,CAA4C,CAAC,MAAD,EAAS7Q,CAAT,CAA5C,EAAyD7H,CAAzD,EAA4D0Y,OAA5D,CAAoE,CAAC5U,GAAD,CAApE,EAA2E9D,CAA3E,CAAP;AACH,SAFD;;AAGAoY,QAAAA,MAAM,CAAC9W,MAAP,GAAgB,UAAUwC,GAAV,EAAe8T,OAAf,EAAwBG,UAAxB,EAAoClQ,CAApC,EAAuC;AACnD,iBAAOuQ,MAAM,CAACG,MAAP,CAAczU,GAAd,EAAmBiU,UAAnB,EAA+BlQ,CAA/B,EAAkCvG,MAAlC,CAAyCsW,OAAzC,CAAP;AACH,SAFD;;AAGA,eAAOO,mBAAmB,CAACC,MAAD,EAASF,sBAAT,EAAiC/C,IAAjC,EAAuClG,OAAvC,CAA1B;AACH,OAVD;;AAYA,UAAI4J,UAAU,GAAG,CACb;AAAEC,QAAAA,IAAI,EAAE,QAAR;AAAkB7J,QAAAA,OAAO,EAAE2H,cAA3B;AAA2CzB,QAAAA,IAAI,EAAE6B,IAAjD;AAAuDqB,QAAAA,YAAY,EAAEA;AAArE,OADa,EAEb;AAAES,QAAAA,IAAI,EAAE,MAAR;AAAgB7J,QAAAA,OAAO,EAAE4H,OAAzB;AAAkC1B,QAAAA,IAAI,EAAE6B,IAAxC;AAA8CqB,QAAAA,YAAY,EAAEA;AAA5D,OAFa,EAGb;AAAES,QAAAA,IAAI,EAAE,OAAR;AAAiB7J,QAAAA,OAAO,EAAEyH,aAA1B;AAAyCvB,QAAAA,IAAI,EAAE8B,UAA/C;AAA2DoB,QAAAA,YAAY,EAAEG;AAAzE,OAHa,EAIb;AAAEM,QAAAA,IAAI,EAAE,QAAR;AAAkB7J,QAAAA,OAAO,EAAE0H,cAA3B;AAA2CxB,QAAAA,IAAI,EAAE8B,UAAjD;AAA6DoB,QAAAA,YAAY,EAAEI;AAA3E,OAJa,EAKb;AAAEK,QAAAA,IAAI,EAAE,MAAR;AAAgB7J,QAAAA,OAAO,EAAE0H,cAAzB;AAAyCxB,QAAAA,IAAI,EAAE8B,UAA/C;AAA2DoB,QAAAA,YAAY,EAAEM;AAAzE,OALa,CAAjB;AAQA,UAAIV,OAAO,GAAG,EAAd;AAAA,UAAkBc,WAAW,GAAG,EAAhC;;AAEA,WAAK,IAAIpc,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGkc,UAAU,CAACvb,MAA/B,EAAuC,EAAEX,CAAzC,EAA4C;AACxC,YAAIqc,SAAS,GAAGH,UAAU,CAAClc,CAAD,CAA1B;AACA,YAAIwY,IAAI,GAAG6D,SAAS,CAAC7D,IAArB;;AACA,aAAK,IAAIxV,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGwV,IAAI,CAAC7X,MAAzB,EAAiC,EAAEqC,CAAnC,EAAsC;AAClC,cAAIsZ,UAAU,GAAGD,SAAS,CAACF,IAAV,GAAiB,GAAjB,GAAuB3D,IAAI,CAACxV,CAAD,CAA5C;AACAoZ,UAAAA,WAAW,CAAC/X,IAAZ,CAAiBiY,UAAjB;AACAhB,UAAAA,OAAO,CAACgB,UAAD,CAAP,GAAsBD,SAAS,CAACX,YAAV,CAAuBlD,IAAI,CAACxV,CAAD,CAA3B,EAAgCqZ,SAAS,CAAC/J,OAA1C,CAAtB;;AACA,cAAI+J,SAAS,CAACF,IAAV,KAAmB,MAAvB,EAA+B;AAC3B,gBAAII,aAAa,GAAGF,SAAS,CAACF,IAAV,GAAiB3D,IAAI,CAACxV,CAAD,CAAzC;AACAoZ,YAAAA,WAAW,CAAC/X,IAAZ,CAAiBkY,aAAjB;AACAjB,YAAAA,OAAO,CAACiB,aAAD,CAAP,GAAyBjB,OAAO,CAACgB,UAAD,CAAhC;AACH;AACJ;AACJ;;AAED,eAASpB,MAAT,CAAgB1C,IAAhB,EAAsBlG,OAAtB,EAA+B8I,UAA/B,EAA2C;AACvC,aAAKoB,MAAL,GAAc,EAAd;AACA,aAAKtR,CAAL,GAAS,EAAT;AACA,aAAKoH,OAAL,GAAeA,OAAf;AACA,aAAK8I,UAAL,GAAkBA,UAAlB;AACA,aAAKqB,KAAL,GAAa,IAAb;AACA,aAAKC,SAAL,GAAiB,KAAjB;AACA,aAAKjK,KAAL,GAAa,CAAb;AACA,aAAKkK,KAAL,GAAa,CAAb;AACA,aAAKC,UAAL,GAAmB,QAAQpE,IAAI,IAAI,CAAhB,CAAD,IAAwB,CAA1C;AACA,aAAKqE,SAAL,GAAiB,KAAKD,UAAL,IAAmB,CAApC;AACA,aAAKE,YAAL,GAAoB1B,UAAU,IAAI,CAAlC;AACA,aAAK2B,UAAL,GAAkB,CAAC3B,UAAU,GAAG,EAAd,KAAqB,CAAvC;;AAEA,aAAK,IAAIpb,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwB,EAAEA,CAA1B,EAA6B;AACzB,eAAKkL,CAAL,CAAOlL,CAAP,IAAY,CAAZ;AACH;AACJ;;AAEDkb,MAAAA,MAAM,CAAC/O,SAAP,CAAiBxH,MAAjB,GAA0B,UAAUsW,OAAV,EAAmB;AACzC,YAAI,KAAKyB,SAAT,EAAoB;AAChB;AACH;;AACD,YAAIM,SAAJ;AAAA,YAAerB,IAAI,GAAG,OAAOV,OAA7B;;AACA,YAAIU,IAAI,KAAK,QAAb,EAAuB;AACnB,cAAIA,IAAI,KAAK,QAAb,EAAuB;AACnB,gBAAIV,OAAO,KAAK,IAAhB,EAAsB;AAClB,oBAAMhC,KAAN;AACH,aAFD,MAEO,IAAIW,YAAY,IAAIqB,OAAO,CAACH,WAAR,KAAwB7V,WAA5C,EAAyD;AAC5DgW,cAAAA,OAAO,GAAG,IAAI/Z,UAAJ,CAAe+Z,OAAf,CAAV;AACH,aAFM,MAEA,IAAI,CAACjO,KAAK,CAACyN,OAAN,CAAcQ,OAAd,CAAL,EAA6B;AAChC,kBAAI,CAACrB,YAAD,IAAiB,CAAC3U,WAAW,CAAC4V,MAAZ,CAAmBI,OAAnB,CAAtB,EAAmD;AAC/C,sBAAMhC,KAAN;AACH;AACJ;AACJ,WAVD,MAUO;AACH,kBAAMA,KAAN;AACH;;AACD+D,UAAAA,SAAS,GAAG,IAAZ;AACH;;AACD,YAAIR,MAAM,GAAG,KAAKA,MAAlB;AAAA,YAA0BK,SAAS,GAAG,KAAKA,SAA3C;AAAA,YAAsDlc,MAAM,GAAGsa,OAAO,CAACta,MAAvE;AAAA,YACIic,UAAU,GAAG,KAAKA,UADtB;AAAA,YACkCvF,KAAK,GAAG,CAD1C;AAAA,YAC6CnM,CAAC,GAAG,KAAKA,CADtD;AAAA,YACyDlL,CADzD;AAAA,YAC4DO,IAD5D;;AAGA,eAAO8W,KAAK,GAAG1W,MAAf,EAAuB;AACnB,cAAI,KAAK8b,KAAT,EAAgB;AACZ,iBAAKA,KAAL,GAAa,KAAb;AACAD,YAAAA,MAAM,CAAC,CAAD,CAAN,GAAY,KAAK/J,KAAjB;;AACA,iBAAKzS,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG4c,UAAU,GAAG,CAA7B,EAAgC,EAAE5c,CAAlC,EAAqC;AACjCwc,cAAAA,MAAM,CAACxc,CAAD,CAAN,GAAY,CAAZ;AACH;AACJ;;AACD,cAAIgd,SAAJ,EAAe;AACX,iBAAKhd,CAAC,GAAG,KAAK2c,KAAd,EAAqBtF,KAAK,GAAG1W,MAAR,IAAkBX,CAAC,GAAG6c,SAA3C,EAAsD,EAAExF,KAAxD,EAA+D;AAC3DmF,cAAAA,MAAM,CAACxc,CAAC,IAAI,CAAN,CAAN,IAAkBib,OAAO,CAAC5D,KAAD,CAAP,IAAkB8C,KAAK,CAACna,CAAC,KAAK,CAAP,CAAzC;AACH;AACJ,WAJD,MAIO;AACH,iBAAKA,CAAC,GAAG,KAAK2c,KAAd,EAAqBtF,KAAK,GAAG1W,MAAR,IAAkBX,CAAC,GAAG6c,SAA3C,EAAsD,EAAExF,KAAxD,EAA+D;AAC3D9W,cAAAA,IAAI,GAAG0a,OAAO,CAAC1Z,UAAR,CAAmB8V,KAAnB,CAAP;;AACA,kBAAI9W,IAAI,GAAG,IAAX,EAAiB;AACbic,gBAAAA,MAAM,CAACxc,CAAC,IAAI,CAAN,CAAN,IAAkBO,IAAI,IAAI4Z,KAAK,CAACna,CAAC,KAAK,CAAP,CAA/B;AACH,eAFD,MAEO,IAAIO,IAAI,GAAG,KAAX,EAAkB;AACrBic,gBAAAA,MAAM,CAACxc,CAAC,IAAI,CAAN,CAAN,IAAkB,CAAC,OAAQO,IAAI,IAAI,CAAjB,KAAwB4Z,KAAK,CAACna,CAAC,KAAK,CAAP,CAA/C;AACAwc,gBAAAA,MAAM,CAACxc,CAAC,IAAI,CAAN,CAAN,IAAkB,CAAC,OAAQO,IAAI,GAAG,IAAhB,KAA0B4Z,KAAK,CAACna,CAAC,KAAK,CAAP,CAAjD;AACH,eAHM,MAGA,IAAIO,IAAI,GAAG,MAAP,IAAiBA,IAAI,IAAI,MAA7B,EAAqC;AACxCic,gBAAAA,MAAM,CAACxc,CAAC,IAAI,CAAN,CAAN,IAAkB,CAAC,OAAQO,IAAI,IAAI,EAAjB,KAAyB4Z,KAAK,CAACna,CAAC,KAAK,CAAP,CAAhD;AACAwc,gBAAAA,MAAM,CAACxc,CAAC,IAAI,CAAN,CAAN,IAAkB,CAAC,OAASO,IAAI,IAAI,CAAT,GAAc,IAAvB,KAAiC4Z,KAAK,CAACna,CAAC,KAAK,CAAP,CAAxD;AACAwc,gBAAAA,MAAM,CAACxc,CAAC,IAAI,CAAN,CAAN,IAAkB,CAAC,OAAQO,IAAI,GAAG,IAAhB,KAA0B4Z,KAAK,CAACna,CAAC,KAAK,CAAP,CAAjD;AACH,eAJM,MAIA;AACHO,gBAAAA,IAAI,GAAG,WAAY,CAACA,IAAI,GAAG,KAAR,KAAkB,EAAnB,GAA0B0a,OAAO,CAAC1Z,UAAR,CAAmB,EAAE8V,KAArB,IAA8B,KAAnE,CAAP;AACAmF,gBAAAA,MAAM,CAACxc,CAAC,IAAI,CAAN,CAAN,IAAkB,CAAC,OAAQO,IAAI,IAAI,EAAjB,KAAyB4Z,KAAK,CAACna,CAAC,KAAK,CAAP,CAAhD;AACAwc,gBAAAA,MAAM,CAACxc,CAAC,IAAI,CAAN,CAAN,IAAkB,CAAC,OAASO,IAAI,IAAI,EAAT,GAAe,IAAxB,KAAkC4Z,KAAK,CAACna,CAAC,KAAK,CAAP,CAAzD;AACAwc,gBAAAA,MAAM,CAACxc,CAAC,IAAI,CAAN,CAAN,IAAkB,CAAC,OAASO,IAAI,IAAI,CAAT,GAAc,IAAvB,KAAiC4Z,KAAK,CAACna,CAAC,KAAK,CAAP,CAAxD;AACAwc,gBAAAA,MAAM,CAACxc,CAAC,IAAI,CAAN,CAAN,IAAkB,CAAC,OAAQO,IAAI,GAAG,IAAhB,KAA0B4Z,KAAK,CAACna,CAAC,KAAK,CAAP,CAAjD;AACH;AACJ;AACJ;;AACD,eAAKid,aAAL,GAAqBjd,CAArB;;AACA,cAAIA,CAAC,IAAI6c,SAAT,EAAoB;AAChB,iBAAKF,KAAL,GAAa3c,CAAC,GAAG6c,SAAjB;AACA,iBAAKpK,KAAL,GAAa+J,MAAM,CAACI,UAAD,CAAnB;;AACA,iBAAK5c,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG4c,UAAhB,EAA4B,EAAE5c,CAA9B,EAAiC;AAC7BkL,cAAAA,CAAC,CAAClL,CAAD,CAAD,IAAQwc,MAAM,CAACxc,CAAD,CAAd;AACH;;AACDC,YAAAA,CAAC,CAACiL,CAAD,CAAD;AACA,iBAAKuR,KAAL,GAAa,IAAb;AACH,WARD,MAQO;AACH,iBAAKE,KAAL,GAAa3c,CAAb;AACH;AACJ;;AACD,eAAO,IAAP;AACH,OAvED;;AAyEAkb,MAAAA,MAAM,CAAC/O,SAAP,CAAiBrK,MAAjB,GAA0B,UAAUV,CAAV,EAAa8b,KAAb,EAAoB;AAC1C,YAAInd,CAAC,GAAGqB,CAAC,GAAG,GAAZ;AAAA,YAAiBvB,CAAC,GAAG,CAArB;AACA,YAAI6J,KAAK,GAAG,CAAC3J,CAAD,CAAZ;AACAqB,QAAAA,CAAC,GAAGA,CAAC,IAAI,CAAT;AACArB,QAAAA,CAAC,GAAGqB,CAAC,GAAG,GAAR;;AACA,eAAOrB,CAAC,GAAG,CAAX,EAAc;AACV2J,UAAAA,KAAK,CAACoG,OAAN,CAAc/P,CAAd;AACAqB,UAAAA,CAAC,GAAGA,CAAC,IAAI,CAAT;AACArB,UAAAA,CAAC,GAAGqB,CAAC,GAAG,GAAR;AACA,YAAEvB,CAAF;AACH;;AACD,YAAIqd,KAAJ,EAAW;AACPxT,UAAAA,KAAK,CAACrF,IAAN,CAAWxE,CAAX;AACH,SAFD,MAEO;AACH6J,UAAAA,KAAK,CAACoG,OAAN,CAAcjQ,CAAd;AACH;;AACD,aAAK8E,MAAL,CAAY+E,KAAZ;AACA,eAAOA,KAAK,CAAC/I,MAAb;AACH,OAlBD;;AAoBAua,MAAAA,MAAM,CAAC/O,SAAP,CAAiBgR,YAAjB,GAAgC,UAAU3a,GAAV,EAAe;AAC3C,YAAIwa,SAAJ;AAAA,YAAerB,IAAI,GAAG,OAAOnZ,GAA7B;;AACA,YAAImZ,IAAI,KAAK,QAAb,EAAuB;AACnB,cAAIA,IAAI,KAAK,QAAb,EAAuB;AACnB,gBAAInZ,GAAG,KAAK,IAAZ,EAAkB;AACd,oBAAMyW,KAAN;AACH,aAFD,MAEO,IAAIW,YAAY,IAAIpX,GAAG,CAACsY,WAAJ,KAAoB7V,WAAxC,EAAqD;AACxDzC,cAAAA,GAAG,GAAG,IAAItB,UAAJ,CAAesB,GAAf,CAAN;AACH,aAFM,MAEA,IAAI,CAACwK,KAAK,CAACyN,OAAN,CAAcjY,GAAd,CAAL,EAAyB;AAC5B,kBAAI,CAACoX,YAAD,IAAiB,CAAC3U,WAAW,CAAC4V,MAAZ,CAAmBrY,GAAnB,CAAtB,EAA+C;AAC3C,sBAAMyW,KAAN;AACH;AACJ;AACJ,WAVD,MAUO;AACH,kBAAMA,KAAN;AACH;;AACD+D,UAAAA,SAAS,GAAG,IAAZ;AACH;;AACD,YAAItT,KAAK,GAAG,CAAZ;AAAA,YAAe/I,MAAM,GAAG6B,GAAG,CAAC7B,MAA5B;;AACA,YAAIqc,SAAJ,EAAe;AACXtT,UAAAA,KAAK,GAAG/I,MAAR;AACH,SAFD,MAEO;AACH,eAAK,IAAIX,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGwC,GAAG,CAAC7B,MAAxB,EAAgC,EAAEX,CAAlC,EAAqC;AACjC,gBAAIO,IAAI,GAAGiC,GAAG,CAACjB,UAAJ,CAAevB,CAAf,CAAX;;AACA,gBAAIO,IAAI,GAAG,IAAX,EAAiB;AACbmJ,cAAAA,KAAK,IAAI,CAAT;AACH,aAFD,MAEO,IAAInJ,IAAI,GAAG,KAAX,EAAkB;AACrBmJ,cAAAA,KAAK,IAAI,CAAT;AACH,aAFM,MAEA,IAAInJ,IAAI,GAAG,MAAP,IAAiBA,IAAI,IAAI,MAA7B,EAAqC;AACxCmJ,cAAAA,KAAK,IAAI,CAAT;AACH,aAFM,MAEA;AACHnJ,cAAAA,IAAI,GAAG,WAAY,CAACA,IAAI,GAAG,KAAR,KAAkB,EAAnB,GAA0BiC,GAAG,CAACjB,UAAJ,CAAe,EAAEvB,CAAjB,IAAsB,KAA3D,CAAP;AACA0J,cAAAA,KAAK,IAAI,CAAT;AACH;AACJ;AACJ;;AACDA,QAAAA,KAAK,IAAI,KAAK5H,MAAL,CAAY4H,KAAK,GAAG,CAApB,CAAT;AACA,aAAK/E,MAAL,CAAYnC,GAAZ;AACA,eAAOkH,KAAP;AACH,OAvCD;;AAyCAwR,MAAAA,MAAM,CAAC/O,SAAP,CAAiB4P,OAAjB,GAA2B,UAAUqB,IAAV,EAAgB/Z,CAAhB,EAAmB;AAC1C,YAAIqG,KAAK,GAAG,KAAK5H,MAAL,CAAYuB,CAAZ,CAAZ;;AACA,aAAK,IAAIrD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGod,IAAI,CAACzc,MAAzB,EAAiC,EAAEX,CAAnC,EAAsC;AAClC0J,UAAAA,KAAK,IAAI,KAAKyT,YAAL,CAAkBC,IAAI,CAACpd,CAAD,CAAtB,CAAT;AACH;;AACD,YAAIqd,YAAY,GAAGha,CAAC,GAAGqG,KAAK,GAAGrG,CAA/B;AACA,YAAIia,KAAK,GAAG,EAAZ;AACAA,QAAAA,KAAK,CAAC3c,MAAN,GAAe0c,YAAf;AACA,aAAK1Y,MAAL,CAAY2Y,KAAZ;AACA,eAAO,IAAP;AACH,OAVD;;AAYApC,MAAAA,MAAM,CAAC/O,SAAP,CAAiBoR,QAAjB,GAA4B,YAAY;AACpC,YAAI,KAAKb,SAAT,EAAoB;AAChB;AACH;;AACD,aAAKA,SAAL,GAAiB,IAAjB;AACA,YAAIF,MAAM,GAAG,KAAKA,MAAlB;AAAA,YAA0Bxc,CAAC,GAAG,KAAKid,aAAnC;AAAA,YAAkDL,UAAU,GAAG,KAAKA,UAApE;AAAA,YAAgF1R,CAAC,GAAG,KAAKA,CAAzF;AACAsR,QAAAA,MAAM,CAACxc,CAAC,IAAI,CAAN,CAAN,IAAkB,KAAKsS,OAAL,CAAatS,CAAC,GAAG,CAAjB,CAAlB;;AACA,YAAI,KAAKid,aAAL,KAAuB,KAAKJ,SAAhC,EAA2C;AACvCL,UAAAA,MAAM,CAAC,CAAD,CAAN,GAAYA,MAAM,CAACI,UAAD,CAAlB;;AACA,eAAK5c,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG4c,UAAU,GAAG,CAA7B,EAAgC,EAAE5c,CAAlC,EAAqC;AACjCwc,YAAAA,MAAM,CAACxc,CAAD,CAAN,GAAY,CAAZ;AACH;AACJ;;AACDwc,QAAAA,MAAM,CAACI,UAAU,GAAG,CAAd,CAAN,IAA0B,UAA1B;;AACA,aAAK5c,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG4c,UAAhB,EAA4B,EAAE5c,CAA9B,EAAiC;AAC7BkL,UAAAA,CAAC,CAAClL,CAAD,CAAD,IAAQwc,MAAM,CAACxc,CAAD,CAAd;AACH;;AACDC,QAAAA,CAAC,CAACiL,CAAD,CAAD;AACH,OAlBD;;AAoBAgQ,MAAAA,MAAM,CAAC/O,SAAP,CAAiBC,QAAjB,GAA4B8O,MAAM,CAAC/O,SAAP,CAAiBuK,GAAjB,GAAuB,YAAY;AAC3D,aAAK6G,QAAL;AAEA,YAAIX,UAAU,GAAG,KAAKA,UAAtB;AAAA,YAAkC1R,CAAC,GAAG,KAAKA,CAA3C;AAAA,YAA8C4R,YAAY,GAAG,KAAKA,YAAlE;AAAA,YACIC,UAAU,GAAG,KAAKA,UADtB;AAAA,YACkC/c,CAAC,GAAG,CADtC;AAAA,YACyCgD,CAAC,GAAG,CAD7C;AAEA,YAAI0T,GAAG,GAAG,EAAV;AAAA,YAAcjE,KAAd;;AACA,eAAOzP,CAAC,GAAG8Z,YAAX,EAAyB;AACrB,eAAK9c,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG4c,UAAJ,IAAkB5Z,CAAC,GAAG8Z,YAAlC,EAAgD,EAAE9c,CAAF,EAAK,EAAEgD,CAAvD,EAA0D;AACtDyP,YAAAA,KAAK,GAAGvH,CAAC,CAAClL,CAAD,CAAT;AACA0W,YAAAA,GAAG,IAAIoD,SAAS,CAAErH,KAAK,IAAI,CAAV,GAAe,IAAhB,CAAT,GAAiCqH,SAAS,CAACrH,KAAK,GAAG,IAAT,CAA1C,GACHqH,SAAS,CAAErH,KAAK,IAAI,EAAV,GAAgB,IAAjB,CADN,GAC+BqH,SAAS,CAAErH,KAAK,IAAI,CAAV,GAAe,IAAhB,CADxC,GAEHqH,SAAS,CAAErH,KAAK,IAAI,EAAV,GAAgB,IAAjB,CAFN,GAE+BqH,SAAS,CAAErH,KAAK,IAAI,EAAV,GAAgB,IAAjB,CAFxC,GAGHqH,SAAS,CAAErH,KAAK,IAAI,EAAV,GAAgB,IAAjB,CAHN,GAG+BqH,SAAS,CAAErH,KAAK,IAAI,EAAV,GAAgB,IAAjB,CAH/C;AAIH;;AACD,cAAIzP,CAAC,GAAG4Z,UAAJ,KAAmB,CAAvB,EAA0B;AACtB3c,YAAAA,CAAC,CAACiL,CAAD,CAAD;AACAlL,YAAAA,CAAC,GAAG,CAAJ;AACH;AACJ;;AACD,YAAI+c,UAAJ,EAAgB;AACZtK,UAAAA,KAAK,GAAGvH,CAAC,CAAClL,CAAD,CAAT;AACA0W,UAAAA,GAAG,IAAIoD,SAAS,CAAErH,KAAK,IAAI,CAAV,GAAe,IAAhB,CAAT,GAAiCqH,SAAS,CAACrH,KAAK,GAAG,IAAT,CAAjD;;AACA,cAAIsK,UAAU,GAAG,CAAjB,EAAoB;AAChBrG,YAAAA,GAAG,IAAIoD,SAAS,CAAErH,KAAK,IAAI,EAAV,GAAgB,IAAjB,CAAT,GAAkCqH,SAAS,CAAErH,KAAK,IAAI,CAAV,GAAe,IAAhB,CAAlD;AACH;;AACD,cAAIsK,UAAU,GAAG,CAAjB,EAAoB;AAChBrG,YAAAA,GAAG,IAAIoD,SAAS,CAAErH,KAAK,IAAI,EAAV,GAAgB,IAAjB,CAAT,GAAkCqH,SAAS,CAAErH,KAAK,IAAI,EAAV,GAAgB,IAAjB,CAAlD;AACH;AACJ;;AACD,eAAOiE,GAAP;AACH,OA9BD;;AAgCAwE,MAAAA,MAAM,CAAC/O,SAAP,CAAiBqR,WAAjB,GAA+B,YAAY;AACvC,aAAKD,QAAL;AAEA,YAAIX,UAAU,GAAG,KAAKA,UAAtB;AAAA,YAAkC1R,CAAC,GAAG,KAAKA,CAA3C;AAAA,YAA8C4R,YAAY,GAAG,KAAKA,YAAlE;AAAA,YACIC,UAAU,GAAG,KAAKA,UADtB;AAAA,YACkC/c,CAAC,GAAG,CADtC;AAAA,YACyCgD,CAAC,GAAG,CAD7C;AAEA,YAAI0G,KAAK,GAAG,KAAK0R,UAAL,IAAmB,CAA/B;AACA,YAAIjY,MAAJ;;AACA,YAAI4Z,UAAJ,EAAgB;AACZ5Z,UAAAA,MAAM,GAAG,IAAI8B,WAAJ,CAAiB6X,YAAY,GAAG,CAAhB,IAAsB,CAAtC,CAAT;AACH,SAFD,MAEO;AACH3Z,UAAAA,MAAM,GAAG,IAAI8B,WAAJ,CAAgByE,KAAhB,CAAT;AACH;;AACD,YAAI+T,KAAK,GAAG,IAAI3I,WAAJ,CAAgB3R,MAAhB,CAAZ;;AACA,eAAOH,CAAC,GAAG8Z,YAAX,EAAyB;AACrB,eAAK9c,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG4c,UAAJ,IAAkB5Z,CAAC,GAAG8Z,YAAlC,EAAgD,EAAE9c,CAAF,EAAK,EAAEgD,CAAvD,EAA0D;AACtDya,YAAAA,KAAK,CAACza,CAAD,CAAL,GAAWkI,CAAC,CAAClL,CAAD,CAAZ;AACH;;AACD,cAAIgD,CAAC,GAAG4Z,UAAJ,KAAmB,CAAvB,EAA0B;AACtB3c,YAAAA,CAAC,CAACiL,CAAD,CAAD;AACH;AACJ;;AACD,YAAI6R,UAAJ,EAAgB;AACZU,UAAAA,KAAK,CAACzd,CAAD,CAAL,GAAWkL,CAAC,CAAClL,CAAD,CAAZ;AACAmD,UAAAA,MAAM,GAAGA,MAAM,CAACmB,KAAP,CAAa,CAAb,EAAgBoF,KAAhB,CAAT;AACH;;AACD,eAAOvG,MAAP;AACH,OA1BD;;AA4BA+X,MAAAA,MAAM,CAAC/O,SAAP,CAAiBhJ,MAAjB,GAA0B+X,MAAM,CAAC/O,SAAP,CAAiBqR,WAA3C;;AAEAtC,MAAAA,MAAM,CAAC/O,SAAP,CAAiByH,MAAjB,GAA0BsH,MAAM,CAAC/O,SAAP,CAAiBsR,KAAjB,GAAyB,YAAY;AAC3D,aAAKF,QAAL;AAEA,YAAIX,UAAU,GAAG,KAAKA,UAAtB;AAAA,YAAkC1R,CAAC,GAAG,KAAKA,CAA3C;AAAA,YAA8C4R,YAAY,GAAG,KAAKA,YAAlE;AAAA,YACIC,UAAU,GAAG,KAAKA,UADtB;AAAA,YACkC/c,CAAC,GAAG,CADtC;AAAA,YACyCgD,CAAC,GAAG,CAD7C;AAEA,YAAIya,KAAK,GAAG,EAAZ;AAAA,YAAgB9K,MAAhB;AAAA,YAAwBF,KAAxB;;AACA,eAAOzP,CAAC,GAAG8Z,YAAX,EAAyB;AACrB,eAAK9c,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG4c,UAAJ,IAAkB5Z,CAAC,GAAG8Z,YAAlC,EAAgD,EAAE9c,CAAF,EAAK,EAAEgD,CAAvD,EAA0D;AACtD2P,YAAAA,MAAM,GAAG3P,CAAC,IAAI,CAAd;AACAyP,YAAAA,KAAK,GAAGvH,CAAC,CAAClL,CAAD,CAAT;AACAyd,YAAAA,KAAK,CAAC9K,MAAD,CAAL,GAAgBF,KAAK,GAAG,IAAxB;AACAgL,YAAAA,KAAK,CAAC9K,MAAM,GAAG,CAAV,CAAL,GAAqBF,KAAK,IAAI,CAAV,GAAe,IAAnC;AACAgL,YAAAA,KAAK,CAAC9K,MAAM,GAAG,CAAV,CAAL,GAAqBF,KAAK,IAAI,EAAV,GAAgB,IAApC;AACAgL,YAAAA,KAAK,CAAC9K,MAAM,GAAG,CAAV,CAAL,GAAqBF,KAAK,IAAI,EAAV,GAAgB,IAApC;AACH;;AACD,cAAIzP,CAAC,GAAG4Z,UAAJ,KAAmB,CAAvB,EAA0B;AACtB3c,YAAAA,CAAC,CAACiL,CAAD,CAAD;AACH;AACJ;;AACD,YAAI6R,UAAJ,EAAgB;AACZpK,UAAAA,MAAM,GAAG3P,CAAC,IAAI,CAAd;AACAyP,UAAAA,KAAK,GAAGvH,CAAC,CAAClL,CAAD,CAAT;AACAyd,UAAAA,KAAK,CAAC9K,MAAD,CAAL,GAAgBF,KAAK,GAAG,IAAxB;;AACA,cAAIsK,UAAU,GAAG,CAAjB,EAAoB;AAChBU,YAAAA,KAAK,CAAC9K,MAAM,GAAG,CAAV,CAAL,GAAqBF,KAAK,IAAI,CAAV,GAAe,IAAnC;AACH;;AACD,cAAIsK,UAAU,GAAG,CAAjB,EAAoB;AAChBU,YAAAA,KAAK,CAAC9K,MAAM,GAAG,CAAV,CAAL,GAAqBF,KAAK,IAAI,EAAV,GAAgB,IAApC;AACH;AACJ;;AACD,eAAOgL,KAAP;AACH,OA/BD;;AAiCA,eAASxB,IAAT,CAAczD,IAAd,EAAoBlG,OAApB,EAA6B8I,UAA7B,EAAyC;AACrCF,QAAAA,MAAM,CAACxa,IAAP,CAAY,IAAZ,EAAkB8X,IAAlB,EAAwBlG,OAAxB,EAAiC8I,UAAjC;AACH;;AAEDa,MAAAA,IAAI,CAAC9P,SAAL,GAAiB,IAAI+O,MAAJ,EAAjB;;AAEAe,MAAAA,IAAI,CAAC9P,SAAL,CAAeoR,QAAf,GAA0B,YAAY;AAClC,aAAKzb,MAAL,CAAY,KAAKsZ,UAAjB,EAA6B,IAA7B;AACA,eAAOF,MAAM,CAAC/O,SAAP,CAAiBoR,QAAjB,CAA0B7c,IAA1B,CAA+B,IAA/B,CAAP;AACH,OAHD;;AAKA,UAAIT,CAAC,GAAG,UAAUiL,CAAV,EAAa;AACjB,YAAIvH,CAAJ,EAAOJ,CAAP,EAAU1D,CAAV,EAAa6d,EAAb,EAAiBC,EAAjB,EAAqBC,EAArB,EAAyBC,EAAzB,EAA6BC,EAA7B,EAAiCC,EAAjC,EAAqCC,EAArC,EAAyCC,EAAzC,EAA6CC,EAA7C,EAAiDC,EAAjD,EACIlK,EADJ,EACQC,EADR,EACYkK,EADZ,EACgBC,EADhB,EACoBC,EADpB,EACwBC,EADxB,EAC4BC,EAD5B,EACgCC,EADhC,EACoCC,EADpC,EACwCC,EADxC,EAC4CC,GAD5C,EACiDC,GADjD,EACsDC,GADtD,EAC2DC,GAD3D,EACgEC,GADhE,EACqEC,GADrE,EAC0EC,GAD1E,EAC+EC,GAD/E,EAEIC,GAFJ,EAESC,GAFT,EAEcC,GAFd,EAEmBC,GAFnB,EAEwBC,GAFxB,EAE6BC,GAF7B,EAEkCC,GAFlC,EAEuCC,GAFvC,EAE4CC,GAF5C,EAEiDC,GAFjD,EAEsDC,GAFtD,EAE2DC,GAF3D,EAEgEC,GAFhE,EAEqEC,GAFrE,EAE0EC,GAF1E,EAE+EC,GAF/E,EAGIC,GAHJ,EAGSC,GAHT,EAGcC,GAHd,EAGmBC,GAHnB,EAGwBC,GAHxB,EAG6BC,GAH7B,EAGkCC,GAHlC,EAGuCC,GAHvC,EAG4CC,GAH5C,EAGiDC,GAHjD,EAGsDC,GAHtD,EAG2DC,GAH3D,EAGgEC,GAHhE,EAGqEC,GAHrE,EAG0EC,GAH1E,EAG+EC,GAH/E;;AAIA,aAAKthB,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,EAAhB,EAAoBA,CAAC,IAAI,CAAzB,EAA4B;AACxB6d,UAAAA,EAAE,GAAGxS,CAAC,CAAC,CAAD,CAAD,GAAOA,CAAC,CAAC,EAAD,CAAR,GAAeA,CAAC,CAAC,EAAD,CAAhB,GAAuBA,CAAC,CAAC,EAAD,CAAxB,GAA+BA,CAAC,CAAC,EAAD,CAArC;AACAyS,UAAAA,EAAE,GAAGzS,CAAC,CAAC,CAAD,CAAD,GAAOA,CAAC,CAAC,EAAD,CAAR,GAAeA,CAAC,CAAC,EAAD,CAAhB,GAAuBA,CAAC,CAAC,EAAD,CAAxB,GAA+BA,CAAC,CAAC,EAAD,CAArC;AACA0S,UAAAA,EAAE,GAAG1S,CAAC,CAAC,CAAD,CAAD,GAAOA,CAAC,CAAC,EAAD,CAAR,GAAeA,CAAC,CAAC,EAAD,CAAhB,GAAuBA,CAAC,CAAC,EAAD,CAAxB,GAA+BA,CAAC,CAAC,EAAD,CAArC;AACA2S,UAAAA,EAAE,GAAG3S,CAAC,CAAC,CAAD,CAAD,GAAOA,CAAC,CAAC,EAAD,CAAR,GAAeA,CAAC,CAAC,EAAD,CAAhB,GAAuBA,CAAC,CAAC,EAAD,CAAxB,GAA+BA,CAAC,CAAC,EAAD,CAArC;AACA4S,UAAAA,EAAE,GAAG5S,CAAC,CAAC,CAAD,CAAD,GAAOA,CAAC,CAAC,EAAD,CAAR,GAAeA,CAAC,CAAC,EAAD,CAAhB,GAAuBA,CAAC,CAAC,EAAD,CAAxB,GAA+BA,CAAC,CAAC,EAAD,CAArC;AACA6S,UAAAA,EAAE,GAAG7S,CAAC,CAAC,CAAD,CAAD,GAAOA,CAAC,CAAC,EAAD,CAAR,GAAeA,CAAC,CAAC,EAAD,CAAhB,GAAuBA,CAAC,CAAC,EAAD,CAAxB,GAA+BA,CAAC,CAAC,EAAD,CAArC;AACA8S,UAAAA,EAAE,GAAG9S,CAAC,CAAC,CAAD,CAAD,GAAOA,CAAC,CAAC,EAAD,CAAR,GAAeA,CAAC,CAAC,EAAD,CAAhB,GAAuBA,CAAC,CAAC,EAAD,CAAxB,GAA+BA,CAAC,CAAC,EAAD,CAArC;AACA+S,UAAAA,EAAE,GAAG/S,CAAC,CAAC,CAAD,CAAD,GAAOA,CAAC,CAAC,EAAD,CAAR,GAAeA,CAAC,CAAC,EAAD,CAAhB,GAAuBA,CAAC,CAAC,EAAD,CAAxB,GAA+BA,CAAC,CAAC,EAAD,CAArC;AACAgT,UAAAA,EAAE,GAAGhT,CAAC,CAAC,CAAD,CAAD,GAAOA,CAAC,CAAC,EAAD,CAAR,GAAeA,CAAC,CAAC,EAAD,CAAhB,GAAuBA,CAAC,CAAC,EAAD,CAAxB,GAA+BA,CAAC,CAAC,EAAD,CAArC;AACAiT,UAAAA,EAAE,GAAGjT,CAAC,CAAC,CAAD,CAAD,GAAOA,CAAC,CAAC,EAAD,CAAR,GAAeA,CAAC,CAAC,EAAD,CAAhB,GAAuBA,CAAC,CAAC,EAAD,CAAxB,GAA+BA,CAAC,CAAC,EAAD,CAArC;AAEAvH,UAAAA,CAAC,GAAGua,EAAE,IAAKN,EAAE,IAAI,CAAP,GAAaC,EAAE,KAAK,EAAxB,CAAN;AACAta,UAAAA,CAAC,GAAG4a,EAAE,IAAKN,EAAE,IAAI,CAAP,GAAaD,EAAE,KAAK,EAAxB,CAAN;AACA1S,UAAAA,CAAC,CAAC,CAAD,CAAD,IAAQvH,CAAR;AACAuH,UAAAA,CAAC,CAAC,CAAD,CAAD,IAAQ3H,CAAR;AACA2H,UAAAA,CAAC,CAAC,EAAD,CAAD,IAASvH,CAAT;AACAuH,UAAAA,CAAC,CAAC,EAAD,CAAD,IAAS3H,CAAT;AACA2H,UAAAA,CAAC,CAAC,EAAD,CAAD,IAASvH,CAAT;AACAuH,UAAAA,CAAC,CAAC,EAAD,CAAD,IAAS3H,CAAT;AACA2H,UAAAA,CAAC,CAAC,EAAD,CAAD,IAASvH,CAAT;AACAuH,UAAAA,CAAC,CAAC,EAAD,CAAD,IAAS3H,CAAT;AACA2H,UAAAA,CAAC,CAAC,EAAD,CAAD,IAASvH,CAAT;AACAuH,UAAAA,CAAC,CAAC,EAAD,CAAD,IAAS3H,CAAT;AACAI,UAAAA,CAAC,GAAG+Z,EAAE,IAAKI,EAAE,IAAI,CAAP,GAAaC,EAAE,KAAK,EAAxB,CAAN;AACAxa,UAAAA,CAAC,GAAGoa,EAAE,IAAKI,EAAE,IAAI,CAAP,GAAaD,EAAE,KAAK,EAAxB,CAAN;AACA5S,UAAAA,CAAC,CAAC,CAAD,CAAD,IAAQvH,CAAR;AACAuH,UAAAA,CAAC,CAAC,CAAD,CAAD,IAAQ3H,CAAR;AACA2H,UAAAA,CAAC,CAAC,EAAD,CAAD,IAASvH,CAAT;AACAuH,UAAAA,CAAC,CAAC,EAAD,CAAD,IAAS3H,CAAT;AACA2H,UAAAA,CAAC,CAAC,EAAD,CAAD,IAASvH,CAAT;AACAuH,UAAAA,CAAC,CAAC,EAAD,CAAD,IAAS3H,CAAT;AACA2H,UAAAA,CAAC,CAAC,EAAD,CAAD,IAASvH,CAAT;AACAuH,UAAAA,CAAC,CAAC,EAAD,CAAD,IAAS3H,CAAT;AACA2H,UAAAA,CAAC,CAAC,EAAD,CAAD,IAASvH,CAAT;AACAuH,UAAAA,CAAC,CAAC,EAAD,CAAD,IAAS3H,CAAT;AACAI,UAAAA,CAAC,GAAGia,EAAE,IAAKI,EAAE,IAAI,CAAP,GAAaC,EAAE,KAAK,EAAxB,CAAN;AACA1a,UAAAA,CAAC,GAAGsa,EAAE,IAAKI,EAAE,IAAI,CAAP,GAAaD,EAAE,KAAK,EAAxB,CAAN;AACA9S,UAAAA,CAAC,CAAC,CAAD,CAAD,IAAQvH,CAAR;AACAuH,UAAAA,CAAC,CAAC,CAAD,CAAD,IAAQ3H,CAAR;AACA2H,UAAAA,CAAC,CAAC,EAAD,CAAD,IAASvH,CAAT;AACAuH,UAAAA,CAAC,CAAC,EAAD,CAAD,IAAS3H,CAAT;AACA2H,UAAAA,CAAC,CAAC,EAAD,CAAD,IAASvH,CAAT;AACAuH,UAAAA,CAAC,CAAC,EAAD,CAAD,IAAS3H,CAAT;AACA2H,UAAAA,CAAC,CAAC,EAAD,CAAD,IAASvH,CAAT;AACAuH,UAAAA,CAAC,CAAC,EAAD,CAAD,IAAS3H,CAAT;AACA2H,UAAAA,CAAC,CAAC,EAAD,CAAD,IAASvH,CAAT;AACAuH,UAAAA,CAAC,CAAC,EAAD,CAAD,IAAS3H,CAAT;AACAI,UAAAA,CAAC,GAAGma,EAAE,IAAKI,EAAE,IAAI,CAAP,GAAaC,EAAE,KAAK,EAAxB,CAAN;AACA5a,UAAAA,CAAC,GAAGwa,EAAE,IAAKI,EAAE,IAAI,CAAP,GAAaD,EAAE,KAAK,EAAxB,CAAN;AACAhT,UAAAA,CAAC,CAAC,CAAD,CAAD,IAAQvH,CAAR;AACAuH,UAAAA,CAAC,CAAC,CAAD,CAAD,IAAQ3H,CAAR;AACA2H,UAAAA,CAAC,CAAC,EAAD,CAAD,IAASvH,CAAT;AACAuH,UAAAA,CAAC,CAAC,EAAD,CAAD,IAAS3H,CAAT;AACA2H,UAAAA,CAAC,CAAC,EAAD,CAAD,IAASvH,CAAT;AACAuH,UAAAA,CAAC,CAAC,EAAD,CAAD,IAAS3H,CAAT;AACA2H,UAAAA,CAAC,CAAC,EAAD,CAAD,IAASvH,CAAT;AACAuH,UAAAA,CAAC,CAAC,EAAD,CAAD,IAAS3H,CAAT;AACA2H,UAAAA,CAAC,CAAC,EAAD,CAAD,IAASvH,CAAT;AACAuH,UAAAA,CAAC,CAAC,EAAD,CAAD,IAAS3H,CAAT;AACAI,UAAAA,CAAC,GAAGqa,EAAE,IAAKN,EAAE,IAAI,CAAP,GAAaC,EAAE,KAAK,EAAxB,CAAN;AACApa,UAAAA,CAAC,GAAG0a,EAAE,IAAKN,EAAE,IAAI,CAAP,GAAaD,EAAE,KAAK,EAAxB,CAAN;AACAxS,UAAAA,CAAC,CAAC,CAAD,CAAD,IAAQvH,CAAR;AACAuH,UAAAA,CAAC,CAAC,CAAD,CAAD,IAAQ3H,CAAR;AACA2H,UAAAA,CAAC,CAAC,EAAD,CAAD,IAASvH,CAAT;AACAuH,UAAAA,CAAC,CAAC,EAAD,CAAD,IAAS3H,CAAT;AACA2H,UAAAA,CAAC,CAAC,EAAD,CAAD,IAASvH,CAAT;AACAuH,UAAAA,CAAC,CAAC,EAAD,CAAD,IAAS3H,CAAT;AACA2H,UAAAA,CAAC,CAAC,EAAD,CAAD,IAASvH,CAAT;AACAuH,UAAAA,CAAC,CAAC,EAAD,CAAD,IAAS3H,CAAT;AACA2H,UAAAA,CAAC,CAAC,EAAD,CAAD,IAASvH,CAAT;AACAuH,UAAAA,CAAC,CAAC,EAAD,CAAD,IAAS3H,CAAT;AAEA0Q,UAAAA,EAAE,GAAG/I,CAAC,CAAC,CAAD,CAAN;AACAgJ,UAAAA,EAAE,GAAGhJ,CAAC,CAAC,CAAD,CAAN;AACAgV,UAAAA,GAAG,GAAIhV,CAAC,CAAC,EAAD,CAAD,IAAS,CAAV,GAAgBA,CAAC,CAAC,EAAD,CAAD,KAAU,EAAhC;AACAiV,UAAAA,GAAG,GAAIjV,CAAC,CAAC,EAAD,CAAD,IAAS,CAAV,GAAgBA,CAAC,CAAC,EAAD,CAAD,KAAU,EAAhC;AACA8T,UAAAA,GAAG,GAAI9T,CAAC,CAAC,EAAD,CAAD,IAAS,CAAV,GAAgBA,CAAC,CAAC,EAAD,CAAD,KAAU,EAAhC;AACA+T,UAAAA,GAAG,GAAI/T,CAAC,CAAC,EAAD,CAAD,IAAS,CAAV,GAAgBA,CAAC,CAAC,EAAD,CAAD,KAAU,EAAhC;AACA8V,UAAAA,GAAG,GAAI9V,CAAC,CAAC,EAAD,CAAD,IAAS,CAAV,GAAgBA,CAAC,CAAC,EAAD,CAAD,KAAU,EAAhC;AACA+V,UAAAA,GAAG,GAAI/V,CAAC,CAAC,EAAD,CAAD,IAAS,CAAV,GAAgBA,CAAC,CAAC,EAAD,CAAD,KAAU,EAAhC;AACA4U,UAAAA,GAAG,GAAI5U,CAAC,CAAC,EAAD,CAAD,IAAS,EAAV,GAAiBA,CAAC,CAAC,EAAD,CAAD,KAAU,EAAjC;AACA6U,UAAAA,GAAG,GAAI7U,CAAC,CAAC,EAAD,CAAD,IAAS,EAAV,GAAiBA,CAAC,CAAC,EAAD,CAAD,KAAU,EAAjC;AACAoU,UAAAA,GAAG,GAAIpU,CAAC,CAAC,CAAD,CAAD,IAAQ,CAAT,GAAeA,CAAC,CAAC,CAAD,CAAD,KAAS,EAA9B;AACAqU,UAAAA,GAAG,GAAIrU,CAAC,CAAC,CAAD,CAAD,IAAQ,CAAT,GAAeA,CAAC,CAAC,CAAD,CAAD,KAAS,EAA9B;AACAkT,UAAAA,EAAE,GAAIlT,CAAC,CAAC,EAAD,CAAD,IAAS,EAAV,GAAiBA,CAAC,CAAC,EAAD,CAAD,KAAU,EAAhC;AACAmT,UAAAA,EAAE,GAAInT,CAAC,CAAC,EAAD,CAAD,IAAS,EAAV,GAAiBA,CAAC,CAAC,EAAD,CAAD,KAAU,EAAhC;AACAkV,UAAAA,GAAG,GAAIlV,CAAC,CAAC,EAAD,CAAD,IAAS,EAAV,GAAiBA,CAAC,CAAC,EAAD,CAAD,KAAU,EAAjC;AACAmV,UAAAA,GAAG,GAAInV,CAAC,CAAC,EAAD,CAAD,IAAS,EAAV,GAAiBA,CAAC,CAAC,EAAD,CAAD,KAAU,EAAjC;AACAgU,UAAAA,GAAG,GAAIhU,CAAC,CAAC,EAAD,CAAD,IAAS,EAAV,GAAiBA,CAAC,CAAC,EAAD,CAAD,KAAU,EAAjC;AACAiU,UAAAA,GAAG,GAAIjU,CAAC,CAAC,EAAD,CAAD,IAAS,EAAV,GAAiBA,CAAC,CAAC,EAAD,CAAD,KAAU,EAAjC;AACAgW,UAAAA,GAAG,GAAIhW,CAAC,CAAC,EAAD,CAAD,IAAS,CAAV,GAAgBA,CAAC,CAAC,EAAD,CAAD,KAAU,EAAhC;AACAiW,UAAAA,GAAG,GAAIjW,CAAC,CAAC,EAAD,CAAD,IAAS,CAAV,GAAgBA,CAAC,CAAC,EAAD,CAAD,KAAU,EAAhC;AACAwV,UAAAA,GAAG,GAAIxV,CAAC,CAAC,CAAD,CAAD,IAAQ,EAAT,GAAgBA,CAAC,CAAC,CAAD,CAAD,KAAS,CAA/B;AACAyV,UAAAA,GAAG,GAAIzV,CAAC,CAAC,CAAD,CAAD,IAAQ,EAAT,GAAgBA,CAAC,CAAC,CAAD,CAAD,KAAS,CAA/B;AACAsU,UAAAA,GAAG,GAAItU,CAAC,CAAC,EAAD,CAAD,IAAS,CAAV,GAAgBA,CAAC,CAAC,EAAD,CAAD,KAAU,EAAhC;AACAuU,UAAAA,GAAG,GAAIvU,CAAC,CAAC,EAAD,CAAD,IAAS,CAAV,GAAgBA,CAAC,CAAC,EAAD,CAAD,KAAU,EAAhC;AACAoT,UAAAA,EAAE,GAAIpT,CAAC,CAAC,EAAD,CAAD,IAAS,EAAV,GAAiBA,CAAC,CAAC,EAAD,CAAD,KAAU,EAAhC;AACAqT,UAAAA,EAAE,GAAIrT,CAAC,CAAC,EAAD,CAAD,IAAS,EAAV,GAAiBA,CAAC,CAAC,EAAD,CAAD,KAAU,EAAhC;AACAoV,UAAAA,GAAG,GAAIpV,CAAC,CAAC,EAAD,CAAD,IAAS,EAAV,GAAiBA,CAAC,CAAC,EAAD,CAAD,KAAU,EAAjC;AACAqV,UAAAA,GAAG,GAAIrV,CAAC,CAAC,EAAD,CAAD,IAAS,EAAV,GAAiBA,CAAC,CAAC,EAAD,CAAD,KAAU,EAAjC;AACAkU,UAAAA,GAAG,GAAIlU,CAAC,CAAC,EAAD,CAAD,IAAS,EAAV,GAAiBA,CAAC,CAAC,EAAD,CAAD,KAAU,CAAjC;AACAmU,UAAAA,GAAG,GAAInU,CAAC,CAAC,EAAD,CAAD,IAAS,EAAV,GAAiBA,CAAC,CAAC,EAAD,CAAD,KAAU,CAAjC;AACA0T,UAAAA,GAAG,GAAI1T,CAAC,CAAC,CAAD,CAAD,IAAQ,EAAT,GAAgBA,CAAC,CAAC,CAAD,CAAD,KAAS,CAA/B;AACA2T,UAAAA,GAAG,GAAI3T,CAAC,CAAC,CAAD,CAAD,IAAQ,EAAT,GAAgBA,CAAC,CAAC,CAAD,CAAD,KAAS,CAA/B;AACA0V,UAAAA,GAAG,GAAI1V,CAAC,CAAC,EAAD,CAAD,IAAS,EAAV,GAAiBA,CAAC,CAAC,EAAD,CAAD,KAAU,CAAjC;AACA2V,UAAAA,GAAG,GAAI3V,CAAC,CAAC,EAAD,CAAD,IAAS,EAAV,GAAiBA,CAAC,CAAC,EAAD,CAAD,KAAU,CAAjC;AACAwU,UAAAA,GAAG,GAAIxU,CAAC,CAAC,EAAD,CAAD,IAAS,EAAV,GAAiBA,CAAC,CAAC,EAAD,CAAD,KAAU,CAAjC;AACAyU,UAAAA,GAAG,GAAIzU,CAAC,CAAC,EAAD,CAAD,IAAS,EAAV,GAAiBA,CAAC,CAAC,EAAD,CAAD,KAAU,CAAjC;AACAsT,UAAAA,EAAE,GAAItT,CAAC,CAAC,EAAD,CAAD,IAAS,EAAV,GAAiBA,CAAC,CAAC,EAAD,CAAD,KAAU,EAAhC;AACAuT,UAAAA,EAAE,GAAIvT,CAAC,CAAC,EAAD,CAAD,IAAS,EAAV,GAAiBA,CAAC,CAAC,EAAD,CAAD,KAAU,EAAhC;AACAsV,UAAAA,GAAG,GAAItV,CAAC,CAAC,EAAD,CAAD,IAAS,EAAV,GAAiBA,CAAC,CAAC,EAAD,CAAD,KAAU,CAAjC;AACAuV,UAAAA,GAAG,GAAIvV,CAAC,CAAC,EAAD,CAAD,IAAS,EAAV,GAAiBA,CAAC,CAAC,EAAD,CAAD,KAAU,CAAjC;AACA8U,UAAAA,GAAG,GAAI9U,CAAC,CAAC,CAAD,CAAD,IAAQ,EAAT,GAAgBA,CAAC,CAAC,CAAD,CAAD,KAAS,CAA/B;AACA+U,UAAAA,GAAG,GAAI/U,CAAC,CAAC,CAAD,CAAD,IAAQ,EAAT,GAAgBA,CAAC,CAAC,CAAD,CAAD,KAAS,CAA/B;AACA4T,UAAAA,GAAG,GAAI5T,CAAC,CAAC,EAAD,CAAD,IAAS,EAAV,GAAiBA,CAAC,CAAC,EAAD,CAAD,KAAU,EAAjC;AACA6T,UAAAA,GAAG,GAAI7T,CAAC,CAAC,EAAD,CAAD,IAAS,EAAV,GAAiBA,CAAC,CAAC,EAAD,CAAD,KAAU,EAAjC;AACA4V,UAAAA,GAAG,GAAI5V,CAAC,CAAC,EAAD,CAAD,IAAS,CAAV,GAAgBA,CAAC,CAAC,EAAD,CAAD,KAAU,EAAhC;AACA6V,UAAAA,GAAG,GAAI7V,CAAC,CAAC,EAAD,CAAD,IAAS,CAAV,GAAgBA,CAAC,CAAC,EAAD,CAAD,KAAU,EAAhC;AACA0U,UAAAA,GAAG,GAAI1U,CAAC,CAAC,EAAD,CAAD,IAAS,CAAV,GAAgBA,CAAC,CAAC,EAAD,CAAD,KAAU,EAAhC;AACA2U,UAAAA,GAAG,GAAI3U,CAAC,CAAC,EAAD,CAAD,IAAS,CAAV,GAAgBA,CAAC,CAAC,EAAD,CAAD,KAAU,EAAhC;AACAwT,UAAAA,EAAE,GAAIxT,CAAC,CAAC,EAAD,CAAD,IAAS,EAAV,GAAiBA,CAAC,CAAC,EAAD,CAAD,KAAU,EAAhC;AACAyT,UAAAA,EAAE,GAAIzT,CAAC,CAAC,EAAD,CAAD,IAAS,EAAV,GAAiBA,CAAC,CAAC,EAAD,CAAD,KAAU,EAAhC;AAEAA,UAAAA,CAAC,CAAC,CAAD,CAAD,GAAO+I,EAAE,GAAI,CAACmK,EAAD,GAAME,EAAnB;AACApT,UAAAA,CAAC,CAAC,CAAD,CAAD,GAAOgJ,EAAE,GAAI,CAACmK,EAAD,GAAME,EAAnB;AACArT,UAAAA,CAAC,CAAC,EAAD,CAAD,GAAQ0T,GAAG,GAAI,CAACE,GAAD,GAAOE,GAAtB;AACA9T,UAAAA,CAAC,CAAC,EAAD,CAAD,GAAQ2T,GAAG,GAAI,CAACE,GAAD,GAAOE,GAAtB;AACA/T,UAAAA,CAAC,CAAC,EAAD,CAAD,GAAQoU,GAAG,GAAI,CAACE,GAAD,GAAOE,GAAtB;AACAxU,UAAAA,CAAC,CAAC,EAAD,CAAD,GAAQqU,GAAG,GAAI,CAACE,GAAD,GAAOE,GAAtB;AACAzU,UAAAA,CAAC,CAAC,EAAD,CAAD,GAAQ8U,GAAG,GAAI,CAACE,GAAD,GAAOE,GAAtB;AACAlV,UAAAA,CAAC,CAAC,EAAD,CAAD,GAAQ+U,GAAG,GAAI,CAACE,GAAD,GAAOE,GAAtB;AACAnV,UAAAA,CAAC,CAAC,EAAD,CAAD,GAAQwV,GAAG,GAAI,CAACE,GAAD,GAAOE,GAAtB;AACA5V,UAAAA,CAAC,CAAC,EAAD,CAAD,GAAQyV,GAAG,GAAI,CAACE,GAAD,GAAOE,GAAtB;AACA7V,UAAAA,CAAC,CAAC,CAAD,CAAD,GAAOkT,EAAE,GAAI,CAACE,EAAD,GAAME,EAAnB;AACAtT,UAAAA,CAAC,CAAC,CAAD,CAAD,GAAOmT,EAAE,GAAI,CAACE,EAAD,GAAME,EAAnB;AACAvT,UAAAA,CAAC,CAAC,EAAD,CAAD,GAAQ4T,GAAG,GAAI,CAACE,GAAD,GAAOE,GAAtB;AACAhU,UAAAA,CAAC,CAAC,EAAD,CAAD,GAAQ6T,GAAG,GAAI,CAACE,GAAD,GAAOE,GAAtB;AACAjU,UAAAA,CAAC,CAAC,EAAD,CAAD,GAAQsU,GAAG,GAAI,CAACE,GAAD,GAAOE,GAAtB;AACA1U,UAAAA,CAAC,CAAC,EAAD,CAAD,GAAQuU,GAAG,GAAI,CAACE,GAAD,GAAOE,GAAtB;AACA3U,UAAAA,CAAC,CAAC,EAAD,CAAD,GAAQgV,GAAG,GAAI,CAACE,GAAD,GAAOE,GAAtB;AACApV,UAAAA,CAAC,CAAC,EAAD,CAAD,GAAQiV,GAAG,GAAI,CAACE,GAAD,GAAOE,GAAtB;AACArV,UAAAA,CAAC,CAAC,EAAD,CAAD,GAAQ0V,GAAG,GAAI,CAACE,GAAD,GAAOE,GAAtB;AACA9V,UAAAA,CAAC,CAAC,EAAD,CAAD,GAAQ2V,GAAG,GAAI,CAACE,GAAD,GAAOE,GAAtB;AACA/V,UAAAA,CAAC,CAAC,CAAD,CAAD,GAAOoT,EAAE,GAAI,CAACE,EAAD,GAAME,EAAnB;AACAxT,UAAAA,CAAC,CAAC,CAAD,CAAD,GAAOqT,EAAE,GAAI,CAACE,EAAD,GAAME,EAAnB;AACAzT,UAAAA,CAAC,CAAC,EAAD,CAAD,GAAQ8T,GAAG,GAAI,CAACE,GAAD,GAAOE,GAAtB;AACAlU,UAAAA,CAAC,CAAC,EAAD,CAAD,GAAQ+T,GAAG,GAAI,CAACE,GAAD,GAAOE,GAAtB;AACAnU,UAAAA,CAAC,CAAC,EAAD,CAAD,GAAQwU,GAAG,GAAI,CAACE,GAAD,GAAOE,GAAtB;AACA5U,UAAAA,CAAC,CAAC,EAAD,CAAD,GAAQyU,GAAG,GAAI,CAACE,GAAD,GAAOE,GAAtB;AACA7U,UAAAA,CAAC,CAAC,EAAD,CAAD,GAAQkV,GAAG,GAAI,CAACE,GAAD,GAAOE,GAAtB;AACAtV,UAAAA,CAAC,CAAC,EAAD,CAAD,GAAQmV,GAAG,GAAI,CAACE,GAAD,GAAOE,GAAtB;AACAvV,UAAAA,CAAC,CAAC,EAAD,CAAD,GAAQ4V,GAAG,GAAI,CAACE,GAAD,GAAOE,GAAtB;AACAhW,UAAAA,CAAC,CAAC,EAAD,CAAD,GAAQ6V,GAAG,GAAI,CAACE,GAAD,GAAOE,GAAtB;AACAjW,UAAAA,CAAC,CAAC,CAAD,CAAD,GAAOsT,EAAE,GAAI,CAACE,EAAD,GAAMzK,EAAnB;AACA/I,UAAAA,CAAC,CAAC,CAAD,CAAD,GAAOuT,EAAE,GAAI,CAACE,EAAD,GAAMzK,EAAnB;AACAhJ,UAAAA,CAAC,CAAC,EAAD,CAAD,GAAQgU,GAAG,GAAI,CAACE,GAAD,GAAOR,GAAtB;AACA1T,UAAAA,CAAC,CAAC,EAAD,CAAD,GAAQiU,GAAG,GAAI,CAACE,GAAD,GAAOR,GAAtB;AACA3T,UAAAA,CAAC,CAAC,EAAD,CAAD,GAAQ0U,GAAG,GAAI,CAACE,GAAD,GAAOR,GAAtB;AACApU,UAAAA,CAAC,CAAC,EAAD,CAAD,GAAQ2U,GAAG,GAAI,CAACE,GAAD,GAAOR,GAAtB;AACArU,UAAAA,CAAC,CAAC,EAAD,CAAD,GAAQoV,GAAG,GAAI,CAACE,GAAD,GAAOR,GAAtB;AACA9U,UAAAA,CAAC,CAAC,EAAD,CAAD,GAAQqV,GAAG,GAAI,CAACE,GAAD,GAAOR,GAAtB;AACA/U,UAAAA,CAAC,CAAC,EAAD,CAAD,GAAQ8V,GAAG,GAAI,CAACE,GAAD,GAAOR,GAAtB;AACAxV,UAAAA,CAAC,CAAC,EAAD,CAAD,GAAQ+V,GAAG,GAAI,CAACE,GAAD,GAAOR,GAAtB;AACAzV,UAAAA,CAAC,CAAC,CAAD,CAAD,GAAOwT,EAAE,GAAI,CAACzK,EAAD,GAAMmK,EAAnB;AACAlT,UAAAA,CAAC,CAAC,CAAD,CAAD,GAAOyT,EAAE,GAAI,CAACzK,EAAD,GAAMmK,EAAnB;AACAnT,UAAAA,CAAC,CAAC,EAAD,CAAD,GAAQkU,GAAG,GAAI,CAACR,GAAD,GAAOE,GAAtB;AACA5T,UAAAA,CAAC,CAAC,EAAD,CAAD,GAAQmU,GAAG,GAAI,CAACR,GAAD,GAAOE,GAAtB;AACA7T,UAAAA,CAAC,CAAC,EAAD,CAAD,GAAQ4U,GAAG,GAAI,CAACR,GAAD,GAAOE,GAAtB;AACAtU,UAAAA,CAAC,CAAC,EAAD,CAAD,GAAQ6U,GAAG,GAAI,CAACR,GAAD,GAAOE,GAAtB;AACAvU,UAAAA,CAAC,CAAC,EAAD,CAAD,GAAQsV,GAAG,GAAI,CAACR,GAAD,GAAOE,GAAtB;AACAhV,UAAAA,CAAC,CAAC,EAAD,CAAD,GAAQuV,GAAG,GAAI,CAACR,GAAD,GAAOE,GAAtB;AACAjV,UAAAA,CAAC,CAAC,EAAD,CAAD,GAAQgW,GAAG,GAAI,CAACR,GAAD,GAAOE,GAAtB;AACA1V,UAAAA,CAAC,CAAC,EAAD,CAAD,GAAQiW,GAAG,GAAI,CAACR,GAAD,GAAOE,GAAtB;AAEA3V,UAAAA,CAAC,CAAC,CAAD,CAAD,IAAQkP,EAAE,CAACva,CAAD,CAAV;AACAqL,UAAAA,CAAC,CAAC,CAAD,CAAD,IAAQkP,EAAE,CAACva,CAAC,GAAG,CAAL,CAAV;AACH;AACJ,OAvLD;;AAyLAe,MAAAA,MAAM,CAACH,OAAP,GAAiB6a,OAAjB;AAEC,KAloBD,EAkoBG5a,IAloBH,CAkoBQ,IAloBR,EAkoBaP,OAAO,CAAC,UAAD,CAloBpB,EAkoBiC,OAAO6Y,MAAP,KAAkB,WAAlB,GAAgCA,MAAhC,GAAyC,OAAOO,IAAP,KAAgB,WAAhB,GAA8BA,IAA9B,GAAqC,OAAOJ,MAAP,KAAkB,WAAlB,GAAgCA,MAAhC,GAAyC,EAloBxJ;AAmoBC,GApoBoB,EAooBnB;AAAC,gBAAW;AAAZ,GApoBmB,CAlqFqb;AAsyGvb,MAAG,CAAC,UAAShZ,OAAT,EAAiBS,MAAjB,EAAwBH,OAAxB,EAAgC;AACvD,QAAIsG,KAAK,GAAG5G,OAAO,CAAC,kBAAD,CAAnB;;AACA,QAAIgS,QAAQ,GAAGhS,OAAO,CAAC,YAAD,CAAtB;;AACA,QAAIihB,SAAS,GAAGjhB,OAAO,CAAC,QAAD,CAAP,CAAkB,WAAlB,CAAhB;;AACA,QAAIkhB,OAAO,GAAGlhB,OAAO,CAAC,WAAD,CAArB;;AAEA,aAASmhB,WAAT,CAAsBC,MAAtB,EAA8B;AAC1B,UAAI7K,GAAG,GAAG/U,IAAI,CAAC6f,KAAL,CAAWD,MAAX,EAAmBnV,QAAnB,CAA4B,EAA5B,CAAV;;AACA,UAAGsK,GAAG,CAAC/V,MAAJ,KAAe,CAAlB,EAAqB;AACjB+V,QAAAA,GAAG,GAAG,MAAMA,GAAZ;AACH;;AACD,aAAOA,GAAP;AACH;;AAED,aAAS+K,UAAT,CAAoBC,SAApB,EAA+B;AAC3B,UAAIlP,GAAG,GAAG,EAAV;;AACA,WAAK,IAAIxS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG0hB,SAAS,CAAC/gB,MAA9B,EAAsCX,CAAC,IAAI,CAA3C,EAA8C;AAC1CwS,QAAAA,GAAG,CAACnO,IAAJ,CAASH,QAAQ,CAACwd,SAAS,CAAC9b,MAAV,CAAiB5F,CAAjB,EAAoB,CAApB,CAAD,EAAyB,EAAzB,CAAjB;AACH;;AAED,aAAO,IAAIkB,UAAJ,CAAesR,GAAf,CAAP;AACH;;AAED5R,IAAAA,MAAM,CAACH,OAAP,GAAiB;AACbmI,MAAAA,KAAK,EAAE,UAAU+Y,YAAV,EAAwB;AAC3B,YAAIjL,GAAG,GAAG,EAAV;;AACA,aAAI,IAAI1W,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG2hB,YAAY,CAAChhB,MAAhC,EAAwCX,CAAC,EAAzC,EAA6C;AACzC0W,UAAAA,GAAG,IAAI4K,WAAW,CAACK,YAAY,CAAC3hB,CAAD,CAAb,CAAlB;AACH;;AACD,eAAO0W,GAAP;AACH,OAPY;AAQbkL,MAAAA,MAAM,EAAE,UAAUF,SAAV,EAAqB;AACzB,YAAIG,GAAG,GAAG,IAAI9a,KAAJ,CAAU,SAAV,EAAqB,KAArB,CAAV;AACA8a,QAAAA,GAAG,CAACld,MAAJ,CAAW+c,SAAX;AACA,eAAOG,GAAG,CAACjd,OAAJ,CAAY,KAAZ,CAAP;AACH,OAZY;AAab0D,MAAAA,cAAc,EAAE,UAAUF,OAAV,EAAmB;AAC/B,eAAO,KAAKwZ,MAAL,CAAY,KAAKA,MAAL,CAAYxZ,OAAZ,CAAZ,EAAkCxC,MAAlC,CAAyC,CAAzC,EAA4C,CAA5C,CAAP;AACH,OAfY;AAgBbkc,MAAAA,QAAQ,EAAE,UAAUJ,SAAV,EAAqB;AAC3B,eAAO,IAAIvP,QAAJ,GAAexN,MAAf,CAAsB+c,SAAtB,EAAiC,KAAjC,EAAwC9N,MAAxC,CAA+C,KAA/C,CAAP;AACH,OAlBY;AAmBbvL,MAAAA,gBAAgB,EAAE,UAAUD,OAAV,EAAmB;AACjC,eAAO,KAAK0Z,QAAL,CAAc,KAAKA,QAAL,CAAc1Z,OAAd,CAAd,EAAsCxC,MAAtC,CAA6C,CAA7C,EAAgD,CAAhD,CAAP;AACH,OArBY;AAsBbmc,MAAAA,OAAO,EAAE,UAAUL,SAAV,EAAqBnM,MAArB,EAA6B;AAClC,eAAO,IAAI8L,OAAJ,CAAY9L,MAAZ,EAAoB5Q,MAApB,CAA2B8c,UAAU,CAACC,SAAD,CAArC,EAAkD9N,MAAlD,CAAyD,KAAzD,CAAP;AACH,OAxBY;AAyBbwN,MAAAA,SAAS,EAAE,UAAUM,SAAV,EAAqB;AAC5B,eAAON,SAAS,CAACM,SAAD,CAAhB;AACH,OA3BY;AA4BbM,MAAAA,iBAAiB,EAAE,UAAU5Z,OAAV,EAAmB;AAClC,eAAOgZ,SAAS,CAAChZ,OAAD,CAAT,CAAmBgE,QAAnB,GAA8BxG,MAA9B,CAAqC,CAArC,EAAwC,CAAxC,CAAP;AACH;AA9BY,KAAjB;AAiCC,GAxDqB,EAwDpB;AAAC,kBAAa,CAAd;AAAgB,iBAAY,CAA5B;AAA8B,cAAS,EAAvC;AAA0C,wBAAmB;AAA7D,GAxDoB,CAtyGob;AA81GvY,MAAG,CAAC,UAASzF,OAAT,EAAiBS,MAAjB,EAAwBH,OAAxB,EAAgC;AACvG,QAAIwhB,YAAY,GAAG9hB,OAAO,CAAC,oBAAD,CAA1B;;AACA,QAAI+hB,YAAY,GAAG/hB,OAAO,CAAC,sBAAD,CAA1B;;AACA,QAAIgiB,YAAY,GAAGhiB,OAAO,CAAC,qBAAD,CAA1B;;AACA,QAAIiiB,YAAY,GAAGjiB,OAAO,CAAC,oBAAD,CAA1B;;AACA,QAAIkiB,aAAa,GAAGliB,OAAO,CAAC,kBAAD,CAA3B,CALuG,CAOvG;;;AACA,QAAImiB,UAAU,GAAG,CAAC;AACdnG,MAAAA,IAAI,EAAE,SADQ;AAEdoG,MAAAA,MAAM,EAAE,KAFM;AAGdpZ,MAAAA,YAAY,EAAE;AAACC,QAAAA,IAAI,EAAE,CAAC,IAAD,EAAO,IAAP,CAAP;AAAqBE,QAAAA,OAAO,EAAE,CAAC,IAAD,EAAO,IAAP;AAA9B,OAHA;AAIdkZ,MAAAA,SAAS,EAAEL;AAJG,KAAD,EAKf;AACEhG,MAAAA,IAAI,EAAE,aADR;AAEEoG,MAAAA,MAAM,EAAE,KAFV;AAGEpZ,MAAAA,YAAY,EAAE;AAACC,QAAAA,IAAI,EAAE,CAAC,IAAD,EAAO,IAAP,CAAP;AAAqBE,QAAAA,OAAO,EAAE,CAAC,IAAD,EAAO,IAAP;AAA9B,OAHhB;AAIEkZ,MAAAA,SAAS,EAAEL;AAJb,KALe,EAUf;AACEhG,MAAAA,IAAI,EAAE,UADR;AAEEoG,MAAAA,MAAM,EAAE,KAFV;AAGEpZ,MAAAA,YAAY,EAAE;AAACC,QAAAA,IAAI,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,CAAP;AAA2BE,QAAAA,OAAO,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb;AAApC,OAHhB;AAIEkZ,MAAAA,SAAS,EAAEL;AAJb,KAVe,EAef;AACEhG,MAAAA,IAAI,EAAE,UADR;AAEEoG,MAAAA,MAAM,EAAE,KAFV;AAGEpZ,MAAAA,YAAY,EAAE;AAACC,QAAAA,IAAI,EAAE,CAAC,IAAD,EAAO,IAAP,CAAP;AAAqBE,QAAAA,OAAO,EAAE,CAAC,IAAD,EAAO,IAAP;AAA9B,OAHhB;AAIEkZ,MAAAA,SAAS,EAAEL;AAJb,KAfe,EAoBf;AACEhG,MAAAA,IAAI,EAAE,UADR;AAEEoG,MAAAA,MAAM,EAAE,MAFV;AAGEpZ,MAAAA,YAAY,EAAE;AAACC,QAAAA,IAAI,EAAE,CAAC,IAAD,EAAO,IAAP,CAAP;AAAqBE,QAAAA,OAAO,EAAE,CAAC,IAAD,EAAO,IAAP;AAA9B,OAHhB;AAIEkZ,MAAAA,SAAS,EAAEL;AAJb,KApBe,EAyBf;AACEhG,MAAAA,IAAI,EAAE,YADR;AAEEoG,MAAAA,MAAM,EAAE,KAFV;AAGEpZ,MAAAA,YAAY,EAAE;AAACC,QAAAA,IAAI,EAAE,CAAC,IAAD,EAAO,IAAP,CAAP;AAAqBE,QAAAA,OAAO,EAAE,CAAC,IAAD,EAAO,IAAP;AAA9B,OAHhB;AAIEkZ,MAAAA,SAAS,EAAEL;AAJb,KAzBe,EA8Bf;AACEhG,MAAAA,IAAI,EAAE,UADR;AAEEoG,MAAAA,MAAM,EAAE,KAFV;AAGEpZ,MAAAA,YAAY,EAAE;AAACC,QAAAA,IAAI,EAAE,CAAC,IAAD,EAAO,IAAP,CAAP;AAAqBE,QAAAA,OAAO,EAAE,CAAC,IAAD,EAAO,IAAP;AAA9B,OAHhB;AAIEkZ,MAAAA,SAAS,EAAEL;AAJb,KA9Be,EAmCf;AACEhG,MAAAA,IAAI,EAAE,aADR;AAEEoG,MAAAA,MAAM,EAAE,KAFV;AAGEpZ,MAAAA,YAAY,EAAE;AAACC,QAAAA,IAAI,EAAE,CAAC,IAAD,EAAO,IAAP,CAAP;AAAqBE,QAAAA,OAAO,EAAE,CAAC,IAAD,EAAO,IAAP;AAA9B,OAHhB;AAIEkZ,MAAAA,SAAS,EAAEL;AAJb,KAnCe,EAwCf;AACEhG,MAAAA,IAAI,EAAE,UADR;AAEEoG,MAAAA,MAAM,EAAE,KAFV;AAGEpZ,MAAAA,YAAY,EAAE;AAACC,QAAAA,IAAI,EAAE,CAAC,IAAD,EAAO,IAAP,CAAP;AAAqBE,QAAAA,OAAO,EAAE,CAAC,IAAD,EAAO,IAAP;AAA9B,OAHhB;AAIEkZ,MAAAA,SAAS,EAAEL;AAJb,KAxCe,EA6Cf;AACEhG,MAAAA,IAAI,EAAE,WADR;AAEEoG,MAAAA,MAAM,EAAE,KAFV;AAGEpZ,MAAAA,YAAY,EAAE;AAACC,QAAAA,IAAI,EAAE,CAAC,IAAD,EAAO,IAAP,CAAP;AAAqBE,QAAAA,OAAO,EAAE,CAAC,IAAD,EAAO,IAAP;AAA9B,OAHhB;AAIEkZ,MAAAA,SAAS,EAAEL;AAJb,KA7Ce,EAkDf;AACEhG,MAAAA,IAAI,EAAE,YADR;AAEEoG,MAAAA,MAAM,EAAE,KAFV;AAGEpZ,MAAAA,YAAY,EAAE;AAACC,QAAAA,IAAI,EAAE,CAAC,IAAD,EAAO,IAAP,CAAP;AAAqBE,QAAAA,OAAO,EAAE,CAAC,IAAD,EAAO,IAAP;AAA9B,OAHhB;AAIEkZ,MAAAA,SAAS,EAAEL;AAJb,KAlDe,EAuDf;AACEhG,MAAAA,IAAI,EAAE,UADR;AAEEoG,MAAAA,MAAM,EAAE,KAFV;AAGEpZ,MAAAA,YAAY,EAAE;AAACC,QAAAA,IAAI,EAAE,CAAC,IAAD,CAAP;AAAeE,QAAAA,OAAO,EAAE;AAAxB,OAHhB;AAIEkZ,MAAAA,SAAS,EAAEL;AAJb,KAvDe,EA4Df;AACEhG,MAAAA,IAAI,EAAE,SADR;AAEEoG,MAAAA,MAAM,EAAE,KAFV;AAGEpZ,MAAAA,YAAY,EAAE;AAACC,QAAAA,IAAI,EAAE,CAAC,IAAD,EAAO,IAAP,CAAP;AAAqBE,QAAAA,OAAO,EAAE,CAAC,IAAD,EAAO,IAAP;AAA9B,OAHhB;AAIEkZ,MAAAA,SAAS,EAAEL;AAJb,KA5De,EAiEf;AACEhG,MAAAA,IAAI,EAAE,WADR;AAEEoG,MAAAA,MAAM,EAAE,MAFV;AAGEpZ,MAAAA,YAAY,EAAE;AAACC,QAAAA,IAAI,EAAE,CAAC,IAAD,EAAO,IAAP,CAAP;AAAqBE,QAAAA,OAAO,EAAE,CAAC,IAAD,EAAO,IAAP;AAA9B,OAHhB;AAIEkZ,MAAAA,SAAS,EAAEL;AAJb,KAjEe,EAsEf;AACEhG,MAAAA,IAAI,EAAE,UADR;AAEEoG,MAAAA,MAAM,EAAE,KAFV;AAGEpZ,MAAAA,YAAY,EAAE;AAACC,QAAAA,IAAI,EAAE,CAAC,IAAD,EAAO,IAAP,CAAP;AAAqBE,QAAAA,OAAO,EAAE,CAAC,IAAD,EAAO,IAAP;AAA9B,OAHhB;AAIEE,MAAAA,SAAS,EAAE,KAJb;AAKEgZ,MAAAA,SAAS,EAAEL;AALb,KAtEe,EA4Ef;AACEhG,MAAAA,IAAI,EAAE,aADR;AAEEoG,MAAAA,MAAM,EAAE,KAFV;AAGEpZ,MAAAA,YAAY,EAAE;AAACC,QAAAA,IAAI,EAAE,CAAC,IAAD,EAAO,IAAP,CAAP;AAAqBE,QAAAA,OAAO,EAAE,CAAC,IAAD,EAAO,IAAP;AAA9B,OAHhB;AAIEkZ,MAAAA,SAAS,EAAEL;AAJb,KA5Ee,EAiFf;AACEhG,MAAAA,IAAI,EAAE,QADR;AAEEoG,MAAAA,MAAM,EAAE,KAFV;AAGEpZ,MAAAA,YAAY,EAAE;AAACC,QAAAA,IAAI,EAAE,CAAC,IAAD,EAAO,IAAP,CAAP;AAAqBE,QAAAA,OAAO,EAAE,CAAC,GAAD,EAAK,GAAL;AAA9B,OAHhB;AAIEkZ,MAAAA,SAAS,EAAEL;AAJb,KAjFe,EAsFf;AACEhG,MAAAA,IAAI,EAAE,UADR;AAEEoG,MAAAA,MAAM,EAAE,MAFV;AAGE9Z,MAAAA,cAAc,EAAE,EAHlB;AAIEU,MAAAA,YAAY,EAAE;AAACC,QAAAA,IAAI,EAAE,CAAC,MAAD,EAAQ,MAAR,CAAP;AAAwBE,QAAAA,OAAO,EAAE,CAAC,MAAD,EAAS,MAAT;AAAjC,OAJhB;AAKEkZ,MAAAA,SAAS,EAAEL;AALb,KAtFe,EA4Ff;AACEhG,MAAAA,IAAI,EAAE,gBADR;AAEEoG,MAAAA,MAAM,EAAE,MAFV;AAGE9Z,MAAAA,cAAc,EAAE,EAHlB;AAIEU,MAAAA,YAAY,EAAE;AAACC,QAAAA,IAAI,EAAE,CAAC,MAAD,EAAQ,MAAR,CAAP;AAAwBE,QAAAA,OAAO,EAAE,CAAC,MAAD,EAAS,MAAT;AAAjC,OAJhB;AAKEkZ,MAAAA,SAAS,EAAEL;AALb,KA5Fe,EAkGf;AACEhG,MAAAA,IAAI,EAAE,MADR;AAEEoG,MAAAA,MAAM,EAAE,MAFV;AAGE9Z,MAAAA,cAAc,EAAE,EAHlB;AAIEU,MAAAA,YAAY,EAAE;AAACC,QAAAA,IAAI,EAAE,CAAC,MAAD,EAAQ,MAAR,CAAP;AAAwBE,QAAAA,OAAO,EAAE,CAAC,MAAD,EAAS,MAAT;AAAjC,OAJhB;AAKEkZ,MAAAA,SAAS,EAAEL;AALb,KAlGe,EAwGf;AACEhG,MAAAA,IAAI,EAAE,SADR;AAEEoG,MAAAA,MAAM,EAAE,KAFV;AAGE9Z,MAAAA,cAAc,EAAE,EAHlB;AAIEU,MAAAA,YAAY,EAAE;AAACC,QAAAA,IAAI,EAAE,CAAC,MAAD,EAAQ,MAAR,CAAP;AAAwBE,QAAAA,OAAO,EAAE,CAAC,MAAD,EAAS,MAAT;AAAjC,OAJhB;AAKEkZ,MAAAA,SAAS,EAAEL;AALb,KAxGe,EA8Gf;AACEhG,MAAAA,IAAI,EAAE,OADR;AAEEoG,MAAAA,MAAM,EAAE,KAFV;AAGE9Z,MAAAA,cAAc,EAAE,EAHlB;AAIEU,MAAAA,YAAY,EAAE;AAACC,QAAAA,IAAI,EAAE,CAAC,MAAD,EAAQ,MAAR,CAAP;AAAwBE,QAAAA,OAAO,EAAE,CAAC,MAAD,EAAS,MAAT;AAAjC,OAJhB;AAKEkZ,MAAAA,SAAS,EAAEL;AALb,KA9Ge,EAoHf;AACEhG,MAAAA,IAAI,EAAE,UADR;AAEEoG,MAAAA,MAAM,EAAE,KAFV;AAGE9Z,MAAAA,cAAc,EAAE,EAHlB;AAIEU,MAAAA,YAAY,EAAE;AAACC,QAAAA,IAAI,EAAE,CAAC,MAAD,EAAQ,MAAR,CAAP;AAAwBE,QAAAA,OAAO,EAAE,CAAC,MAAD,EAAS,MAAT;AAAjC,OAJhB;AAKEkZ,MAAAA,SAAS,EAAEL;AALb,KApHe,EA0Hf;AACEhG,MAAAA,IAAI,EAAE,SADR;AAEEoG,MAAAA,MAAM,EAAE,KAFV;AAGE9Z,MAAAA,cAAc,EAAE,EAHlB;AAIEU,MAAAA,YAAY,EAAE;AAACC,QAAAA,IAAI,EAAE,CAAC,MAAD,EAAQ,MAAR,CAAP;AAAwBE,QAAAA,OAAO,EAAE,CAAC,MAAD,EAAQ,MAAR;AAAjC,OAJhB;AAKEkZ,MAAAA,SAAS,EAAEL;AALb,KA1He,EAgIf;AACEhG,MAAAA,IAAI,EAAE,UADR;AAEEoG,MAAAA,MAAM,EAAE,KAFV;AAGE9Z,MAAAA,cAAc,EAAE,EAHlB;AAIEU,MAAAA,YAAY,EAAE;AAACC,QAAAA,IAAI,EAAE,CAAC,MAAD,EAAQ,MAAR,CAAP;AAAwBE,QAAAA,OAAO,EAAE,CAAC,MAAD,EAAS,MAAT;AAAjC,OAJhB;AAKEkZ,MAAAA,SAAS,EAAEL;AALb,KAhIe,EAsIf;AACEhG,MAAAA,IAAI,EAAE,QADR;AAEEoG,MAAAA,MAAM,EAAE,KAFV;AAGEpZ,MAAAA,YAAY,EAAE;AAACC,QAAAA,IAAI,EAAE,CAAC,MAAD,EAAS,MAAT,CAAP;AAAyBE,QAAAA,OAAO,EAAE,CAAC,MAAD,EAAS,MAAT;AAAlC,OAHhB;AAIEnB,MAAAA,YAAY,EAAE,UAJhB;AAKEM,MAAAA,cAAc,EAAE,EALlB;AAME+Z,MAAAA,SAAS,EAAEL;AANb,KAtIe,EA6If;AACEhG,MAAAA,IAAI,EAAE,UADR;AAEEoG,MAAAA,MAAM,EAAE,KAFV;AAGEpZ,MAAAA,YAAY,EAAE;AAACC,QAAAA,IAAI,EAAE,CAAC,IAAD,CAAP;AAAeE,QAAAA,OAAO,EAAE;AAAxB,OAHhB;AAIEkZ,MAAAA,SAAS,EAAEL;AAJb,KA7Ie,EAkJf;AACEhG,MAAAA,IAAI,EAAE,UADR;AAEEoG,MAAAA,MAAM,EAAE,KAFV;AAGEC,MAAAA,SAAS,EAAEN;AAHb,KAlJe,EAsJf;AACE/F,MAAAA,IAAI,EAAE,WADR;AAEEoG,MAAAA,MAAM,EAAE,KAFV;AAGEC,MAAAA,SAAS,EAAEN;AAHb,KAtJe,EA0Jf;AACE/F,MAAAA,IAAI,EAAE,iBADR;AAEEoG,MAAAA,MAAM,EAAE,KAFV;AAGEC,MAAAA,SAAS,EAAEN;AAHb,KA1Je,EA8Jf;AACE/F,MAAAA,IAAI,EAAE,UADR;AAEEoG,MAAAA,MAAM,EAAE,KAFV;AAGEC,MAAAA,SAAS,EAAEN;AAHb,KA9Je,EAkKf;AACE/F,MAAAA,IAAI,EAAE,QADR;AAEEoG,MAAAA,MAAM,EAAE,KAFV;AAGEC,MAAAA,SAAS,EAAEP;AAHb,KAlKe,EAsKf;AACE9F,MAAAA,IAAI,EAAE,MADR;AAEEoG,MAAAA,MAAM,EAAE,MAFV;AAGEpZ,MAAAA,YAAY,EAAE;AAACC,QAAAA,IAAI,EAAE,CAAC,IAAD,EAAO,IAAP,CAAP;AAAqBE,QAAAA,OAAO,EAAE,CAAC,IAAD,EAAO,IAAP;AAA9B,OAHhB;AAIEkZ,MAAAA,SAAS,EAAEL;AAJb,KAtKe,EA2Kf;AACEhG,MAAAA,IAAI,EAAE,KADR;AAEEoG,MAAAA,MAAM,EAAE,KAFV;AAGEpZ,MAAAA,YAAY,EAAE;AAACC,QAAAA,IAAI,EAAE,CAAC,IAAD,CAAP;AAAeE,QAAAA,OAAO,EAAE;AAAxB,OAHhB;AAIEkZ,MAAAA,SAAS,EAAEL;AAJb,KA3Ke,EAgLf;AACEhG,MAAAA,IAAI,EAAE,QADR;AAEEoG,MAAAA,MAAM,EAAE,KAFV;AAGEpZ,MAAAA,YAAY,EAAE;AAACC,QAAAA,IAAI,EAAE,CAAC,IAAD,CAAP;AAAeE,QAAAA,OAAO,EAAE;AAAxB,OAHhB;AAIEkZ,MAAAA,SAAS,EAAEL;AAJb,KAhLe,EAqLf;AACEhG,MAAAA,IAAI,EAAE,MADR;AAEEoG,MAAAA,MAAM,EAAE,MAFV;AAGEpZ,MAAAA,YAAY,EAAE;AAACC,QAAAA,IAAI,EAAE,CAAC,IAAD,EAAO,IAAP,CAAP;AAAqBE,QAAAA,OAAO,EAAE,CAAC,IAAD,EAAO,IAAP;AAA9B,OAHhB;AAIEkZ,MAAAA,SAAS,EAAEL;AAJb,KArLe,EA0Lf;AACEhG,MAAAA,IAAI,EAAE,QADR;AAEEoG,MAAAA,MAAM,EAAE,KAFV;AAGEC,MAAAA,SAAS,EAAEN;AAHb,KA1Le,EA8Lf;AACE/F,MAAAA,IAAI,EAAE,QADR;AAEEoG,MAAAA,MAAM,EAAE,KAFV;AAGEpZ,MAAAA,YAAY,EAAE;AAACC,QAAAA,IAAI,EAAE,CAAC,IAAD,CAAP;AAAeE,QAAAA,OAAO,EAAE,CAAC,IAAD;AAAxB,OAHhB;AAIEmZ,MAAAA,aAAa,EAAE;AAACrZ,QAAAA,IAAI,EAAE,CAAC,IAAD,CAAP;AAAeE,QAAAA,OAAO,EAAE,CAAC,IAAD;AAAxB,OAJjB;AAKEkZ,MAAAA,SAAS,EAAEJ;AALb,KA9Le,EAoMf;AACEjG,MAAAA,IAAI,EAAE,MADR;AAEEoG,MAAAA,MAAM,EAAE,MAFV;AAGEC,MAAAA,SAAS,EAAEH;AAHb,KApMe,EAwMf;AACElG,MAAAA,IAAI,EAAE,WADR;AAEEoG,MAAAA,MAAM,EAAE,KAFV;AAGEC,MAAAA,SAAS,EAAEH;AAHb,KAxMe,CAAjB;AA+MAzhB,IAAAA,MAAM,CAACH,OAAP,GAAiB;AACbiiB,MAAAA,iBAAiB,EAAE,UAAUC,oBAAV,EAAgC;AAC/C,YAAIC,YAAY,GAAGD,oBAAoB,CAAC9X,WAArB,EAAnB;;AACA,aAAK,IAAI7K,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGsiB,UAAU,CAAC3hB,MAA/B,EAAuCX,CAAC,EAAxC,EAA4C;AACxC,cAAIwI,QAAQ,GAAG8Z,UAAU,CAACtiB,CAAD,CAAzB;;AACA,cAAGwI,QAAQ,CAAC2T,IAAT,KAAkByG,YAAlB,IAAkCpa,QAAQ,CAAC+Z,MAAT,KAAoBK,YAAzD,EAAuE;AACnE,mBAAOpa,QAAP;AACH;AACJ;;AACD,eAAO,IAAP;AACH;AAVY,KAAjB;AAaC,GApOqE,EAoOpE;AAAC,2BAAsB,CAAvB;AAAyB,4BAAuB,EAAhD;AAAmD,0BAAqB,EAAxE;AAA2E,wBAAmB,EAA9F;AAAiG,0BAAqB;AAAtH,GApOoE,CA91GoY;AAkkH7U,MAAG,CAAC,UAASrI,OAAT,EAAiBS,MAAjB,EAAwBH,OAAxB,EAAgC;AACjK,QAAIqH,WAAW,GAAG3H,OAAO,CAAC,gBAAD,CAAzB;;AAEAS,IAAAA,MAAM,CAACH,OAAP,GAAiB;AACb8I,MAAAA,cAAc,EAAE,UAAUtB,OAAV,EAAmB;AAC/B,YAAI,CAAC,sBAAsBqF,IAAtB,CAA2BrF,OAA3B,CAAL,EAA0C;AACtC;AACA,iBAAO,KAAP;AACH;;AAED,YAAI,mBAAmBqF,IAAnB,CAAwBrF,OAAxB,KAAoC,oBAAoBqF,IAApB,CAAyBrF,OAAzB,CAAxC,EAA2E;AACvE;AACA,iBAAO,IAAP;AACH,SAT8B,CAW/B;;;AACA,eAAO,KAAKoC,cAAL,CAAoBpC,OAApB,CAAP;AACH,OAdY;AAeboC,MAAAA,cAAc,EAAE,UAAUpC,OAAV,EAAmB;AAC/B;AACAA,QAAAA,OAAO,GAAGA,OAAO,CAACjC,OAAR,CAAgB,IAAhB,EAAqB,EAArB,CAAV;AAEA,YAAI6c,WAAW,GAAG/a,WAAW,CAACsZ,SAAZ,CAAsBnZ,OAAO,CAAC4C,WAAR,EAAtB,CAAlB;;AAEA,aAAK,IAAI7K,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA8B;AAC1B;AACA,cAAKkE,QAAQ,CAAC2e,WAAW,CAAC7iB,CAAD,CAAZ,EAAiB,EAAjB,CAAR,GAA+B,CAA/B,IAAoCiI,OAAO,CAACjI,CAAD,CAAP,CAAWsF,WAAX,OAA6B2C,OAAO,CAACjI,CAAD,CAAzE,IACCkE,QAAQ,CAAC2e,WAAW,CAAC7iB,CAAD,CAAZ,EAAiB,EAAjB,CAAR,IAAgC,CAAhC,IAAqCiI,OAAO,CAACjI,CAAD,CAAP,CAAW6K,WAAX,OAA6B5C,OAAO,CAACjI,CAAD,CAD9E,EACoF;AAChF,mBAAO,KAAP;AACH;AACJ;;AAED,eAAO,IAAP;AACH;AA9BY,KAAjB;AAiCC,GApC+H,EAoC9H;AAAC,sBAAiB;AAAlB,GApC8H,CAlkH0U;AAsmHjb,MAAG,CAAC,UAASG,OAAT,EAAiBS,MAAjB,EAAwBH,OAAxB,EAAgC;AAC7D,QAAIqH,WAAW,GAAG3H,OAAO,CAAC,gBAAD,CAAzB;;AACA,QAAI8V,QAAQ,GAAG9V,OAAO,CAAC,mBAAD,CAAtB;;AAEA,QAAI4H,oBAAoB,GAAG,MAA3B;AACA,QAAI+a,cAAc,GAAG,IAAI3V,MAAJ,CAAW,oEAAX,CAArB;AACA,QAAI4V,wBAAwB,GAAG,IAAI5V,MAAJ,CAAW,qEAAX,CAA/B;;AAEA,aAAS6V,eAAT,CAAyBta,OAAzB,EAAkCF,QAAlC,EAA4CQ,WAA5C,EAAyDE,WAAzD,EAAqE;AACjE,UAAI+Z,OAAO,GAAGza,QAAQ,CAACW,YAAvB;;AACA,UAAGD,WAAW,IAAI,YAAlB,EAA+B;AAC3B+Z,QAAAA,OAAO,GAAGza,QAAQ,CAACia,aAAnB;AACH;;AAED,cAAOzZ,WAAP;AACI,aAAK,MAAL;AACI,iBAAO9E,QAAQ,CAACwE,OAAO,CAAC9C,MAAR,CAAe,CAAf,EAAiB,CAAjB,CAAD,EAAsB,EAAtB,CAAR,IAAqCqd,OAAO,CAAC7Z,IAAR,CAAa,CAAb,CAA5C;;AACJ,aAAK,SAAL;AACI,iBAAOlF,QAAQ,CAACwE,OAAO,CAAC9C,MAAR,CAAe,CAAf,EAAiB,CAAjB,CAAD,EAAsB,EAAtB,CAAR,IAAqCqd,OAAO,CAAC3Z,OAAR,CAAgB,CAAhB,CAA5C;;AACJ,aAAK,MAAL;AACI,iBAAOpF,QAAQ,CAACwE,OAAO,CAAC9C,MAAR,CAAe,CAAf,EAAiB,CAAjB,CAAD,EAAsB,EAAtB,CAAR,IAAqCqd,OAAO,CAAC7Z,IAAR,CAAa,CAAb,CAArC,IAAwDlF,QAAQ,CAACwE,OAAO,CAAC9C,MAAR,CAAe,CAAf,EAAiB,CAAjB,CAAD,EAAsB,EAAtB,CAAR,IAAqCqd,OAAO,CAAC3Z,OAAR,CAAgB,CAAhB,CAApG;;AACJ;AACI,iBAAO,KAAP;AARR;AAUH;;AAED,aAASmN,QAAT,CAAkBC,GAAlB,EAAuB;AACnB,UAAIA,GAAG,CAAC/V,MAAJ,GAAa,CAAb,KAAmB,CAAvB,EAA0B,OAAO,IAAP;AAC1B,UAAIgW,GAAG,GAAG,IAAIzV,UAAJ,CAAewV,GAAG,CAAC/V,MAAJ,GAAa,CAA5B,CAAV;;AACA,WAAK,IAAIX,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG0W,GAAG,CAAC/V,MAAJ,GAAa,CAAjC,EAAoC,EAAEX,CAAtC,EAAyC;AACrC2W,QAAAA,GAAG,CAAC3W,CAAD,CAAH,GAASkE,QAAQ,CAACwS,GAAG,CAACpS,KAAJ,CAAUtE,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG,CAAJ,GAAQ,CAAzB,CAAD,EAA8B,EAA9B,CAAjB;AACH;;AACD,aAAO2W,GAAP;AACH;;AAED/V,IAAAA,MAAM,CAACH,OAAP,GAAiB;AACb8I,MAAAA,cAAc,EAAE,UAAUtB,OAAV,EAAmBO,QAAnB,EAA6BQ,WAA7B,EAA0C;AACtDA,QAAAA,WAAW,GAAGA,WAAW,IAAIjB,oBAA7B;AACA,YAAImB,WAAW,GAAG,UAAlB;;AACA,YAAG,CAAC4Z,cAAc,CAACxV,IAAf,CAAoBrF,OAApB,CAAJ,EAAiC;AAC7B,cAAG8a,wBAAwB,CAACzV,IAAzB,CAA8BrF,OAA9B,CAAH,EAA0C;AACtCiB,YAAAA,WAAW,GAAG,YAAd;AACH,WAFD,MAGI;AACA,mBAAO,KAAP;AACH;AACJ;;AAED,YAAIga,cAAc,GAAGjN,QAAQ,CAAChT,MAAT,CAAgBgF,OAAhB,CAArB;AACA,YAAG,CAACib,cAAJ,EACI,OAAO,KAAP;AAEJ,YAAG,CAACF,eAAe,CAACE,cAAD,EAAiB1a,QAAjB,EAA2BQ,WAA3B,EAAwCE,WAAxC,CAAnB,EACI,OAAO,KAAP;AAEJ,YAAIia,YAAY,GAAGD,cAAc,CAAC5e,KAAf,CAAqB,CAAC,CAAtB,CAAnB;AACA,YAAI8e,YAAY,GAAGtb,WAAW,CAACka,iBAAZ,CAA8BvL,QAAQ,CAACyM,cAAc,CAAC5e,KAAf,CAAqB,CAArB,EAAwB,CAAC,CAAzB,CAAD,CAAtC,CAAnB;AAEA,eAAO6e,YAAY,KAAKC,YAAxB;AACH;AAxBY,KAAjB;AA2BC,GA9D2B,EA8D1B;AAAC,yBAAoB,EAArB;AAAwB,sBAAiB;AAAzC,GA9D0B,CAtmH8a;AAoqH1Z,MAAG,CAAC,UAASjjB,OAAT,EAAiBS,MAAjB,EAAwBH,OAAxB,EAAgC;AACpF,QAAIqH,WAAW,GAAG3H,OAAO,CAAC,gBAAD,CAAzB;;AACA,QAAIkjB,KAAK,GAAGljB,OAAO,CAAC,QAAD,CAAnB;;AAEA,QAAImjB,aAAa,GAAG,kCAApB;AAEA,QAAIC,KAAK,GAAGF,KAAK,CAACC,aAAD,CAAjB,CANoF,CAOpF;;AACA,QAAIE,MAAM,GAAG,IAAIrW,MAAJ,CAAW,mBAAmBmW,aAAnB,GAAmC,SAA9C,CAAb;AAEA1iB,IAAAA,MAAM,CAACH,OAAP,GAAiB;AACb8I,MAAAA,cAAc,EAAE,UAAUtB,OAAV,EAAmB;AAC/B,YAAIub,MAAM,CAAClW,IAAP,CAAYrF,OAAZ,CAAJ,EAA0B;AACtB,iBAAO,KAAKoC,cAAL,CAAoBpC,OAApB,CAAP;AACH;;AAED,eAAO,KAAP;AACH,OAPY;AASboC,MAAAA,cAAc,EAAE,UAAUpC,OAAV,EAAmB;AAC/B,YAAIyB,KAAK,GAAG6Z,KAAK,CAACtgB,MAAN,CAAaugB,MAAM,CAACpW,IAAP,CAAYnF,OAAZ,EAAqB,CAArB,CAAb,EAAsC3D,KAAtC,CAA4C,CAAC,EAA7C,CAAZ,CAD+B,CAE/B;;AACA,YAAImf,gBAAgB,GAAG3b,WAAW,CAACia,OAAZ,CAAoBja,WAAW,CAACc,KAAZ,CAAkBc,KAAK,CAACpF,KAAN,CAAY,CAAZ,EAAe,CAAC,CAAhB,CAAlB,CAApB,EAA2D,CAA3D,CAAvB;AACA,YAAIqE,QAAQ,GAAGb,WAAW,CAACc,KAAZ,CAAkBc,KAAK,CAACpF,KAAN,CAAY,CAAC,CAAb,EAAgBqF,OAAhB,EAAlB,CAAf;AAEA,eAAO8Z,gBAAgB,KAAK9a,QAA5B;AACH;AAhBY,KAAjB;AAmBC,GA7BkD,EA6BjD;AAAC,sBAAiB,EAAlB;AAAqB,cAAS;AAA9B,GA7BiD,CApqHuZ;AAisHta,MAAG,CAAC,UAASxI,OAAT,EAAiBS,MAAjB,EAAwBH,OAAxB,EAAgC;AACxE,QAAIqH,WAAW,GAAG3H,OAAO,CAAC,gBAAD,CAAzB;;AACA,QAAIkjB,KAAK,GAAGljB,OAAO,CAAC,QAAD,CAAnB;;AAEA,QAAImjB,aAAa,GAAG,4DAApB;AAEA,QAAIC,KAAK,GAAGF,KAAK,CAACC,aAAD,CAAjB;AACA,QAAIE,MAAM,GAAG,IAAIrW,MAAJ,CAAW,QAAQmW,aAAR,GAAwB,WAAnC,CAAb;AAEA1iB,IAAAA,MAAM,CAACH,OAAP,GAAiB;AACb;AACN;AACA;AACM8I,MAAAA,cAAc,EAAE,UAAUtB,OAAV,EAAmB;AAC/B,YAAIub,MAAM,CAAClW,IAAP,CAAYrF,OAAZ,CAAJ,EAA0B;AACtB,iBAAO,KAAKoC,cAAL,CAAoBpC,OAApB,CAAP;AACH;;AAED,eAAO,KAAP;AACH,OAVY;AAYboC,MAAAA,cAAc,EAAE,UAAUpC,OAAV,EAAmB;AAC/B,YAAIyB,KAAK,GAAG6Z,KAAK,CAACtgB,MAAN,CAAagF,OAAb,CAAZ;AACA,YAAIwb,gBAAgB,GAAG3b,WAAW,CAACQ,cAAZ,CAA2BR,WAAW,CAACc,KAAZ,CAAkBc,KAAK,CAACpF,KAAN,CAAY,CAAZ,EAAe,CAAC,CAAhB,CAAlB,CAA3B,CAAvB;AACA,YAAIqE,QAAQ,GAAGb,WAAW,CAACc,KAAZ,CAAkBc,KAAK,CAACpF,KAAN,CAAY,CAAC,CAAb,CAAlB,CAAf;AAEA,eAAOmf,gBAAgB,KAAK9a,QAA5B;AACH;AAlBY,KAAjB;AAqBC,GA9BsC,EA8BrC;AAAC,sBAAiB,EAAlB;AAAqB,cAAS;AAA9B,GA9BqC,CAjsHma;AA+tHta,MAAG,CAAC,UAASxI,OAAT,EAAiBS,MAAjB,EAAwBH,OAAxB,EAAgC;AACxE,QAAIijB,UAAU,GAAGvjB,OAAO,CAAC,cAAD,CAAxB;;AAEA,QAAIwjB,qBAAqB,GAAG,SAA5B;AAEA/iB,IAAAA,MAAM,CAACH,OAAP,GAAiB;AACbmjB,MAAAA,QAAQ,EAAE,UAAU3b,OAAV,EAAmB0a,oBAAnB,EAAyC3Z,WAAzC,EAAsD;AAC5D,YAAIR,QAAQ,GAAGkb,UAAU,CAAChB,iBAAX,CAA6BC,oBAAoB,IAAIgB,qBAArD,CAAf;;AAEA,YAAInb,QAAQ,CAACga,SAAb,EAAwB;AACpB,iBAAOha,QAAQ,CAACga,SAAT,CAAmBjZ,cAAnB,CAAkCtB,OAAlC,EAA2CO,QAA3C,EAAqDQ,WAArD,CAAP;AACH;;AAED,cAAM,IAAI1I,KAAJ,CAAU,qCAAqCqiB,oBAA/C,CAAN;AACH;AATY,KAAjB;AAYC,GAjBsC,EAiBrC;AAAC,oBAAe;AAAhB,GAjBqC,CA/tHma;AAgvHnb,MAAG,CAAC,UAASxiB,OAAT,EAAiBS,MAAjB,EAAwBH,OAAxB,EAAgC;AAC3DojB,IAAAA,WAAW,GAAG1jB,OAAO,CAAC,0BAAD,CAArB;AACAS,IAAAA,MAAM,CAACH,OAAP,GAAiBojB,WAAjB;AACC,GAHyB,EAGxB;AAAC,gCAA2B;AAA5B,GAHwB,CAhvHgb;AAmvHva,MAAG,CAAC,UAAS1jB,OAAT,EAAiBS,MAAjB,EAAwBH,OAAxB,EAAgC;AACvE;;AAEAA,IAAAA,OAAO,CAACwF,UAAR,GAAqBA,UAArB;AACAxF,IAAAA,OAAO,CAACqjB,WAAR,GAAsBA,WAAtB;AACArjB,IAAAA,OAAO,CAACsjB,aAAR,GAAwBA,aAAxB;AAEA,QAAIC,MAAM,GAAG,EAAb;AACA,QAAIC,SAAS,GAAG,EAAhB;AACA,QAAIC,GAAG,GAAG,OAAOhjB,UAAP,KAAsB,WAAtB,GAAoCA,UAApC,GAAiD8L,KAA3D;AAEA,QAAIzM,IAAI,GAAG,kEAAX;;AACA,SAAK,IAAIP,CAAC,GAAG,CAAR,EAAWmkB,GAAG,GAAG5jB,IAAI,CAACI,MAA3B,EAAmCX,CAAC,GAAGmkB,GAAvC,EAA4C,EAAEnkB,CAA9C,EAAiD;AAC/CgkB,MAAAA,MAAM,CAAChkB,CAAD,CAAN,GAAYO,IAAI,CAACP,CAAD,CAAhB;AACAikB,MAAAA,SAAS,CAAC1jB,IAAI,CAACgB,UAAL,CAAgBvB,CAAhB,CAAD,CAAT,GAAgCA,CAAhC;AACD,KAfsE,CAiBvE;AACA;;;AACAikB,IAAAA,SAAS,CAAC,IAAI1iB,UAAJ,CAAe,CAAf,CAAD,CAAT,GAA+B,EAA/B;AACA0iB,IAAAA,SAAS,CAAC,IAAI1iB,UAAJ,CAAe,CAAf,CAAD,CAAT,GAA+B,EAA/B;;AAEA,aAAS6iB,OAAT,CAAkBC,GAAlB,EAAuB;AACrB,UAAIF,GAAG,GAAGE,GAAG,CAAC1jB,MAAd;;AAEA,UAAIwjB,GAAG,GAAG,CAAN,GAAU,CAAd,EAAiB;AACf,cAAM,IAAI7jB,KAAJ,CAAU,gDAAV,CAAN;AACD,OALoB,CAOrB;AACA;;;AACA,UAAIgkB,QAAQ,GAAGD,GAAG,CAACte,OAAJ,CAAY,GAAZ,CAAf;AACA,UAAIue,QAAQ,KAAK,CAAC,CAAlB,EAAqBA,QAAQ,GAAGH,GAAX;AAErB,UAAII,eAAe,GAAGD,QAAQ,KAAKH,GAAb,GAClB,CADkB,GAElB,IAAKG,QAAQ,GAAG,CAFpB;AAIA,aAAO,CAACA,QAAD,EAAWC,eAAX,CAAP;AACD,KAvCsE,CAyCvE;;;AACA,aAASte,UAAT,CAAqBoe,GAArB,EAA0B;AACxB,UAAIG,IAAI,GAAGJ,OAAO,CAACC,GAAD,CAAlB;AACA,UAAIC,QAAQ,GAAGE,IAAI,CAAC,CAAD,CAAnB;AACA,UAAID,eAAe,GAAGC,IAAI,CAAC,CAAD,CAA1B;AACA,aAAQ,CAACF,QAAQ,GAAGC,eAAZ,IAA+B,CAA/B,GAAmC,CAApC,GAAyCA,eAAhD;AACD;;AAED,aAASE,WAAT,CAAsBJ,GAAtB,EAA2BC,QAA3B,EAAqCC,eAArC,EAAsD;AACpD,aAAQ,CAACD,QAAQ,GAAGC,eAAZ,IAA+B,CAA/B,GAAmC,CAApC,GAAyCA,eAAhD;AACD;;AAED,aAAST,WAAT,CAAsBO,GAAtB,EAA2B;AACzB,UAAIK,GAAJ;AACA,UAAIF,IAAI,GAAGJ,OAAO,CAACC,GAAD,CAAlB;AACA,UAAIC,QAAQ,GAAGE,IAAI,CAAC,CAAD,CAAnB;AACA,UAAID,eAAe,GAAGC,IAAI,CAAC,CAAD,CAA1B;AAEA,UAAIhS,GAAG,GAAG,IAAI0R,GAAJ,CAAQO,WAAW,CAACJ,GAAD,EAAMC,QAAN,EAAgBC,eAAhB,CAAnB,CAAV;AAEA,UAAII,OAAO,GAAG,CAAd,CARyB,CAUzB;;AACA,UAAIR,GAAG,GAAGI,eAAe,GAAG,CAAlB,GACND,QAAQ,GAAG,CADL,GAENA,QAFJ;;AAIA,WAAK,IAAItkB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGmkB,GAApB,EAAyBnkB,CAAC,IAAI,CAA9B,EAAiC;AAC/B0kB,QAAAA,GAAG,GACAT,SAAS,CAACI,GAAG,CAAC9iB,UAAJ,CAAevB,CAAf,CAAD,CAAT,IAAgC,EAAjC,GACCikB,SAAS,CAACI,GAAG,CAAC9iB,UAAJ,CAAevB,CAAC,GAAG,CAAnB,CAAD,CAAT,IAAoC,EADrC,GAECikB,SAAS,CAACI,GAAG,CAAC9iB,UAAJ,CAAevB,CAAC,GAAG,CAAnB,CAAD,CAAT,IAAoC,CAFrC,GAGAikB,SAAS,CAACI,GAAG,CAAC9iB,UAAJ,CAAevB,CAAC,GAAG,CAAnB,CAAD,CAJX;AAKAwS,QAAAA,GAAG,CAACmS,OAAO,EAAR,CAAH,GAAkBD,GAAG,IAAI,EAAR,GAAc,IAA/B;AACAlS,QAAAA,GAAG,CAACmS,OAAO,EAAR,CAAH,GAAkBD,GAAG,IAAI,CAAR,GAAa,IAA9B;AACAlS,QAAAA,GAAG,CAACmS,OAAO,EAAR,CAAH,GAAiBD,GAAG,GAAG,IAAvB;AACD;;AAED,UAAIH,eAAe,KAAK,CAAxB,EAA2B;AACzBG,QAAAA,GAAG,GACAT,SAAS,CAACI,GAAG,CAAC9iB,UAAJ,CAAevB,CAAf,CAAD,CAAT,IAAgC,CAAjC,GACCikB,SAAS,CAACI,GAAG,CAAC9iB,UAAJ,CAAevB,CAAC,GAAG,CAAnB,CAAD,CAAT,IAAoC,CAFvC;AAGAwS,QAAAA,GAAG,CAACmS,OAAO,EAAR,CAAH,GAAiBD,GAAG,GAAG,IAAvB;AACD;;AAED,UAAIH,eAAe,KAAK,CAAxB,EAA2B;AACzBG,QAAAA,GAAG,GACAT,SAAS,CAACI,GAAG,CAAC9iB,UAAJ,CAAevB,CAAf,CAAD,CAAT,IAAgC,EAAjC,GACCikB,SAAS,CAACI,GAAG,CAAC9iB,UAAJ,CAAevB,CAAC,GAAG,CAAnB,CAAD,CAAT,IAAoC,CADrC,GAECikB,SAAS,CAACI,GAAG,CAAC9iB,UAAJ,CAAevB,CAAC,GAAG,CAAnB,CAAD,CAAT,IAAoC,CAHvC;AAIAwS,QAAAA,GAAG,CAACmS,OAAO,EAAR,CAAH,GAAkBD,GAAG,IAAI,CAAR,GAAa,IAA9B;AACAlS,QAAAA,GAAG,CAACmS,OAAO,EAAR,CAAH,GAAiBD,GAAG,GAAG,IAAvB;AACD;;AAED,aAAOlS,GAAP;AACD;;AAED,aAASoS,eAAT,CAA0BzN,GAA1B,EAA+B;AAC7B,aAAO6M,MAAM,CAAC7M,GAAG,IAAI,EAAP,GAAY,IAAb,CAAN,GACL6M,MAAM,CAAC7M,GAAG,IAAI,EAAP,GAAY,IAAb,CADD,GAEL6M,MAAM,CAAC7M,GAAG,IAAI,CAAP,GAAW,IAAZ,CAFD,GAGL6M,MAAM,CAAC7M,GAAG,GAAG,IAAP,CAHR;AAID;;AAED,aAAS0N,WAAT,CAAsBC,KAAtB,EAA6BnI,KAA7B,EAAoCoI,GAApC,EAAyC;AACvC,UAAIL,GAAJ;AACA,UAAIM,MAAM,GAAG,EAAb;;AACA,WAAK,IAAIhlB,CAAC,GAAG2c,KAAb,EAAoB3c,CAAC,GAAG+kB,GAAxB,EAA6B/kB,CAAC,IAAI,CAAlC,EAAqC;AACnC0kB,QAAAA,GAAG,GACD,CAAEI,KAAK,CAAC9kB,CAAD,CAAL,IAAY,EAAb,GAAmB,QAApB,KACE8kB,KAAK,CAAC9kB,CAAC,GAAG,CAAL,CAAL,IAAgB,CAAjB,GAAsB,MADvB,KAEC8kB,KAAK,CAAC9kB,CAAC,GAAG,CAAL,CAAL,GAAe,IAFhB,CADF;AAIAglB,QAAAA,MAAM,CAAC3gB,IAAP,CAAYugB,eAAe,CAACF,GAAD,CAA3B;AACD;;AACD,aAAOM,MAAM,CAACnY,IAAP,CAAY,EAAZ,CAAP;AACD;;AAED,aAASkX,aAAT,CAAwBe,KAAxB,EAA+B;AAC7B,UAAIJ,GAAJ;AACA,UAAIP,GAAG,GAAGW,KAAK,CAACnkB,MAAhB;AACA,UAAIoc,UAAU,GAAGoH,GAAG,GAAG,CAAvB,CAH6B,CAGJ;;AACzB,UAAIjX,KAAK,GAAG,EAAZ;AACA,UAAI+X,cAAc,GAAG,KAArB,CAL6B,CAKF;AAE3B;;AACA,WAAK,IAAIjlB,CAAC,GAAG,CAAR,EAAWklB,IAAI,GAAGf,GAAG,GAAGpH,UAA7B,EAAyC/c,CAAC,GAAGklB,IAA7C,EAAmDllB,CAAC,IAAIilB,cAAxD,EAAwE;AACtE/X,QAAAA,KAAK,CAAC7I,IAAN,CAAWwgB,WAAW,CACpBC,KADoB,EACb9kB,CADa,EACTA,CAAC,GAAGilB,cAAL,GAAuBC,IAAvB,GAA8BA,IAA9B,GAAsCllB,CAAC,GAAGilB,cADhC,CAAtB;AAGD,OAZ4B,CAc7B;;;AACA,UAAIlI,UAAU,KAAK,CAAnB,EAAsB;AACpB2H,QAAAA,GAAG,GAAGI,KAAK,CAACX,GAAG,GAAG,CAAP,CAAX;AACAjX,QAAAA,KAAK,CAAC7I,IAAN,CACE2f,MAAM,CAACU,GAAG,IAAI,CAAR,CAAN,GACAV,MAAM,CAAEU,GAAG,IAAI,CAAR,GAAa,IAAd,CADN,GAEA,IAHF;AAKD,OAPD,MAOO,IAAI3H,UAAU,KAAK,CAAnB,EAAsB;AAC3B2H,QAAAA,GAAG,GAAG,CAACI,KAAK,CAACX,GAAG,GAAG,CAAP,CAAL,IAAkB,CAAnB,IAAwBW,KAAK,CAACX,GAAG,GAAG,CAAP,CAAnC;AACAjX,QAAAA,KAAK,CAAC7I,IAAN,CACE2f,MAAM,CAACU,GAAG,IAAI,EAAR,CAAN,GACAV,MAAM,CAAEU,GAAG,IAAI,CAAR,GAAa,IAAd,CADN,GAEAV,MAAM,CAAEU,GAAG,IAAI,CAAR,GAAa,IAAd,CAFN,GAGA,GAJF;AAMD;;AAED,aAAOxX,KAAK,CAACL,IAAN,CAAW,EAAX,CAAP;AACD;AAEA,GAzJqC,EAyJpC,EAzJoC,CAnvHoa;AA44Hpc,MAAG,CAAC,UAAS1M,OAAT,EAAiBS,MAAjB,EAAwBH,OAAxB,EAAgC;AAC1C;AACF;AACA;AACA;AACA;AACA;;AACE;AAEA;;AAEA,QAAI0kB,MAAM,GAAGhlB,OAAO,CAAC,WAAD,CAApB;;AACA,QAAIilB,OAAO,GAAGjlB,OAAO,CAAC,SAAD,CAArB;;AAEAM,IAAAA,OAAO,CAACI,MAAR,GAAiBA,MAAjB;AACAJ,IAAAA,OAAO,CAACkH,UAAR,GAAqBA,UAArB;AACAlH,IAAAA,OAAO,CAAC4kB,iBAAR,GAA4B,EAA5B;AAEA,QAAIC,YAAY,GAAG,UAAnB;AACA7kB,IAAAA,OAAO,CAAC8kB,UAAR,GAAqBD,YAArB;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACEzkB,IAAAA,MAAM,CAAC2kB,mBAAP,GAA6BC,iBAAiB,EAA9C;;AAEA,QAAI,CAAC5kB,MAAM,CAAC2kB,mBAAR,IAA+B,OAAOE,OAAP,KAAmB,WAAlD,IACA,OAAOA,OAAO,CAACC,KAAf,KAAyB,UAD7B,EACyC;AACvCD,MAAAA,OAAO,CAACC,KAAR,CACE,8EACA,sEAFF;AAID;;AAED,aAASF,iBAAT,GAA8B;AAC5B;AACA,UAAI;AACF,YAAIjT,GAAG,GAAG,IAAItR,UAAJ,CAAe,CAAf,CAAV;AACAsR,QAAAA,GAAG,CAACoT,SAAJ,GAAgB;AAAEA,UAAAA,SAAS,EAAE1kB,UAAU,CAACiL,SAAxB;AAAmC0Z,UAAAA,GAAG,EAAE,YAAY;AAAE,mBAAO,EAAP;AAAW;AAAjE,SAAhB;AACA,eAAOrT,GAAG,CAACqT,GAAJ,OAAc,EAArB;AACD,OAJD,CAIE,OAAOjmB,CAAP,EAAU;AACV,eAAO,KAAP;AACD;AACF;;AAED+a,IAAAA,MAAM,CAACmL,cAAP,CAAsBjlB,MAAM,CAACsL,SAA7B,EAAwC,QAAxC,EAAkD;AAChD4Z,MAAAA,UAAU,EAAE,IADoC;AAEhDC,MAAAA,GAAG,EAAE,YAAY;AACf,YAAI,CAACnlB,MAAM,CAACmB,QAAP,CAAgB,IAAhB,CAAL,EAA4B,OAAO0F,SAAP;AAC5B,eAAO,KAAKvE,MAAZ;AACD;AAL+C,KAAlD;AAQAwX,IAAAA,MAAM,CAACmL,cAAP,CAAsBjlB,MAAM,CAACsL,SAA7B,EAAwC,QAAxC,EAAkD;AAChD4Z,MAAAA,UAAU,EAAE,IADoC;AAEhDC,MAAAA,GAAG,EAAE,YAAY;AACf,YAAI,CAACnlB,MAAM,CAACmB,QAAP,CAAgB,IAAhB,CAAL,EAA4B,OAAO0F,SAAP;AAC5B,eAAO,KAAKue,UAAZ;AACD;AAL+C,KAAlD;;AAQA,aAASC,YAAT,CAAuBvlB,MAAvB,EAA+B;AAC7B,UAAIA,MAAM,GAAG2kB,YAAb,EAA2B;AACzB,cAAM,IAAIa,UAAJ,CAAe,gBAAgBxlB,MAAhB,GAAyB,gCAAxC,CAAN;AACD,OAH4B,CAI7B;;;AACA,UAAI8G,GAAG,GAAG,IAAIvG,UAAJ,CAAeP,MAAf,CAAV;AACA8G,MAAAA,GAAG,CAACme,SAAJ,GAAgB/kB,MAAM,CAACsL,SAAvB;AACA,aAAO1E,GAAP;AACD;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEE,aAAS5G,MAAT,CAAiB0G,GAAjB,EAAsBC,gBAAtB,EAAwC7G,MAAxC,EAAgD;AAC9C;AACA,UAAI,OAAO4G,GAAP,KAAe,QAAnB,EAA6B;AAC3B,YAAI,OAAOC,gBAAP,KAA4B,QAAhC,EAA0C;AACxC,gBAAM,IAAIxG,SAAJ,CACJ,oEADI,CAAN;AAGD;;AACD,eAAO+B,WAAW,CAACwE,GAAD,CAAlB;AACD;;AACD,aAAOH,IAAI,CAACG,GAAD,EAAMC,gBAAN,EAAwB7G,MAAxB,CAAX;AACD,KAvGyC,CAyG1C;;;AACA,QAAI,OAAOylB,MAAP,KAAkB,WAAlB,IAAiCA,MAAM,CAACC,OAAP,IAAkB,IAAnD,IACAxlB,MAAM,CAACulB,MAAM,CAACC,OAAR,CAAN,KAA2BxlB,MAD/B,EACuC;AACrC8Z,MAAAA,MAAM,CAACmL,cAAP,CAAsBjlB,MAAtB,EAA8BulB,MAAM,CAACC,OAArC,EAA8C;AAC5C3hB,QAAAA,KAAK,EAAE,IADqC;AAE5C4hB,QAAAA,YAAY,EAAE,IAF8B;AAG5CP,QAAAA,UAAU,EAAE,KAHgC;AAI5CQ,QAAAA,QAAQ,EAAE;AAJkC,OAA9C;AAMD;;AAED1lB,IAAAA,MAAM,CAAC2lB,QAAP,GAAkB,IAAlB,CApH0C,CAoHnB;;AAEvB,aAASpf,IAAT,CAAe1C,KAAf,EAAsB8C,gBAAtB,EAAwC7G,MAAxC,EAAgD;AAC9C,UAAI,OAAO+D,KAAP,KAAiB,QAArB,EAA+B;AAC7B,eAAO+hB,UAAU,CAAC/hB,KAAD,EAAQ8C,gBAAR,CAAjB;AACD;;AAED,UAAIvC,WAAW,CAAC4V,MAAZ,CAAmBnW,KAAnB,CAAJ,EAA+B;AAC7B,eAAOgiB,aAAa,CAAChiB,KAAD,CAApB;AACD;;AAED,UAAIA,KAAK,IAAI,IAAb,EAAmB;AACjB,cAAM1D,SAAS,CACb,gFACA,sCADA,GAC0C,OAAO0D,KAFpC,CAAf;AAID;;AAED,UAAIiiB,UAAU,CAACjiB,KAAD,EAAQO,WAAR,CAAV,IACCP,KAAK,IAAIiiB,UAAU,CAACjiB,KAAK,CAACvB,MAAP,EAAe8B,WAAf,CADxB,EACsD;AACpD,eAAO2hB,eAAe,CAACliB,KAAD,EAAQ8C,gBAAR,EAA0B7G,MAA1B,CAAtB;AACD;;AAED,UAAI,OAAO+D,KAAP,KAAiB,QAArB,EAA+B;AAC7B,cAAM,IAAI1D,SAAJ,CACJ,uEADI,CAAN;AAGD;;AAED,UAAI4L,OAAO,GAAGlI,KAAK,CAACkI,OAAN,IAAiBlI,KAAK,CAACkI,OAAN,EAA/B;;AACA,UAAIA,OAAO,IAAI,IAAX,IAAmBA,OAAO,KAAKlI,KAAnC,EAA0C;AACxC,eAAO7D,MAAM,CAACuG,IAAP,CAAYwF,OAAZ,EAAqBpF,gBAArB,EAAuC7G,MAAvC,CAAP;AACD;;AAED,UAAI6C,CAAC,GAAGqjB,UAAU,CAACniB,KAAD,CAAlB;AACA,UAAIlB,CAAJ,EAAO,OAAOA,CAAP;;AAEP,UAAI,OAAO4iB,MAAP,KAAkB,WAAlB,IAAiCA,MAAM,CAACU,WAAP,IAAsB,IAAvD,IACA,OAAOpiB,KAAK,CAAC0hB,MAAM,CAACU,WAAR,CAAZ,KAAqC,UADzC,EACqD;AACnD,eAAOjmB,MAAM,CAACuG,IAAP,CACL1C,KAAK,CAAC0hB,MAAM,CAACU,WAAR,CAAL,CAA0B,QAA1B,CADK,EACgCtf,gBADhC,EACkD7G,MADlD,CAAP;AAGD;;AAED,YAAM,IAAIK,SAAJ,CACJ,gFACA,sCADA,GAC0C,OAAO0D,KAF7C,CAAN;AAID;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;;AACE7D,IAAAA,MAAM,CAACuG,IAAP,GAAc,UAAU1C,KAAV,EAAiB8C,gBAAjB,EAAmC7G,MAAnC,EAA2C;AACvD,aAAOyG,IAAI,CAAC1C,KAAD,EAAQ8C,gBAAR,EAA0B7G,MAA1B,CAAX;AACD,KAFD,CA9K0C,CAkL1C;AACA;;;AACAE,IAAAA,MAAM,CAACsL,SAAP,CAAiByZ,SAAjB,GAA6B1kB,UAAU,CAACiL,SAAxC;AACAtL,IAAAA,MAAM,CAAC+kB,SAAP,GAAmB1kB,UAAnB;;AAEA,aAAS6lB,UAAT,CAAqB3kB,IAArB,EAA2B;AACzB,UAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AAC5B,cAAM,IAAIpB,SAAJ,CAAc,wCAAd,CAAN;AACD,OAFD,MAEO,IAAIoB,IAAI,GAAG,CAAX,EAAc;AACnB,cAAM,IAAI+jB,UAAJ,CAAe,gBAAgB/jB,IAAhB,GAAuB,gCAAtC,CAAN;AACD;AACF;;AAED,aAASO,KAAT,CAAgBP,IAAhB,EAAsBjB,IAAtB,EAA4B6C,QAA5B,EAAsC;AACpC+iB,MAAAA,UAAU,CAAC3kB,IAAD,CAAV;;AACA,UAAIA,IAAI,IAAI,CAAZ,EAAe;AACb,eAAO8jB,YAAY,CAAC9jB,IAAD,CAAnB;AACD;;AACD,UAAIjB,IAAI,KAAKuG,SAAb,EAAwB;AACtB;AACA;AACA;AACA,eAAO,OAAO1D,QAAP,KAAoB,QAApB,GACHkiB,YAAY,CAAC9jB,IAAD,CAAZ,CAAmBjB,IAAnB,CAAwBA,IAAxB,EAA8B6C,QAA9B,CADG,GAEHkiB,YAAY,CAAC9jB,IAAD,CAAZ,CAAmBjB,IAAnB,CAAwBA,IAAxB,CAFJ;AAGD;;AACD,aAAO+kB,YAAY,CAAC9jB,IAAD,CAAnB;AACD;AAED;AACF;AACA;AACA;;;AACEvB,IAAAA,MAAM,CAAC8B,KAAP,GAAe,UAAUP,IAAV,EAAgBjB,IAAhB,EAAsB6C,QAAtB,EAAgC;AAC7C,aAAOrB,KAAK,CAACP,IAAD,EAAOjB,IAAP,EAAa6C,QAAb,CAAZ;AACD,KAFD;;AAIA,aAASjB,WAAT,CAAsBX,IAAtB,EAA4B;AAC1B2kB,MAAAA,UAAU,CAAC3kB,IAAD,CAAV;AACA,aAAO8jB,YAAY,CAAC9jB,IAAI,GAAG,CAAP,GAAW,CAAX,GAAe4kB,OAAO,CAAC5kB,IAAD,CAAP,GAAgB,CAAhC,CAAnB;AACD;AAED;AACF;AACA;;;AACEvB,IAAAA,MAAM,CAACkC,WAAP,GAAqB,UAAUX,IAAV,EAAgB;AACnC,aAAOW,WAAW,CAACX,IAAD,CAAlB;AACD,KAFD;AAGA;AACF;AACA;;;AACEvB,IAAAA,MAAM,CAACwG,eAAP,GAAyB,UAAUjF,IAAV,EAAgB;AACvC,aAAOW,WAAW,CAACX,IAAD,CAAlB;AACD,KAFD;;AAIA,aAASqkB,UAAT,CAAqBvjB,MAArB,EAA6Bc,QAA7B,EAAuC;AACrC,UAAI,OAAOA,QAAP,KAAoB,QAApB,IAAgCA,QAAQ,KAAK,EAAjD,EAAqD;AACnDA,QAAAA,QAAQ,GAAG,MAAX;AACD;;AAED,UAAI,CAACnD,MAAM,CAAComB,UAAP,CAAkBjjB,QAAlB,CAAL,EAAkC;AAChC,cAAM,IAAIhD,SAAJ,CAAc,uBAAuBgD,QAArC,CAAN;AACD;;AAED,UAAIrD,MAAM,GAAGsF,UAAU,CAAC/C,MAAD,EAASc,QAAT,CAAV,GAA+B,CAA5C;AACA,UAAIyD,GAAG,GAAGye,YAAY,CAACvlB,MAAD,CAAtB;AAEA,UAAIumB,MAAM,GAAGzf,GAAG,CAAC0f,KAAJ,CAAUjkB,MAAV,EAAkBc,QAAlB,CAAb;;AAEA,UAAIkjB,MAAM,KAAKvmB,MAAf,EAAuB;AACrB;AACA;AACA;AACA8G,QAAAA,GAAG,GAAGA,GAAG,CAACnD,KAAJ,CAAU,CAAV,EAAa4iB,MAAb,CAAN;AACD;;AAED,aAAOzf,GAAP;AACD;;AAED,aAASif,aAAT,CAAwBjJ,KAAxB,EAA+B;AAC7B,UAAI9c,MAAM,GAAG8c,KAAK,CAAC9c,MAAN,GAAe,CAAf,GAAmB,CAAnB,GAAuBqmB,OAAO,CAACvJ,KAAK,CAAC9c,MAAP,CAAP,GAAwB,CAA5D;AACA,UAAI8G,GAAG,GAAGye,YAAY,CAACvlB,MAAD,CAAtB;;AACA,WAAK,IAAIX,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGW,MAApB,EAA4BX,CAAC,IAAI,CAAjC,EAAoC;AAClCyH,QAAAA,GAAG,CAACzH,CAAD,CAAH,GAASyd,KAAK,CAACzd,CAAD,CAAL,GAAW,GAApB;AACD;;AACD,aAAOyH,GAAP;AACD;;AAED,aAASmf,eAAT,CAA0BnJ,KAA1B,EAAiCwI,UAAjC,EAA6CtlB,MAA7C,EAAqD;AACnD,UAAIslB,UAAU,GAAG,CAAb,IAAkBxI,KAAK,CAACxX,UAAN,GAAmBggB,UAAzC,EAAqD;AACnD,cAAM,IAAIE,UAAJ,CAAe,sCAAf,CAAN;AACD;;AAED,UAAI1I,KAAK,CAACxX,UAAN,GAAmBggB,UAAU,IAAItlB,MAAM,IAAI,CAAd,CAAjC,EAAmD;AACjD,cAAM,IAAIwlB,UAAJ,CAAe,sCAAf,CAAN;AACD;;AAED,UAAI1e,GAAJ;;AACA,UAAIwe,UAAU,KAAKve,SAAf,IAA4B/G,MAAM,KAAK+G,SAA3C,EAAsD;AACpDD,QAAAA,GAAG,GAAG,IAAIvG,UAAJ,CAAeuc,KAAf,CAAN;AACD,OAFD,MAEO,IAAI9c,MAAM,KAAK+G,SAAf,EAA0B;AAC/BD,QAAAA,GAAG,GAAG,IAAIvG,UAAJ,CAAeuc,KAAf,EAAsBwI,UAAtB,CAAN;AACD,OAFM,MAEA;AACLxe,QAAAA,GAAG,GAAG,IAAIvG,UAAJ,CAAeuc,KAAf,EAAsBwI,UAAtB,EAAkCtlB,MAAlC,CAAN;AACD,OAhBkD,CAkBnD;;;AACA8G,MAAAA,GAAG,CAACme,SAAJ,GAAgB/kB,MAAM,CAACsL,SAAvB;AACA,aAAO1E,GAAP;AACD;;AAED,aAASof,UAAT,CAAqBnM,GAArB,EAA0B;AACxB,UAAI7Z,MAAM,CAACmB,QAAP,CAAgB0Y,GAAhB,CAAJ,EAA0B;AACxB,YAAIyJ,GAAG,GAAG6C,OAAO,CAACtM,GAAG,CAAC/Z,MAAL,CAAP,GAAsB,CAAhC;AACA,YAAI8G,GAAG,GAAGye,YAAY,CAAC/B,GAAD,CAAtB;;AAEA,YAAI1c,GAAG,CAAC9G,MAAJ,KAAe,CAAnB,EAAsB;AACpB,iBAAO8G,GAAP;AACD;;AAEDiT,QAAAA,GAAG,CAAC0M,IAAJ,CAAS3f,GAAT,EAAc,CAAd,EAAiB,CAAjB,EAAoB0c,GAApB;AACA,eAAO1c,GAAP;AACD;;AAED,UAAIiT,GAAG,CAAC/Z,MAAJ,KAAe+G,SAAnB,EAA8B;AAC5B,YAAI,OAAOgT,GAAG,CAAC/Z,MAAX,KAAsB,QAAtB,IAAkC0mB,WAAW,CAAC3M,GAAG,CAAC/Z,MAAL,CAAjD,EAA+D;AAC7D,iBAAOulB,YAAY,CAAC,CAAD,CAAnB;AACD;;AACD,eAAOQ,aAAa,CAAChM,GAAD,CAApB;AACD;;AAED,UAAIA,GAAG,CAACiB,IAAJ,KAAa,QAAb,IAAyB3O,KAAK,CAACyN,OAAN,CAAcC,GAAG,CAACpQ,IAAlB,CAA7B,EAAsD;AACpD,eAAOoc,aAAa,CAAChM,GAAG,CAACpQ,IAAL,CAApB;AACD;AACF;;AAED,aAAS0c,OAAT,CAAkBrmB,MAAlB,EAA0B;AACxB;AACA;AACA,UAAIA,MAAM,IAAI2kB,YAAd,EAA4B;AAC1B,cAAM,IAAIa,UAAJ,CAAe,oDACA,UADA,GACab,YAAY,CAAClZ,QAAb,CAAsB,EAAtB,CADb,GACyC,QADxD,CAAN;AAED;;AACD,aAAOzL,MAAM,GAAG,CAAhB;AACD;;AAED,aAASgH,UAAT,CAAqBhH,MAArB,EAA6B;AAC3B,UAAI,CAACA,MAAD,IAAWA,MAAf,EAAuB;AAAE;AACvBA,QAAAA,MAAM,GAAG,CAAT;AACD;;AACD,aAAOE,MAAM,CAAC8B,KAAP,CAAa,CAAChC,MAAd,CAAP;AACD;;AAEDE,IAAAA,MAAM,CAACmB,QAAP,GAAkB,SAASA,QAAT,CAAmBwB,CAAnB,EAAsB;AACtC,aAAOA,CAAC,IAAI,IAAL,IAAaA,CAAC,CAAC8jB,SAAF,KAAgB,IAA7B,IACL9jB,CAAC,KAAK3C,MAAM,CAACsL,SADf,CADsC,CAEb;AAC1B,KAHD;;AAKAtL,IAAAA,MAAM,CAAC6N,OAAP,GAAiB,SAASA,OAAT,CAAkBrO,CAAlB,EAAqBmD,CAArB,EAAwB;AACvC,UAAImjB,UAAU,CAACtmB,CAAD,EAAIa,UAAJ,CAAd,EAA+Bb,CAAC,GAAGQ,MAAM,CAACuG,IAAP,CAAY/G,CAAZ,EAAeA,CAAC,CAACsS,MAAjB,EAAyBtS,CAAC,CAAC4F,UAA3B,CAAJ;AAC/B,UAAI0gB,UAAU,CAACnjB,CAAD,EAAItC,UAAJ,CAAd,EAA+BsC,CAAC,GAAG3C,MAAM,CAACuG,IAAP,CAAY5D,CAAZ,EAAeA,CAAC,CAACmP,MAAjB,EAAyBnP,CAAC,CAACyC,UAA3B,CAAJ;;AAC/B,UAAI,CAACpF,MAAM,CAACmB,QAAP,CAAgB3B,CAAhB,CAAD,IAAuB,CAACQ,MAAM,CAACmB,QAAP,CAAgBwB,CAAhB,CAA5B,EAAgD;AAC9C,cAAM,IAAIxC,SAAJ,CACJ,uEADI,CAAN;AAGD;;AAED,UAAIX,CAAC,KAAKmD,CAAV,EAAa,OAAO,CAAP;AAEb,UAAIpC,CAAC,GAAGf,CAAC,CAACM,MAAV;AACA,UAAIkD,CAAC,GAAGL,CAAC,CAAC7C,MAAV;;AAEA,WAAK,IAAIX,CAAC,GAAG,CAAR,EAAWmkB,GAAG,GAAGxiB,IAAI,CAACqM,GAAL,CAAS5M,CAAT,EAAYyC,CAAZ,CAAtB,EAAsC7D,CAAC,GAAGmkB,GAA1C,EAA+C,EAAEnkB,CAAjD,EAAoD;AAClD,YAAIK,CAAC,CAACL,CAAD,CAAD,KAASwD,CAAC,CAACxD,CAAD,CAAd,EAAmB;AACjBoB,UAAAA,CAAC,GAAGf,CAAC,CAACL,CAAD,CAAL;AACA6D,UAAAA,CAAC,GAAGL,CAAC,CAACxD,CAAD,CAAL;AACA;AACD;AACF;;AAED,UAAIoB,CAAC,GAAGyC,CAAR,EAAW,OAAO,CAAC,CAAR;AACX,UAAIA,CAAC,GAAGzC,CAAR,EAAW,OAAO,CAAP;AACX,aAAO,CAAP;AACD,KAzBD;;AA2BAP,IAAAA,MAAM,CAAComB,UAAP,GAAoB,SAASA,UAAT,CAAqBjjB,QAArB,EAA+B;AACjD,cAAQwB,MAAM,CAACxB,QAAD,CAAN,CAAiB6G,WAAjB,EAAR;AACE,aAAK,KAAL;AACA,aAAK,MAAL;AACA,aAAK,OAAL;AACA,aAAK,OAAL;AACA,aAAK,QAAL;AACA,aAAK,QAAL;AACA,aAAK,QAAL;AACA,aAAK,MAAL;AACA,aAAK,OAAL;AACA,aAAK,SAAL;AACA,aAAK,UAAL;AACE,iBAAO,IAAP;;AACF;AACE,iBAAO,KAAP;AAdJ;AAgBD,KAjBD;;AAmBAhK,IAAAA,MAAM,CAACwI,MAAP,GAAgB,SAASA,MAAT,CAAiBke,IAAjB,EAAuB5mB,MAAvB,EAA+B;AAC7C,UAAI,CAACqM,KAAK,CAACyN,OAAN,CAAc8M,IAAd,CAAL,EAA0B;AACxB,cAAM,IAAIvmB,SAAJ,CAAc,6CAAd,CAAN;AACD;;AAED,UAAIumB,IAAI,CAAC5mB,MAAL,KAAgB,CAApB,EAAuB;AACrB,eAAOE,MAAM,CAAC8B,KAAP,CAAa,CAAb,CAAP;AACD;;AAED,UAAI3C,CAAJ;;AACA,UAAIW,MAAM,KAAK+G,SAAf,EAA0B;AACxB/G,QAAAA,MAAM,GAAG,CAAT;;AACA,aAAKX,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGunB,IAAI,CAAC5mB,MAArB,EAA6B,EAAEX,CAA/B,EAAkC;AAChCW,UAAAA,MAAM,IAAI4mB,IAAI,CAACvnB,CAAD,CAAJ,CAAQW,MAAlB;AACD;AACF;;AAED,UAAIwC,MAAM,GAAGtC,MAAM,CAACkC,WAAP,CAAmBpC,MAAnB,CAAb;AACA,UAAImK,GAAG,GAAG,CAAV;;AACA,WAAK9K,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGunB,IAAI,CAAC5mB,MAArB,EAA6B,EAAEX,CAA/B,EAAkC;AAChC,YAAIyH,GAAG,GAAG8f,IAAI,CAACvnB,CAAD,CAAd;;AACA,YAAI2mB,UAAU,CAAClf,GAAD,EAAMvG,UAAN,CAAd,EAAiC;AAC/BuG,UAAAA,GAAG,GAAG5G,MAAM,CAACuG,IAAP,CAAYK,GAAZ,CAAN;AACD;;AACD,YAAI,CAAC5G,MAAM,CAACmB,QAAP,CAAgByF,GAAhB,CAAL,EAA2B;AACzB,gBAAM,IAAIzG,SAAJ,CAAc,6CAAd,CAAN;AACD;;AACDyG,QAAAA,GAAG,CAAC2f,IAAJ,CAASjkB,MAAT,EAAiB2H,GAAjB;AACAA,QAAAA,GAAG,IAAIrD,GAAG,CAAC9G,MAAX;AACD;;AACD,aAAOwC,MAAP;AACD,KA/BD;;AAiCA,aAAS8C,UAAT,CAAqB/C,MAArB,EAA6Bc,QAA7B,EAAuC;AACrC,UAAInD,MAAM,CAACmB,QAAP,CAAgBkB,MAAhB,CAAJ,EAA6B;AAC3B,eAAOA,MAAM,CAACvC,MAAd;AACD;;AACD,UAAIsE,WAAW,CAAC4V,MAAZ,CAAmB3X,MAAnB,KAA8ByjB,UAAU,CAACzjB,MAAD,EAAS+B,WAAT,CAA5C,EAAmE;AACjE,eAAO/B,MAAM,CAAC+C,UAAd;AACD;;AACD,UAAI,OAAO/C,MAAP,KAAkB,QAAtB,EAAgC;AAC9B,cAAM,IAAIlC,SAAJ,CACJ,+EACA,gBADA,GACmB,OAAOkC,MAFtB,CAAN;AAID;;AAED,UAAIihB,GAAG,GAAGjhB,MAAM,CAACvC,MAAjB;AACA,UAAI6mB,SAAS,GAAIC,SAAS,CAAC9mB,MAAV,GAAmB,CAAnB,IAAwB8mB,SAAS,CAAC,CAAD,CAAT,KAAiB,IAA1D;AACA,UAAI,CAACD,SAAD,IAAcrD,GAAG,KAAK,CAA1B,EAA6B,OAAO,CAAP,CAhBQ,CAkBrC;;AACA,UAAIuD,WAAW,GAAG,KAAlB;;AACA,eAAS;AACP,gBAAQ1jB,QAAR;AACE,eAAK,OAAL;AACA,eAAK,QAAL;AACA,eAAK,QAAL;AACE,mBAAOmgB,GAAP;;AACF,eAAK,MAAL;AACA,eAAK,OAAL;AACE,mBAAOwD,WAAW,CAACzkB,MAAD,CAAX,CAAoBvC,MAA3B;;AACF,eAAK,MAAL;AACA,eAAK,OAAL;AACA,eAAK,SAAL;AACA,eAAK,UAAL;AACE,mBAAOwjB,GAAG,GAAG,CAAb;;AACF,eAAK,KAAL;AACE,mBAAOA,GAAG,KAAK,CAAf;;AACF,eAAK,QAAL;AACE,mBAAOyD,aAAa,CAAC1kB,MAAD,CAAb,CAAsBvC,MAA7B;;AACF;AACE,gBAAI+mB,WAAJ,EAAiB;AACf,qBAAOF,SAAS,GAAG,CAAC,CAAJ,GAAQG,WAAW,CAACzkB,MAAD,CAAX,CAAoBvC,MAA5C,CADe,CACoC;AACpD;;AACDqD,YAAAA,QAAQ,GAAG,CAAC,KAAKA,QAAN,EAAgB6G,WAAhB,EAAX;AACA6c,YAAAA,WAAW,GAAG,IAAd;AAtBJ;AAwBD;AACF;;AACD7mB,IAAAA,MAAM,CAACoF,UAAP,GAAoBA,UAApB;;AAEA,aAAS4hB,YAAT,CAAuB7jB,QAAvB,EAAiC2Y,KAAjC,EAAwCoI,GAAxC,EAA6C;AAC3C,UAAI2C,WAAW,GAAG,KAAlB,CAD2C,CAG3C;AACA;AAEA;AACA;AACA;AACA;;AACA,UAAI/K,KAAK,KAAKjV,SAAV,IAAuBiV,KAAK,GAAG,CAAnC,EAAsC;AACpCA,QAAAA,KAAK,GAAG,CAAR;AACD,OAZ0C,CAa3C;AACA;;;AACA,UAAIA,KAAK,GAAG,KAAKhc,MAAjB,EAAyB;AACvB,eAAO,EAAP;AACD;;AAED,UAAIokB,GAAG,KAAKrd,SAAR,IAAqBqd,GAAG,GAAG,KAAKpkB,MAApC,EAA4C;AAC1CokB,QAAAA,GAAG,GAAG,KAAKpkB,MAAX;AACD;;AAED,UAAIokB,GAAG,IAAI,CAAX,EAAc;AACZ,eAAO,EAAP;AACD,OAzB0C,CA2B3C;;;AACAA,MAAAA,GAAG,MAAM,CAAT;AACApI,MAAAA,KAAK,MAAM,CAAX;;AAEA,UAAIoI,GAAG,IAAIpI,KAAX,EAAkB;AAChB,eAAO,EAAP;AACD;;AAED,UAAI,CAAC3Y,QAAL,EAAeA,QAAQ,GAAG,MAAX;;AAEf,aAAO,IAAP,EAAa;AACX,gBAAQA,QAAR;AACE,eAAK,KAAL;AACE,mBAAO+R,QAAQ,CAAC,IAAD,EAAO4G,KAAP,EAAcoI,GAAd,CAAf;;AAEF,eAAK,MAAL;AACA,eAAK,OAAL;AACE,mBAAO+C,SAAS,CAAC,IAAD,EAAOnL,KAAP,EAAcoI,GAAd,CAAhB;;AAEF,eAAK,OAAL;AACE,mBAAOgD,UAAU,CAAC,IAAD,EAAOpL,KAAP,EAAcoI,GAAd,CAAjB;;AAEF,eAAK,QAAL;AACA,eAAK,QAAL;AACE,mBAAOiD,WAAW,CAAC,IAAD,EAAOrL,KAAP,EAAcoI,GAAd,CAAlB;;AAEF,eAAK,QAAL;AACE,mBAAOkD,WAAW,CAAC,IAAD,EAAOtL,KAAP,EAAcoI,GAAd,CAAlB;;AAEF,eAAK,MAAL;AACA,eAAK,OAAL;AACA,eAAK,SAAL;AACA,eAAK,UAAL;AACE,mBAAOmD,YAAY,CAAC,IAAD,EAAOvL,KAAP,EAAcoI,GAAd,CAAnB;;AAEF;AACE,gBAAI2C,WAAJ,EAAiB,MAAM,IAAI1mB,SAAJ,CAAc,uBAAuBgD,QAArC,CAAN;AACjBA,YAAAA,QAAQ,GAAG,CAACA,QAAQ,GAAG,EAAZ,EAAgB6G,WAAhB,EAAX;AACA6c,YAAAA,WAAW,GAAG,IAAd;AA3BJ;AA6BD;AACF,KAphByC,CAshB1C;AACA;AACA;AACA;AACA;AACA;;;AACA7mB,IAAAA,MAAM,CAACsL,SAAP,CAAiBmb,SAAjB,GAA6B,IAA7B;;AAEA,aAASa,IAAT,CAAe3kB,CAAf,EAAkB3D,CAAlB,EAAqBiE,CAArB,EAAwB;AACtB,UAAI9D,CAAC,GAAGwD,CAAC,CAAC3D,CAAD,CAAT;AACA2D,MAAAA,CAAC,CAAC3D,CAAD,CAAD,GAAO2D,CAAC,CAACM,CAAD,CAAR;AACAN,MAAAA,CAAC,CAACM,CAAD,CAAD,GAAO9D,CAAP;AACD;;AAEDa,IAAAA,MAAM,CAACsL,SAAP,CAAiBic,MAAjB,GAA0B,SAASA,MAAT,GAAmB;AAC3C,UAAIjE,GAAG,GAAG,KAAKxjB,MAAf;;AACA,UAAIwjB,GAAG,GAAG,CAAN,KAAY,CAAhB,EAAmB;AACjB,cAAM,IAAIgC,UAAJ,CAAe,2CAAf,CAAN;AACD;;AACD,WAAK,IAAInmB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGmkB,GAApB,EAAyBnkB,CAAC,IAAI,CAA9B,EAAiC;AAC/BmoB,QAAAA,IAAI,CAAC,IAAD,EAAOnoB,CAAP,EAAUA,CAAC,GAAG,CAAd,CAAJ;AACD;;AACD,aAAO,IAAP;AACD,KATD;;AAWAa,IAAAA,MAAM,CAACsL,SAAP,CAAiBkc,MAAjB,GAA0B,SAASA,MAAT,GAAmB;AAC3C,UAAIlE,GAAG,GAAG,KAAKxjB,MAAf;;AACA,UAAIwjB,GAAG,GAAG,CAAN,KAAY,CAAhB,EAAmB;AACjB,cAAM,IAAIgC,UAAJ,CAAe,2CAAf,CAAN;AACD;;AACD,WAAK,IAAInmB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGmkB,GAApB,EAAyBnkB,CAAC,IAAI,CAA9B,EAAiC;AAC/BmoB,QAAAA,IAAI,CAAC,IAAD,EAAOnoB,CAAP,EAAUA,CAAC,GAAG,CAAd,CAAJ;AACAmoB,QAAAA,IAAI,CAAC,IAAD,EAAOnoB,CAAC,GAAG,CAAX,EAAcA,CAAC,GAAG,CAAlB,CAAJ;AACD;;AACD,aAAO,IAAP;AACD,KAVD;;AAYAa,IAAAA,MAAM,CAACsL,SAAP,CAAiBmc,MAAjB,GAA0B,SAASA,MAAT,GAAmB;AAC3C,UAAInE,GAAG,GAAG,KAAKxjB,MAAf;;AACA,UAAIwjB,GAAG,GAAG,CAAN,KAAY,CAAhB,EAAmB;AACjB,cAAM,IAAIgC,UAAJ,CAAe,2CAAf,CAAN;AACD;;AACD,WAAK,IAAInmB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGmkB,GAApB,EAAyBnkB,CAAC,IAAI,CAA9B,EAAiC;AAC/BmoB,QAAAA,IAAI,CAAC,IAAD,EAAOnoB,CAAP,EAAUA,CAAC,GAAG,CAAd,CAAJ;AACAmoB,QAAAA,IAAI,CAAC,IAAD,EAAOnoB,CAAC,GAAG,CAAX,EAAcA,CAAC,GAAG,CAAlB,CAAJ;AACAmoB,QAAAA,IAAI,CAAC,IAAD,EAAOnoB,CAAC,GAAG,CAAX,EAAcA,CAAC,GAAG,CAAlB,CAAJ;AACAmoB,QAAAA,IAAI,CAAC,IAAD,EAAOnoB,CAAC,GAAG,CAAX,EAAcA,CAAC,GAAG,CAAlB,CAAJ;AACD;;AACD,aAAO,IAAP;AACD,KAZD;;AAcAa,IAAAA,MAAM,CAACsL,SAAP,CAAiBC,QAAjB,GAA4B,SAASA,QAAT,GAAqB;AAC/C,UAAIzL,MAAM,GAAG,KAAKA,MAAlB;AACA,UAAIA,MAAM,KAAK,CAAf,EAAkB,OAAO,EAAP;AAClB,UAAI8mB,SAAS,CAAC9mB,MAAV,KAAqB,CAAzB,EAA4B,OAAOmnB,SAAS,CAAC,IAAD,EAAO,CAAP,EAAUnnB,MAAV,CAAhB;AAC5B,aAAOknB,YAAY,CAACU,KAAb,CAAmB,IAAnB,EAAyBd,SAAzB,CAAP;AACD,KALD;;AAOA5mB,IAAAA,MAAM,CAACsL,SAAP,CAAiBqc,cAAjB,GAAkC3nB,MAAM,CAACsL,SAAP,CAAiBC,QAAnD;;AAEAvL,IAAAA,MAAM,CAACsL,SAAP,CAAiBsc,MAAjB,GAA0B,SAASA,MAAT,CAAiBjlB,CAAjB,EAAoB;AAC5C,UAAI,CAAC3C,MAAM,CAACmB,QAAP,CAAgBwB,CAAhB,CAAL,EAAyB,MAAM,IAAIxC,SAAJ,CAAc,2BAAd,CAAN;AACzB,UAAI,SAASwC,CAAb,EAAgB,OAAO,IAAP;AAChB,aAAO3C,MAAM,CAAC6N,OAAP,CAAe,IAAf,EAAqBlL,CAArB,MAA4B,CAAnC;AACD,KAJD;;AAMA3C,IAAAA,MAAM,CAACsL,SAAP,CAAiBuc,OAAjB,GAA2B,SAASA,OAAT,GAAoB;AAC7C,UAAIlmB,GAAG,GAAG,EAAV;AACA,UAAIuL,GAAG,GAAGtN,OAAO,CAAC4kB,iBAAlB;AACA7iB,MAAAA,GAAG,GAAG,KAAK4J,QAAL,CAAc,KAAd,EAAqB,CAArB,EAAwB2B,GAAxB,EAA6B/H,OAA7B,CAAqC,SAArC,EAAgD,KAAhD,EAAuD2iB,IAAvD,EAAN;AACA,UAAI,KAAKhoB,MAAL,GAAcoN,GAAlB,EAAuBvL,GAAG,IAAI,OAAP;AACvB,aAAO,aAAaA,GAAb,GAAmB,GAA1B;AACD,KAND;;AAQA3B,IAAAA,MAAM,CAACsL,SAAP,CAAiBuC,OAAjB,GAA2B,SAASA,OAAT,CAAkBka,MAAlB,EAA0BjM,KAA1B,EAAiCoI,GAAjC,EAAsC8D,SAAtC,EAAiDC,OAAjD,EAA0D;AACnF,UAAInC,UAAU,CAACiC,MAAD,EAAS1nB,UAAT,CAAd,EAAoC;AAClC0nB,QAAAA,MAAM,GAAG/nB,MAAM,CAACuG,IAAP,CAAYwhB,MAAZ,EAAoBA,MAAM,CAACjW,MAA3B,EAAmCiW,MAAM,CAAC3iB,UAA1C,CAAT;AACD;;AACD,UAAI,CAACpF,MAAM,CAACmB,QAAP,CAAgB4mB,MAAhB,CAAL,EAA8B;AAC5B,cAAM,IAAI5nB,SAAJ,CACJ,qEACA,gBADA,GACoB,OAAO4nB,MAFvB,CAAN;AAID;;AAED,UAAIjM,KAAK,KAAKjV,SAAd,EAAyB;AACvBiV,QAAAA,KAAK,GAAG,CAAR;AACD;;AACD,UAAIoI,GAAG,KAAKrd,SAAZ,EAAuB;AACrBqd,QAAAA,GAAG,GAAG6D,MAAM,GAAGA,MAAM,CAACjoB,MAAV,GAAmB,CAA/B;AACD;;AACD,UAAIkoB,SAAS,KAAKnhB,SAAlB,EAA6B;AAC3BmhB,QAAAA,SAAS,GAAG,CAAZ;AACD;;AACD,UAAIC,OAAO,KAAKphB,SAAhB,EAA2B;AACzBohB,QAAAA,OAAO,GAAG,KAAKnoB,MAAf;AACD;;AAED,UAAIgc,KAAK,GAAG,CAAR,IAAaoI,GAAG,GAAG6D,MAAM,CAACjoB,MAA1B,IAAoCkoB,SAAS,GAAG,CAAhD,IAAqDC,OAAO,GAAG,KAAKnoB,MAAxE,EAAgF;AAC9E,cAAM,IAAIwlB,UAAJ,CAAe,oBAAf,CAAN;AACD;;AAED,UAAI0C,SAAS,IAAIC,OAAb,IAAwBnM,KAAK,IAAIoI,GAArC,EAA0C;AACxC,eAAO,CAAP;AACD;;AACD,UAAI8D,SAAS,IAAIC,OAAjB,EAA0B;AACxB,eAAO,CAAC,CAAR;AACD;;AACD,UAAInM,KAAK,IAAIoI,GAAb,EAAkB;AAChB,eAAO,CAAP;AACD;;AAEDpI,MAAAA,KAAK,MAAM,CAAX;AACAoI,MAAAA,GAAG,MAAM,CAAT;AACA8D,MAAAA,SAAS,MAAM,CAAf;AACAC,MAAAA,OAAO,MAAM,CAAb;AAEA,UAAI,SAASF,MAAb,EAAqB,OAAO,CAAP;AAErB,UAAIxnB,CAAC,GAAG0nB,OAAO,GAAGD,SAAlB;AACA,UAAIhlB,CAAC,GAAGkhB,GAAG,GAAGpI,KAAd;AACA,UAAIwH,GAAG,GAAGxiB,IAAI,CAACqM,GAAL,CAAS5M,CAAT,EAAYyC,CAAZ,CAAV;AAEA,UAAIklB,QAAQ,GAAG,KAAKzkB,KAAL,CAAWukB,SAAX,EAAsBC,OAAtB,CAAf;AACA,UAAIE,UAAU,GAAGJ,MAAM,CAACtkB,KAAP,CAAaqY,KAAb,EAAoBoI,GAApB,CAAjB;;AAEA,WAAK,IAAI/kB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGmkB,GAApB,EAAyB,EAAEnkB,CAA3B,EAA8B;AAC5B,YAAI+oB,QAAQ,CAAC/oB,CAAD,CAAR,KAAgBgpB,UAAU,CAAChpB,CAAD,CAA9B,EAAmC;AACjCoB,UAAAA,CAAC,GAAG2nB,QAAQ,CAAC/oB,CAAD,CAAZ;AACA6D,UAAAA,CAAC,GAAGmlB,UAAU,CAAChpB,CAAD,CAAd;AACA;AACD;AACF;;AAED,UAAIoB,CAAC,GAAGyC,CAAR,EAAW,OAAO,CAAC,CAAR;AACX,UAAIA,CAAC,GAAGzC,CAAR,EAAW,OAAO,CAAP;AACX,aAAO,CAAP;AACD,KA/DD,CAhmB0C,CAiqB1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,aAAS6nB,oBAAT,CAA+B9lB,MAA/B,EAAuC+lB,GAAvC,EAA4CjD,UAA5C,EAAwDjiB,QAAxD,EAAkEmlB,GAAlE,EAAuE;AACrE;AACA,UAAIhmB,MAAM,CAACxC,MAAP,KAAkB,CAAtB,EAAyB,OAAO,CAAC,CAAR,CAF4C,CAIrE;;AACA,UAAI,OAAOslB,UAAP,KAAsB,QAA1B,EAAoC;AAClCjiB,QAAAA,QAAQ,GAAGiiB,UAAX;AACAA,QAAAA,UAAU,GAAG,CAAb;AACD,OAHD,MAGO,IAAIA,UAAU,GAAG,UAAjB,EAA6B;AAClCA,QAAAA,UAAU,GAAG,UAAb;AACD,OAFM,MAEA,IAAIA,UAAU,GAAG,CAAC,UAAlB,EAA8B;AACnCA,QAAAA,UAAU,GAAG,CAAC,UAAd;AACD;;AACDA,MAAAA,UAAU,GAAG,CAACA,UAAd,CAbqE,CAa5C;;AACzB,UAAIoB,WAAW,CAACpB,UAAD,CAAf,EAA6B;AAC3B;AACAA,QAAAA,UAAU,GAAGkD,GAAG,GAAG,CAAH,GAAQhmB,MAAM,CAACxC,MAAP,GAAgB,CAAxC;AACD,OAjBoE,CAmBrE;;;AACA,UAAIslB,UAAU,GAAG,CAAjB,EAAoBA,UAAU,GAAG9iB,MAAM,CAACxC,MAAP,GAAgBslB,UAA7B;;AACpB,UAAIA,UAAU,IAAI9iB,MAAM,CAACxC,MAAzB,EAAiC;AAC/B,YAAIwoB,GAAJ,EAAS,OAAO,CAAC,CAAR,CAAT,KACKlD,UAAU,GAAG9iB,MAAM,CAACxC,MAAP,GAAgB,CAA7B;AACN,OAHD,MAGO,IAAIslB,UAAU,GAAG,CAAjB,EAAoB;AACzB,YAAIkD,GAAJ,EAASlD,UAAU,GAAG,CAAb,CAAT,KACK,OAAO,CAAC,CAAR;AACN,OA3BoE,CA6BrE;;;AACA,UAAI,OAAOiD,GAAP,KAAe,QAAnB,EAA6B;AAC3BA,QAAAA,GAAG,GAAGroB,MAAM,CAACuG,IAAP,CAAY8hB,GAAZ,EAAiBllB,QAAjB,CAAN;AACD,OAhCoE,CAkCrE;;;AACA,UAAInD,MAAM,CAACmB,QAAP,CAAgBknB,GAAhB,CAAJ,EAA0B;AACxB;AACA,YAAIA,GAAG,CAACvoB,MAAJ,KAAe,CAAnB,EAAsB;AACpB,iBAAO,CAAC,CAAR;AACD;;AACD,eAAOyoB,YAAY,CAACjmB,MAAD,EAAS+lB,GAAT,EAAcjD,UAAd,EAA0BjiB,QAA1B,EAAoCmlB,GAApC,CAAnB;AACD,OAND,MAMO,IAAI,OAAOD,GAAP,KAAe,QAAnB,EAA6B;AAClCA,QAAAA,GAAG,GAAGA,GAAG,GAAG,IAAZ,CADkC,CACjB;;AACjB,YAAI,OAAOhoB,UAAU,CAACiL,SAAX,CAAqBpG,OAA5B,KAAwC,UAA5C,EAAwD;AACtD,cAAIojB,GAAJ,EAAS;AACP,mBAAOjoB,UAAU,CAACiL,SAAX,CAAqBpG,OAArB,CAA6BrF,IAA7B,CAAkCyC,MAAlC,EAA0C+lB,GAA1C,EAA+CjD,UAA/C,CAAP;AACD,WAFD,MAEO;AACL,mBAAO/kB,UAAU,CAACiL,SAAX,CAAqBhI,WAArB,CAAiCzD,IAAjC,CAAsCyC,MAAtC,EAA8C+lB,GAA9C,EAAmDjD,UAAnD,CAAP;AACD;AACF;;AACD,eAAOmD,YAAY,CAACjmB,MAAD,EAAS,CAAE+lB,GAAF,CAAT,EAAkBjD,UAAlB,EAA8BjiB,QAA9B,EAAwCmlB,GAAxC,CAAnB;AACD;;AAED,YAAM,IAAInoB,SAAJ,CAAc,sCAAd,CAAN;AACD;;AAED,aAASooB,YAAT,CAAuB5W,GAAvB,EAA4B0W,GAA5B,EAAiCjD,UAAjC,EAA6CjiB,QAA7C,EAAuDmlB,GAAvD,EAA4D;AAC1D,UAAIE,SAAS,GAAG,CAAhB;AACA,UAAIC,SAAS,GAAG9W,GAAG,CAAC7R,MAApB;AACA,UAAI4oB,SAAS,GAAGL,GAAG,CAACvoB,MAApB;;AAEA,UAAIqD,QAAQ,KAAK0D,SAAjB,EAA4B;AAC1B1D,QAAAA,QAAQ,GAAGwB,MAAM,CAACxB,QAAD,CAAN,CAAiB6G,WAAjB,EAAX;;AACA,YAAI7G,QAAQ,KAAK,MAAb,IAAuBA,QAAQ,KAAK,OAApC,IACAA,QAAQ,KAAK,SADb,IAC0BA,QAAQ,KAAK,UAD3C,EACuD;AACrD,cAAIwO,GAAG,CAAC7R,MAAJ,GAAa,CAAb,IAAkBuoB,GAAG,CAACvoB,MAAJ,GAAa,CAAnC,EAAsC;AACpC,mBAAO,CAAC,CAAR;AACD;;AACD0oB,UAAAA,SAAS,GAAG,CAAZ;AACAC,UAAAA,SAAS,IAAI,CAAb;AACAC,UAAAA,SAAS,IAAI,CAAb;AACAtD,UAAAA,UAAU,IAAI,CAAd;AACD;AACF;;AAED,eAASuD,IAAT,CAAe/hB,GAAf,EAAoBzH,CAApB,EAAuB;AACrB,YAAIqpB,SAAS,KAAK,CAAlB,EAAqB;AACnB,iBAAO5hB,GAAG,CAACzH,CAAD,CAAV;AACD,SAFD,MAEO;AACL,iBAAOyH,GAAG,CAACgiB,YAAJ,CAAiBzpB,CAAC,GAAGqpB,SAArB,CAAP;AACD;AACF;;AAED,UAAIrpB,CAAJ;;AACA,UAAImpB,GAAJ,EAAS;AACP,YAAIO,UAAU,GAAG,CAAC,CAAlB;;AACA,aAAK1pB,CAAC,GAAGimB,UAAT,EAAqBjmB,CAAC,GAAGspB,SAAzB,EAAoCtpB,CAAC,EAArC,EAAyC;AACvC,cAAIwpB,IAAI,CAAChX,GAAD,EAAMxS,CAAN,CAAJ,KAAiBwpB,IAAI,CAACN,GAAD,EAAMQ,UAAU,KAAK,CAAC,CAAhB,GAAoB,CAApB,GAAwB1pB,CAAC,GAAG0pB,UAAlC,CAAzB,EAAwE;AACtE,gBAAIA,UAAU,KAAK,CAAC,CAApB,EAAuBA,UAAU,GAAG1pB,CAAb;AACvB,gBAAIA,CAAC,GAAG0pB,UAAJ,GAAiB,CAAjB,KAAuBH,SAA3B,EAAsC,OAAOG,UAAU,GAAGL,SAApB;AACvC,WAHD,MAGO;AACL,gBAAIK,UAAU,KAAK,CAAC,CAApB,EAAuB1pB,CAAC,IAAIA,CAAC,GAAG0pB,UAAT;AACvBA,YAAAA,UAAU,GAAG,CAAC,CAAd;AACD;AACF;AACF,OAXD,MAWO;AACL,YAAIzD,UAAU,GAAGsD,SAAb,GAAyBD,SAA7B,EAAwCrD,UAAU,GAAGqD,SAAS,GAAGC,SAAzB;;AACxC,aAAKvpB,CAAC,GAAGimB,UAAT,EAAqBjmB,CAAC,IAAI,CAA1B,EAA6BA,CAAC,EAA9B,EAAkC;AAChC,cAAI2pB,KAAK,GAAG,IAAZ;;AACA,eAAK,IAAI3mB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGumB,SAApB,EAA+BvmB,CAAC,EAAhC,EAAoC;AAClC,gBAAIwmB,IAAI,CAAChX,GAAD,EAAMxS,CAAC,GAAGgD,CAAV,CAAJ,KAAqBwmB,IAAI,CAACN,GAAD,EAAMlmB,CAAN,CAA7B,EAAuC;AACrC2mB,cAAAA,KAAK,GAAG,KAAR;AACA;AACD;AACF;;AACD,cAAIA,KAAJ,EAAW,OAAO3pB,CAAP;AACZ;AACF;;AAED,aAAO,CAAC,CAAR;AACD;;AAEDa,IAAAA,MAAM,CAACsL,SAAP,CAAiByd,QAAjB,GAA4B,SAASA,QAAT,CAAmBV,GAAnB,EAAwBjD,UAAxB,EAAoCjiB,QAApC,EAA8C;AACxE,aAAO,KAAK+B,OAAL,CAAamjB,GAAb,EAAkBjD,UAAlB,EAA8BjiB,QAA9B,MAA4C,CAAC,CAApD;AACD,KAFD;;AAIAnD,IAAAA,MAAM,CAACsL,SAAP,CAAiBpG,OAAjB,GAA2B,SAASA,OAAT,CAAkBmjB,GAAlB,EAAuBjD,UAAvB,EAAmCjiB,QAAnC,EAA6C;AACtE,aAAOilB,oBAAoB,CAAC,IAAD,EAAOC,GAAP,EAAYjD,UAAZ,EAAwBjiB,QAAxB,EAAkC,IAAlC,CAA3B;AACD,KAFD;;AAIAnD,IAAAA,MAAM,CAACsL,SAAP,CAAiBhI,WAAjB,GAA+B,SAASA,WAAT,CAAsB+kB,GAAtB,EAA2BjD,UAA3B,EAAuCjiB,QAAvC,EAAiD;AAC9E,aAAOilB,oBAAoB,CAAC,IAAD,EAAOC,GAAP,EAAYjD,UAAZ,EAAwBjiB,QAAxB,EAAkC,KAAlC,CAA3B;AACD,KAFD;;AAIA,aAAS6lB,QAAT,CAAmBpiB,GAAnB,EAAwBvE,MAAxB,EAAgCyP,MAAhC,EAAwChS,MAAxC,EAAgD;AAC9CgS,MAAAA,MAAM,GAAGhM,MAAM,CAACgM,MAAD,CAAN,IAAkB,CAA3B;AACA,UAAImX,SAAS,GAAGriB,GAAG,CAAC9G,MAAJ,GAAagS,MAA7B;;AACA,UAAI,CAAChS,MAAL,EAAa;AACXA,QAAAA,MAAM,GAAGmpB,SAAT;AACD,OAFD,MAEO;AACLnpB,QAAAA,MAAM,GAAGgG,MAAM,CAAChG,MAAD,CAAf;;AACA,YAAIA,MAAM,GAAGmpB,SAAb,EAAwB;AACtBnpB,UAAAA,MAAM,GAAGmpB,SAAT;AACD;AACF;;AAED,UAAIC,MAAM,GAAG7mB,MAAM,CAACvC,MAApB;;AAEA,UAAIA,MAAM,GAAGopB,MAAM,GAAG,CAAtB,EAAyB;AACvBppB,QAAAA,MAAM,GAAGopB,MAAM,GAAG,CAAlB;AACD;;AACD,WAAK,IAAI/pB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGW,MAApB,EAA4B,EAAEX,CAA9B,EAAiC;AAC/B,YAAIgqB,MAAM,GAAG9lB,QAAQ,CAAChB,MAAM,CAAC0C,MAAP,CAAc5F,CAAC,GAAG,CAAlB,EAAqB,CAArB,CAAD,EAA0B,EAA1B,CAArB;AACA,YAAIqnB,WAAW,CAAC2C,MAAD,CAAf,EAAyB,OAAOhqB,CAAP;AACzByH,QAAAA,GAAG,CAACkL,MAAM,GAAG3S,CAAV,CAAH,GAAkBgqB,MAAlB;AACD;;AACD,aAAOhqB,CAAP;AACD;;AAED,aAASiqB,SAAT,CAAoBxiB,GAApB,EAAyBvE,MAAzB,EAAiCyP,MAAjC,EAAyChS,MAAzC,EAAiD;AAC/C,aAAOupB,UAAU,CAACvC,WAAW,CAACzkB,MAAD,EAASuE,GAAG,CAAC9G,MAAJ,GAAagS,MAAtB,CAAZ,EAA2ClL,GAA3C,EAAgDkL,MAAhD,EAAwDhS,MAAxD,CAAjB;AACD;;AAED,aAASwpB,UAAT,CAAqB1iB,GAArB,EAA0BvE,MAA1B,EAAkCyP,MAAlC,EAA0ChS,MAA1C,EAAkD;AAChD,aAAOupB,UAAU,CAACE,YAAY,CAAClnB,MAAD,CAAb,EAAuBuE,GAAvB,EAA4BkL,MAA5B,EAAoChS,MAApC,CAAjB;AACD;;AAED,aAAS0pB,WAAT,CAAsB5iB,GAAtB,EAA2BvE,MAA3B,EAAmCyP,MAAnC,EAA2ChS,MAA3C,EAAmD;AACjD,aAAOwpB,UAAU,CAAC1iB,GAAD,EAAMvE,MAAN,EAAcyP,MAAd,EAAsBhS,MAAtB,CAAjB;AACD;;AAED,aAAS2pB,WAAT,CAAsB7iB,GAAtB,EAA2BvE,MAA3B,EAAmCyP,MAAnC,EAA2ChS,MAA3C,EAAmD;AACjD,aAAOupB,UAAU,CAACtC,aAAa,CAAC1kB,MAAD,CAAd,EAAwBuE,GAAxB,EAA6BkL,MAA7B,EAAqChS,MAArC,CAAjB;AACD;;AAED,aAAS4pB,SAAT,CAAoB9iB,GAApB,EAAyBvE,MAAzB,EAAiCyP,MAAjC,EAAyChS,MAAzC,EAAiD;AAC/C,aAAOupB,UAAU,CAACM,cAAc,CAACtnB,MAAD,EAASuE,GAAG,CAAC9G,MAAJ,GAAagS,MAAtB,CAAf,EAA8ClL,GAA9C,EAAmDkL,MAAnD,EAA2DhS,MAA3D,CAAjB;AACD;;AAEDE,IAAAA,MAAM,CAACsL,SAAP,CAAiBgb,KAAjB,GAAyB,SAASA,KAAT,CAAgBjkB,MAAhB,EAAwByP,MAAxB,EAAgChS,MAAhC,EAAwCqD,QAAxC,EAAkD;AACzE;AACA,UAAI2O,MAAM,KAAKjL,SAAf,EAA0B;AACxB1D,QAAAA,QAAQ,GAAG,MAAX;AACArD,QAAAA,MAAM,GAAG,KAAKA,MAAd;AACAgS,QAAAA,MAAM,GAAG,CAAT,CAHwB,CAI1B;AACC,OALD,MAKO,IAAIhS,MAAM,KAAK+G,SAAX,IAAwB,OAAOiL,MAAP,KAAkB,QAA9C,EAAwD;AAC7D3O,QAAAA,QAAQ,GAAG2O,MAAX;AACAhS,QAAAA,MAAM,GAAG,KAAKA,MAAd;AACAgS,QAAAA,MAAM,GAAG,CAAT,CAH6D,CAI/D;AACC,OALM,MAKA,IAAInE,QAAQ,CAACmE,MAAD,CAAZ,EAAsB;AAC3BA,QAAAA,MAAM,GAAGA,MAAM,KAAK,CAApB;;AACA,YAAInE,QAAQ,CAAC7N,MAAD,CAAZ,EAAsB;AACpBA,UAAAA,MAAM,GAAGA,MAAM,KAAK,CAApB;AACA,cAAIqD,QAAQ,KAAK0D,SAAjB,EAA4B1D,QAAQ,GAAG,MAAX;AAC7B,SAHD,MAGO;AACLA,UAAAA,QAAQ,GAAGrD,MAAX;AACAA,UAAAA,MAAM,GAAG+G,SAAT;AACD;AACF,OATM,MASA;AACL,cAAM,IAAIpH,KAAJ,CACJ,yEADI,CAAN;AAGD;;AAED,UAAIwpB,SAAS,GAAG,KAAKnpB,MAAL,GAAcgS,MAA9B;AACA,UAAIhS,MAAM,KAAK+G,SAAX,IAAwB/G,MAAM,GAAGmpB,SAArC,EAAgDnpB,MAAM,GAAGmpB,SAAT;;AAEhD,UAAK5mB,MAAM,CAACvC,MAAP,GAAgB,CAAhB,KAAsBA,MAAM,GAAG,CAAT,IAAcgS,MAAM,GAAG,CAA7C,CAAD,IAAqDA,MAAM,GAAG,KAAKhS,MAAvE,EAA+E;AAC7E,cAAM,IAAIwlB,UAAJ,CAAe,wCAAf,CAAN;AACD;;AAED,UAAI,CAACniB,QAAL,EAAeA,QAAQ,GAAG,MAAX;AAEf,UAAI0jB,WAAW,GAAG,KAAlB;;AACA,eAAS;AACP,gBAAQ1jB,QAAR;AACE,eAAK,KAAL;AACE,mBAAO6lB,QAAQ,CAAC,IAAD,EAAO3mB,MAAP,EAAeyP,MAAf,EAAuBhS,MAAvB,CAAf;;AAEF,eAAK,MAAL;AACA,eAAK,OAAL;AACE,mBAAOspB,SAAS,CAAC,IAAD,EAAO/mB,MAAP,EAAeyP,MAAf,EAAuBhS,MAAvB,CAAhB;;AAEF,eAAK,OAAL;AACE,mBAAOwpB,UAAU,CAAC,IAAD,EAAOjnB,MAAP,EAAeyP,MAAf,EAAuBhS,MAAvB,CAAjB;;AAEF,eAAK,QAAL;AACA,eAAK,QAAL;AACE,mBAAO0pB,WAAW,CAAC,IAAD,EAAOnnB,MAAP,EAAeyP,MAAf,EAAuBhS,MAAvB,CAAlB;;AAEF,eAAK,QAAL;AACE;AACA,mBAAO2pB,WAAW,CAAC,IAAD,EAAOpnB,MAAP,EAAeyP,MAAf,EAAuBhS,MAAvB,CAAlB;;AAEF,eAAK,MAAL;AACA,eAAK,OAAL;AACA,eAAK,SAAL;AACA,eAAK,UAAL;AACE,mBAAO4pB,SAAS,CAAC,IAAD,EAAOrnB,MAAP,EAAeyP,MAAf,EAAuBhS,MAAvB,CAAhB;;AAEF;AACE,gBAAI+mB,WAAJ,EAAiB,MAAM,IAAI1mB,SAAJ,CAAc,uBAAuBgD,QAArC,CAAN;AACjBA,YAAAA,QAAQ,GAAG,CAAC,KAAKA,QAAN,EAAgB6G,WAAhB,EAAX;AACA6c,YAAAA,WAAW,GAAG,IAAd;AA5BJ;AA8BD;AACF,KArED;;AAuEA7mB,IAAAA,MAAM,CAACsL,SAAP,CAAiBse,MAAjB,GAA0B,SAASA,MAAT,GAAmB;AAC3C,aAAO;AACL9O,QAAAA,IAAI,EAAE,QADD;AAELrR,QAAAA,IAAI,EAAE0C,KAAK,CAACb,SAAN,CAAgB7H,KAAhB,CAAsB5D,IAAtB,CAA2B,KAAKgqB,IAAL,IAAa,IAAxC,EAA8C,CAA9C;AAFD,OAAP;AAID,KALD;;AAOA,aAASzC,WAAT,CAAsBxgB,GAAtB,EAA2BkV,KAA3B,EAAkCoI,GAAlC,EAAuC;AACrC,UAAIpI,KAAK,KAAK,CAAV,IAAeoI,GAAG,KAAKtd,GAAG,CAAC9G,MAA/B,EAAuC;AACrC,eAAOwkB,MAAM,CAACpB,aAAP,CAAqBtc,GAArB,CAAP;AACD,OAFD,MAEO;AACL,eAAO0d,MAAM,CAACpB,aAAP,CAAqBtc,GAAG,CAACnD,KAAJ,CAAUqY,KAAV,EAAiBoI,GAAjB,CAArB,CAAP;AACD;AACF;;AAED,aAAS+C,SAAT,CAAoBrgB,GAApB,EAAyBkV,KAAzB,EAAgCoI,GAAhC,EAAqC;AACnCA,MAAAA,GAAG,GAAGpjB,IAAI,CAACqM,GAAL,CAASvG,GAAG,CAAC9G,MAAb,EAAqBokB,GAArB,CAAN;AACA,UAAIpO,GAAG,GAAG,EAAV;AAEA,UAAI3W,CAAC,GAAG2c,KAAR;;AACA,aAAO3c,CAAC,GAAG+kB,GAAX,EAAgB;AACd,YAAI4F,SAAS,GAAGljB,GAAG,CAACzH,CAAD,CAAnB;AACA,YAAI4qB,SAAS,GAAG,IAAhB;AACA,YAAIC,gBAAgB,GAAIF,SAAS,GAAG,IAAb,GAAqB,CAArB,GAClBA,SAAS,GAAG,IAAb,GAAqB,CAArB,GACGA,SAAS,GAAG,IAAb,GAAqB,CAArB,GACE,CAHR;;AAKA,YAAI3qB,CAAC,GAAG6qB,gBAAJ,IAAwB9F,GAA5B,EAAiC;AAC/B,cAAI+F,UAAJ,EAAgBC,SAAhB,EAA2BC,UAA3B,EAAuCC,aAAvC;;AAEA,kBAAQJ,gBAAR;AACE,iBAAK,CAAL;AACE,kBAAIF,SAAS,GAAG,IAAhB,EAAsB;AACpBC,gBAAAA,SAAS,GAAGD,SAAZ;AACD;;AACD;;AACF,iBAAK,CAAL;AACEG,cAAAA,UAAU,GAAGrjB,GAAG,CAACzH,CAAC,GAAG,CAAL,CAAhB;;AACA,kBAAI,CAAC8qB,UAAU,GAAG,IAAd,MAAwB,IAA5B,EAAkC;AAChCG,gBAAAA,aAAa,GAAG,CAACN,SAAS,GAAG,IAAb,KAAsB,GAAtB,GAA6BG,UAAU,GAAG,IAA1D;;AACA,oBAAIG,aAAa,GAAG,IAApB,EAA0B;AACxBL,kBAAAA,SAAS,GAAGK,aAAZ;AACD;AACF;;AACD;;AACF,iBAAK,CAAL;AACEH,cAAAA,UAAU,GAAGrjB,GAAG,CAACzH,CAAC,GAAG,CAAL,CAAhB;AACA+qB,cAAAA,SAAS,GAAGtjB,GAAG,CAACzH,CAAC,GAAG,CAAL,CAAf;;AACA,kBAAI,CAAC8qB,UAAU,GAAG,IAAd,MAAwB,IAAxB,IAAgC,CAACC,SAAS,GAAG,IAAb,MAAuB,IAA3D,EAAiE;AAC/DE,gBAAAA,aAAa,GAAG,CAACN,SAAS,GAAG,GAAb,KAAqB,GAArB,GAA2B,CAACG,UAAU,GAAG,IAAd,KAAuB,GAAlD,GAAyDC,SAAS,GAAG,IAArF;;AACA,oBAAIE,aAAa,GAAG,KAAhB,KAA0BA,aAAa,GAAG,MAAhB,IAA0BA,aAAa,GAAG,MAApE,CAAJ,EAAiF;AAC/EL,kBAAAA,SAAS,GAAGK,aAAZ;AACD;AACF;;AACD;;AACF,iBAAK,CAAL;AACEH,cAAAA,UAAU,GAAGrjB,GAAG,CAACzH,CAAC,GAAG,CAAL,CAAhB;AACA+qB,cAAAA,SAAS,GAAGtjB,GAAG,CAACzH,CAAC,GAAG,CAAL,CAAf;AACAgrB,cAAAA,UAAU,GAAGvjB,GAAG,CAACzH,CAAC,GAAG,CAAL,CAAhB;;AACA,kBAAI,CAAC8qB,UAAU,GAAG,IAAd,MAAwB,IAAxB,IAAgC,CAACC,SAAS,GAAG,IAAb,MAAuB,IAAvD,IAA+D,CAACC,UAAU,GAAG,IAAd,MAAwB,IAA3F,EAAiG;AAC/FC,gBAAAA,aAAa,GAAG,CAACN,SAAS,GAAG,GAAb,KAAqB,IAArB,GAA4B,CAACG,UAAU,GAAG,IAAd,KAAuB,GAAnD,GAAyD,CAACC,SAAS,GAAG,IAAb,KAAsB,GAA/E,GAAsFC,UAAU,GAAG,IAAnH;;AACA,oBAAIC,aAAa,GAAG,MAAhB,IAA0BA,aAAa,GAAG,QAA9C,EAAwD;AACtDL,kBAAAA,SAAS,GAAGK,aAAZ;AACD;AACF;;AAlCL;AAoCD;;AAED,YAAIL,SAAS,KAAK,IAAlB,EAAwB;AACtB;AACA;AACAA,UAAAA,SAAS,GAAG,MAAZ;AACAC,UAAAA,gBAAgB,GAAG,CAAnB;AACD,SALD,MAKO,IAAID,SAAS,GAAG,MAAhB,EAAwB;AAC7B;AACAA,UAAAA,SAAS,IAAI,OAAb;AACAjU,UAAAA,GAAG,CAACtS,IAAJ,CAASumB,SAAS,KAAK,EAAd,GAAmB,KAAnB,GAA2B,MAApC;AACAA,UAAAA,SAAS,GAAG,SAASA,SAAS,GAAG,KAAjC;AACD;;AAEDjU,QAAAA,GAAG,CAACtS,IAAJ,CAASumB,SAAT;AACA5qB,QAAAA,CAAC,IAAI6qB,gBAAL;AACD;;AAED,aAAOK,qBAAqB,CAACvU,GAAD,CAA5B;AACD,KAh/ByC,CAk/B1C;AACA;AACA;;;AACA,QAAIwU,oBAAoB,GAAG,MAA3B;;AAEA,aAASD,qBAAT,CAAgCE,UAAhC,EAA4C;AAC1C,UAAIjH,GAAG,GAAGiH,UAAU,CAACzqB,MAArB;;AACA,UAAIwjB,GAAG,IAAIgH,oBAAX,EAAiC;AAC/B,eAAO3lB,MAAM,CAACC,YAAP,CAAoB8iB,KAApB,CAA0B/iB,MAA1B,EAAkC4lB,UAAlC,CAAP,CAD+B,CACsB;AACtD,OAJyC,CAM1C;;;AACA,UAAIzU,GAAG,GAAG,EAAV;AACA,UAAI3W,CAAC,GAAG,CAAR;;AACA,aAAOA,CAAC,GAAGmkB,GAAX,EAAgB;AACdxN,QAAAA,GAAG,IAAInR,MAAM,CAACC,YAAP,CAAoB8iB,KAApB,CACL/iB,MADK,EAEL4lB,UAAU,CAAC9mB,KAAX,CAAiBtE,CAAjB,EAAoBA,CAAC,IAAImrB,oBAAzB,CAFK,CAAP;AAID;;AACD,aAAOxU,GAAP;AACD;;AAED,aAASoR,UAAT,CAAqBtgB,GAArB,EAA0BkV,KAA1B,EAAiCoI,GAAjC,EAAsC;AACpC,UAAI3a,GAAG,GAAG,EAAV;AACA2a,MAAAA,GAAG,GAAGpjB,IAAI,CAACqM,GAAL,CAASvG,GAAG,CAAC9G,MAAb,EAAqBokB,GAArB,CAAN;;AAEA,WAAK,IAAI/kB,CAAC,GAAG2c,KAAb,EAAoB3c,CAAC,GAAG+kB,GAAxB,EAA6B,EAAE/kB,CAA/B,EAAkC;AAChCoK,QAAAA,GAAG,IAAI5E,MAAM,CAACC,YAAP,CAAoBgC,GAAG,CAACzH,CAAD,CAAH,GAAS,IAA7B,CAAP;AACD;;AACD,aAAOoK,GAAP;AACD;;AAED,aAAS4d,WAAT,CAAsBvgB,GAAtB,EAA2BkV,KAA3B,EAAkCoI,GAAlC,EAAuC;AACrC,UAAI3a,GAAG,GAAG,EAAV;AACA2a,MAAAA,GAAG,GAAGpjB,IAAI,CAACqM,GAAL,CAASvG,GAAG,CAAC9G,MAAb,EAAqBokB,GAArB,CAAN;;AAEA,WAAK,IAAI/kB,CAAC,GAAG2c,KAAb,EAAoB3c,CAAC,GAAG+kB,GAAxB,EAA6B,EAAE/kB,CAA/B,EAAkC;AAChCoK,QAAAA,GAAG,IAAI5E,MAAM,CAACC,YAAP,CAAoBgC,GAAG,CAACzH,CAAD,CAAvB,CAAP;AACD;;AACD,aAAOoK,GAAP;AACD;;AAED,aAAS2L,QAAT,CAAmBtO,GAAnB,EAAwBkV,KAAxB,EAA+BoI,GAA/B,EAAoC;AAClC,UAAIZ,GAAG,GAAG1c,GAAG,CAAC9G,MAAd;AAEA,UAAI,CAACgc,KAAD,IAAUA,KAAK,GAAG,CAAtB,EAAyBA,KAAK,GAAG,CAAR;AACzB,UAAI,CAACoI,GAAD,IAAQA,GAAG,GAAG,CAAd,IAAmBA,GAAG,GAAGZ,GAA7B,EAAkCY,GAAG,GAAGZ,GAAN;AAElC,UAAItO,GAAG,GAAG,EAAV;;AACA,WAAK,IAAI7V,CAAC,GAAG2c,KAAb,EAAoB3c,CAAC,GAAG+kB,GAAxB,EAA6B,EAAE/kB,CAA/B,EAAkC;AAChC6V,QAAAA,GAAG,IAAIjN,KAAK,CAACnB,GAAG,CAACzH,CAAD,CAAJ,CAAZ;AACD;;AACD,aAAO6V,GAAP;AACD;;AAED,aAASqS,YAAT,CAAuBzgB,GAAvB,EAA4BkV,KAA5B,EAAmCoI,GAAnC,EAAwC;AACtC,UAAIrb,KAAK,GAAGjC,GAAG,CAACnD,KAAJ,CAAUqY,KAAV,EAAiBoI,GAAjB,CAAZ;AACA,UAAIpO,GAAG,GAAG,EAAV;;AACA,WAAK,IAAI3W,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG0J,KAAK,CAAC/I,MAA1B,EAAkCX,CAAC,IAAI,CAAvC,EAA0C;AACxC2W,QAAAA,GAAG,IAAInR,MAAM,CAACC,YAAP,CAAoBiE,KAAK,CAAC1J,CAAD,CAAL,GAAY0J,KAAK,CAAC1J,CAAC,GAAG,CAAL,CAAL,GAAe,GAA/C,CAAP;AACD;;AACD,aAAO2W,GAAP;AACD;;AAED9V,IAAAA,MAAM,CAACsL,SAAP,CAAiB7H,KAAjB,GAAyB,SAASA,KAAT,CAAgBqY,KAAhB,EAAuBoI,GAAvB,EAA4B;AACnD,UAAIZ,GAAG,GAAG,KAAKxjB,MAAf;AACAgc,MAAAA,KAAK,GAAG,CAAC,CAACA,KAAV;AACAoI,MAAAA,GAAG,GAAGA,GAAG,KAAKrd,SAAR,GAAoByc,GAApB,GAA0B,CAAC,CAACY,GAAlC;;AAEA,UAAIpI,KAAK,GAAG,CAAZ,EAAe;AACbA,QAAAA,KAAK,IAAIwH,GAAT;AACA,YAAIxH,KAAK,GAAG,CAAZ,EAAeA,KAAK,GAAG,CAAR;AAChB,OAHD,MAGO,IAAIA,KAAK,GAAGwH,GAAZ,EAAiB;AACtBxH,QAAAA,KAAK,GAAGwH,GAAR;AACD;;AAED,UAAIY,GAAG,GAAG,CAAV,EAAa;AACXA,QAAAA,GAAG,IAAIZ,GAAP;AACA,YAAIY,GAAG,GAAG,CAAV,EAAaA,GAAG,GAAG,CAAN;AACd,OAHD,MAGO,IAAIA,GAAG,GAAGZ,GAAV,EAAe;AACpBY,QAAAA,GAAG,GAAGZ,GAAN;AACD;;AAED,UAAIY,GAAG,GAAGpI,KAAV,EAAiBoI,GAAG,GAAGpI,KAAN;AAEjB,UAAI0O,MAAM,GAAG,KAAK1T,QAAL,CAAcgF,KAAd,EAAqBoI,GAArB,CAAb,CArBmD,CAsBnD;;AACAsG,MAAAA,MAAM,CAACzF,SAAP,GAAmB/kB,MAAM,CAACsL,SAA1B;AACA,aAAOkf,MAAP;AACD,KAzBD;AA2BA;AACF;AACA;;;AACE,aAASC,WAAT,CAAsB3Y,MAAtB,EAA8B4Y,GAA9B,EAAmC5qB,MAAnC,EAA2C;AACzC,UAAKgS,MAAM,GAAG,CAAV,KAAiB,CAAjB,IAAsBA,MAAM,GAAG,CAAnC,EAAsC,MAAM,IAAIwT,UAAJ,CAAe,oBAAf,CAAN;AACtC,UAAIxT,MAAM,GAAG4Y,GAAT,GAAe5qB,MAAnB,EAA2B,MAAM,IAAIwlB,UAAJ,CAAe,uCAAf,CAAN;AAC5B;;AAEDtlB,IAAAA,MAAM,CAACsL,SAAP,CAAiBqf,UAAjB,GAA8B,SAASA,UAAT,CAAqB7Y,MAArB,EAA6B1M,UAA7B,EAAyCwlB,QAAzC,EAAmD;AAC/E9Y,MAAAA,MAAM,GAAGA,MAAM,KAAK,CAApB;AACA1M,MAAAA,UAAU,GAAGA,UAAU,KAAK,CAA5B;AACA,UAAI,CAACwlB,QAAL,EAAeH,WAAW,CAAC3Y,MAAD,EAAS1M,UAAT,EAAqB,KAAKtF,MAA1B,CAAX;AAEf,UAAIuoB,GAAG,GAAG,KAAKvW,MAAL,CAAV;AACA,UAAI+Y,GAAG,GAAG,CAAV;AACA,UAAI1rB,CAAC,GAAG,CAAR;;AACA,aAAO,EAAEA,CAAF,GAAMiG,UAAN,KAAqBylB,GAAG,IAAI,KAA5B,CAAP,EAA2C;AACzCxC,QAAAA,GAAG,IAAI,KAAKvW,MAAM,GAAG3S,CAAd,IAAmB0rB,GAA1B;AACD;;AAED,aAAOxC,GAAP;AACD,KAbD;;AAeAroB,IAAAA,MAAM,CAACsL,SAAP,CAAiBwf,UAAjB,GAA8B,SAASA,UAAT,CAAqBhZ,MAArB,EAA6B1M,UAA7B,EAAyCwlB,QAAzC,EAAmD;AAC/E9Y,MAAAA,MAAM,GAAGA,MAAM,KAAK,CAApB;AACA1M,MAAAA,UAAU,GAAGA,UAAU,KAAK,CAA5B;;AACA,UAAI,CAACwlB,QAAL,EAAe;AACbH,QAAAA,WAAW,CAAC3Y,MAAD,EAAS1M,UAAT,EAAqB,KAAKtF,MAA1B,CAAX;AACD;;AAED,UAAIuoB,GAAG,GAAG,KAAKvW,MAAM,GAAG,EAAE1M,UAAhB,CAAV;AACA,UAAIylB,GAAG,GAAG,CAAV;;AACA,aAAOzlB,UAAU,GAAG,CAAb,KAAmBylB,GAAG,IAAI,KAA1B,CAAP,EAAyC;AACvCxC,QAAAA,GAAG,IAAI,KAAKvW,MAAM,GAAG,EAAE1M,UAAhB,IAA8BylB,GAArC;AACD;;AAED,aAAOxC,GAAP;AACD,KAdD;;AAgBAroB,IAAAA,MAAM,CAACsL,SAAP,CAAiByf,SAAjB,GAA6B,SAASA,SAAT,CAAoBjZ,MAApB,EAA4B8Y,QAA5B,EAAsC;AACjE9Y,MAAAA,MAAM,GAAGA,MAAM,KAAK,CAApB;AACA,UAAI,CAAC8Y,QAAL,EAAeH,WAAW,CAAC3Y,MAAD,EAAS,CAAT,EAAY,KAAKhS,MAAjB,CAAX;AACf,aAAO,KAAKgS,MAAL,CAAP;AACD,KAJD;;AAMA9R,IAAAA,MAAM,CAACsL,SAAP,CAAiB0f,YAAjB,GAAgC,SAASA,YAAT,CAAuBlZ,MAAvB,EAA+B8Y,QAA/B,EAAyC;AACvE9Y,MAAAA,MAAM,GAAGA,MAAM,KAAK,CAApB;AACA,UAAI,CAAC8Y,QAAL,EAAeH,WAAW,CAAC3Y,MAAD,EAAS,CAAT,EAAY,KAAKhS,MAAjB,CAAX;AACf,aAAO,KAAKgS,MAAL,IAAgB,KAAKA,MAAM,GAAG,CAAd,KAAoB,CAA3C;AACD,KAJD;;AAMA9R,IAAAA,MAAM,CAACsL,SAAP,CAAiBsd,YAAjB,GAAgC,SAASA,YAAT,CAAuB9W,MAAvB,EAA+B8Y,QAA/B,EAAyC;AACvE9Y,MAAAA,MAAM,GAAGA,MAAM,KAAK,CAApB;AACA,UAAI,CAAC8Y,QAAL,EAAeH,WAAW,CAAC3Y,MAAD,EAAS,CAAT,EAAY,KAAKhS,MAAjB,CAAX;AACf,aAAQ,KAAKgS,MAAL,KAAgB,CAAjB,GAAsB,KAAKA,MAAM,GAAG,CAAd,CAA7B;AACD,KAJD;;AAMA9R,IAAAA,MAAM,CAACsL,SAAP,CAAiB2f,YAAjB,GAAgC,SAASA,YAAT,CAAuBnZ,MAAvB,EAA+B8Y,QAA/B,EAAyC;AACvE9Y,MAAAA,MAAM,GAAGA,MAAM,KAAK,CAApB;AACA,UAAI,CAAC8Y,QAAL,EAAeH,WAAW,CAAC3Y,MAAD,EAAS,CAAT,EAAY,KAAKhS,MAAjB,CAAX;AAEf,aAAO,CAAE,KAAKgS,MAAL,CAAD,GACH,KAAKA,MAAM,GAAG,CAAd,KAAoB,CADjB,GAEH,KAAKA,MAAM,GAAG,CAAd,KAAoB,EAFlB,IAGF,KAAKA,MAAM,GAAG,CAAd,IAAmB,SAHxB;AAID,KARD;;AAUA9R,IAAAA,MAAM,CAACsL,SAAP,CAAiBmH,YAAjB,GAAgC,SAASA,YAAT,CAAuBX,MAAvB,EAA+B8Y,QAA/B,EAAyC;AACvE9Y,MAAAA,MAAM,GAAGA,MAAM,KAAK,CAApB;AACA,UAAI,CAAC8Y,QAAL,EAAeH,WAAW,CAAC3Y,MAAD,EAAS,CAAT,EAAY,KAAKhS,MAAjB,CAAX;AAEf,aAAQ,KAAKgS,MAAL,IAAe,SAAhB,IACH,KAAKA,MAAM,GAAG,CAAd,KAAoB,EAArB,GACA,KAAKA,MAAM,GAAG,CAAd,KAAoB,CADpB,GAED,KAAKA,MAAM,GAAG,CAAd,CAHK,CAAP;AAID,KARD;;AAUA9R,IAAAA,MAAM,CAACsL,SAAP,CAAiB4f,SAAjB,GAA6B,SAASA,SAAT,CAAoBpZ,MAApB,EAA4B1M,UAA5B,EAAwCwlB,QAAxC,EAAkD;AAC7E9Y,MAAAA,MAAM,GAAGA,MAAM,KAAK,CAApB;AACA1M,MAAAA,UAAU,GAAGA,UAAU,KAAK,CAA5B;AACA,UAAI,CAACwlB,QAAL,EAAeH,WAAW,CAAC3Y,MAAD,EAAS1M,UAAT,EAAqB,KAAKtF,MAA1B,CAAX;AAEf,UAAIuoB,GAAG,GAAG,KAAKvW,MAAL,CAAV;AACA,UAAI+Y,GAAG,GAAG,CAAV;AACA,UAAI1rB,CAAC,GAAG,CAAR;;AACA,aAAO,EAAEA,CAAF,GAAMiG,UAAN,KAAqBylB,GAAG,IAAI,KAA5B,CAAP,EAA2C;AACzCxC,QAAAA,GAAG,IAAI,KAAKvW,MAAM,GAAG3S,CAAd,IAAmB0rB,GAA1B;AACD;;AACDA,MAAAA,GAAG,IAAI,IAAP;AAEA,UAAIxC,GAAG,IAAIwC,GAAX,EAAgBxC,GAAG,IAAIvnB,IAAI,CAACmP,GAAL,CAAS,CAAT,EAAY,IAAI7K,UAAhB,CAAP;AAEhB,aAAOijB,GAAP;AACD,KAhBD;;AAkBAroB,IAAAA,MAAM,CAACsL,SAAP,CAAiB6f,SAAjB,GAA6B,SAASA,SAAT,CAAoBrZ,MAApB,EAA4B1M,UAA5B,EAAwCwlB,QAAxC,EAAkD;AAC7E9Y,MAAAA,MAAM,GAAGA,MAAM,KAAK,CAApB;AACA1M,MAAAA,UAAU,GAAGA,UAAU,KAAK,CAA5B;AACA,UAAI,CAACwlB,QAAL,EAAeH,WAAW,CAAC3Y,MAAD,EAAS1M,UAAT,EAAqB,KAAKtF,MAA1B,CAAX;AAEf,UAAIX,CAAC,GAAGiG,UAAR;AACA,UAAIylB,GAAG,GAAG,CAAV;AACA,UAAIxC,GAAG,GAAG,KAAKvW,MAAM,GAAG,EAAE3S,CAAhB,CAAV;;AACA,aAAOA,CAAC,GAAG,CAAJ,KAAU0rB,GAAG,IAAI,KAAjB,CAAP,EAAgC;AAC9BxC,QAAAA,GAAG,IAAI,KAAKvW,MAAM,GAAG,EAAE3S,CAAhB,IAAqB0rB,GAA5B;AACD;;AACDA,MAAAA,GAAG,IAAI,IAAP;AAEA,UAAIxC,GAAG,IAAIwC,GAAX,EAAgBxC,GAAG,IAAIvnB,IAAI,CAACmP,GAAL,CAAS,CAAT,EAAY,IAAI7K,UAAhB,CAAP;AAEhB,aAAOijB,GAAP;AACD,KAhBD;;AAkBAroB,IAAAA,MAAM,CAACsL,SAAP,CAAiB8f,QAAjB,GAA4B,SAASA,QAAT,CAAmBtZ,MAAnB,EAA2B8Y,QAA3B,EAAqC;AAC/D9Y,MAAAA,MAAM,GAAGA,MAAM,KAAK,CAApB;AACA,UAAI,CAAC8Y,QAAL,EAAeH,WAAW,CAAC3Y,MAAD,EAAS,CAAT,EAAY,KAAKhS,MAAjB,CAAX;AACf,UAAI,EAAE,KAAKgS,MAAL,IAAe,IAAjB,CAAJ,EAA4B,OAAQ,KAAKA,MAAL,CAAR;AAC5B,aAAQ,CAAC,OAAO,KAAKA,MAAL,CAAP,GAAsB,CAAvB,IAA4B,CAAC,CAArC;AACD,KALD;;AAOA9R,IAAAA,MAAM,CAACsL,SAAP,CAAiB+f,WAAjB,GAA+B,SAASA,WAAT,CAAsBvZ,MAAtB,EAA8B8Y,QAA9B,EAAwC;AACrE9Y,MAAAA,MAAM,GAAGA,MAAM,KAAK,CAApB;AACA,UAAI,CAAC8Y,QAAL,EAAeH,WAAW,CAAC3Y,MAAD,EAAS,CAAT,EAAY,KAAKhS,MAAjB,CAAX;AACf,UAAIuoB,GAAG,GAAG,KAAKvW,MAAL,IAAgB,KAAKA,MAAM,GAAG,CAAd,KAAoB,CAA9C;AACA,aAAQuW,GAAG,GAAG,MAAP,GAAiBA,GAAG,GAAG,UAAvB,GAAoCA,GAA3C;AACD,KALD;;AAOAroB,IAAAA,MAAM,CAACsL,SAAP,CAAiBggB,WAAjB,GAA+B,SAASA,WAAT,CAAsBxZ,MAAtB,EAA8B8Y,QAA9B,EAAwC;AACrE9Y,MAAAA,MAAM,GAAGA,MAAM,KAAK,CAApB;AACA,UAAI,CAAC8Y,QAAL,EAAeH,WAAW,CAAC3Y,MAAD,EAAS,CAAT,EAAY,KAAKhS,MAAjB,CAAX;AACf,UAAIuoB,GAAG,GAAG,KAAKvW,MAAM,GAAG,CAAd,IAAoB,KAAKA,MAAL,KAAgB,CAA9C;AACA,aAAQuW,GAAG,GAAG,MAAP,GAAiBA,GAAG,GAAG,UAAvB,GAAoCA,GAA3C;AACD,KALD;;AAOAroB,IAAAA,MAAM,CAACsL,SAAP,CAAiBigB,WAAjB,GAA+B,SAASA,WAAT,CAAsBzZ,MAAtB,EAA8B8Y,QAA9B,EAAwC;AACrE9Y,MAAAA,MAAM,GAAGA,MAAM,KAAK,CAApB;AACA,UAAI,CAAC8Y,QAAL,EAAeH,WAAW,CAAC3Y,MAAD,EAAS,CAAT,EAAY,KAAKhS,MAAjB,CAAX;AAEf,aAAQ,KAAKgS,MAAL,CAAD,GACJ,KAAKA,MAAM,GAAG,CAAd,KAAoB,CADhB,GAEJ,KAAKA,MAAM,GAAG,CAAd,KAAoB,EAFhB,GAGJ,KAAKA,MAAM,GAAG,CAAd,KAAoB,EAHvB;AAID,KARD;;AAUA9R,IAAAA,MAAM,CAACsL,SAAP,CAAiBkgB,WAAjB,GAA+B,SAASA,WAAT,CAAsB1Z,MAAtB,EAA8B8Y,QAA9B,EAAwC;AACrE9Y,MAAAA,MAAM,GAAGA,MAAM,KAAK,CAApB;AACA,UAAI,CAAC8Y,QAAL,EAAeH,WAAW,CAAC3Y,MAAD,EAAS,CAAT,EAAY,KAAKhS,MAAjB,CAAX;AAEf,aAAQ,KAAKgS,MAAL,KAAgB,EAAjB,GACJ,KAAKA,MAAM,GAAG,CAAd,KAAoB,EADhB,GAEJ,KAAKA,MAAM,GAAG,CAAd,KAAoB,CAFhB,GAGJ,KAAKA,MAAM,GAAG,CAAd,CAHH;AAID,KARD;;AAUA9R,IAAAA,MAAM,CAACsL,SAAP,CAAiBmgB,WAAjB,GAA+B,SAASA,WAAT,CAAsB3Z,MAAtB,EAA8B8Y,QAA9B,EAAwC;AACrE9Y,MAAAA,MAAM,GAAGA,MAAM,KAAK,CAApB;AACA,UAAI,CAAC8Y,QAAL,EAAeH,WAAW,CAAC3Y,MAAD,EAAS,CAAT,EAAY,KAAKhS,MAAjB,CAAX;AACf,aAAOykB,OAAO,CAACoE,IAAR,CAAa,IAAb,EAAmB7W,MAAnB,EAA2B,IAA3B,EAAiC,EAAjC,EAAqC,CAArC,CAAP;AACD,KAJD;;AAMA9R,IAAAA,MAAM,CAACsL,SAAP,CAAiBogB,WAAjB,GAA+B,SAASA,WAAT,CAAsB5Z,MAAtB,EAA8B8Y,QAA9B,EAAwC;AACrE9Y,MAAAA,MAAM,GAAGA,MAAM,KAAK,CAApB;AACA,UAAI,CAAC8Y,QAAL,EAAeH,WAAW,CAAC3Y,MAAD,EAAS,CAAT,EAAY,KAAKhS,MAAjB,CAAX;AACf,aAAOykB,OAAO,CAACoE,IAAR,CAAa,IAAb,EAAmB7W,MAAnB,EAA2B,KAA3B,EAAkC,EAAlC,EAAsC,CAAtC,CAAP;AACD,KAJD;;AAMA9R,IAAAA,MAAM,CAACsL,SAAP,CAAiBqgB,YAAjB,GAAgC,SAASA,YAAT,CAAuB7Z,MAAvB,EAA+B8Y,QAA/B,EAAyC;AACvE9Y,MAAAA,MAAM,GAAGA,MAAM,KAAK,CAApB;AACA,UAAI,CAAC8Y,QAAL,EAAeH,WAAW,CAAC3Y,MAAD,EAAS,CAAT,EAAY,KAAKhS,MAAjB,CAAX;AACf,aAAOykB,OAAO,CAACoE,IAAR,CAAa,IAAb,EAAmB7W,MAAnB,EAA2B,IAA3B,EAAiC,EAAjC,EAAqC,CAArC,CAAP;AACD,KAJD;;AAMA9R,IAAAA,MAAM,CAACsL,SAAP,CAAiBsgB,YAAjB,GAAgC,SAASA,YAAT,CAAuB9Z,MAAvB,EAA+B8Y,QAA/B,EAAyC;AACvE9Y,MAAAA,MAAM,GAAGA,MAAM,KAAK,CAApB;AACA,UAAI,CAAC8Y,QAAL,EAAeH,WAAW,CAAC3Y,MAAD,EAAS,CAAT,EAAY,KAAKhS,MAAjB,CAAX;AACf,aAAOykB,OAAO,CAACoE,IAAR,CAAa,IAAb,EAAmB7W,MAAnB,EAA2B,KAA3B,EAAkC,EAAlC,EAAsC,CAAtC,CAAP;AACD,KAJD;;AAMA,aAAS+Z,QAAT,CAAmBjlB,GAAnB,EAAwB/C,KAAxB,EAA+BiO,MAA/B,EAAuC4Y,GAAvC,EAA4Cxd,GAA5C,EAAiDC,GAAjD,EAAsD;AACpD,UAAI,CAACnN,MAAM,CAACmB,QAAP,CAAgByF,GAAhB,CAAL,EAA2B,MAAM,IAAIzG,SAAJ,CAAc,6CAAd,CAAN;AAC3B,UAAI0D,KAAK,GAAGqJ,GAAR,IAAerJ,KAAK,GAAGsJ,GAA3B,EAAgC,MAAM,IAAImY,UAAJ,CAAe,mCAAf,CAAN;AAChC,UAAIxT,MAAM,GAAG4Y,GAAT,GAAe9jB,GAAG,CAAC9G,MAAvB,EAA+B,MAAM,IAAIwlB,UAAJ,CAAe,oBAAf,CAAN;AAChC;;AAEDtlB,IAAAA,MAAM,CAACsL,SAAP,CAAiBwgB,WAAjB,GAA+B,SAASA,WAAT,CAAsBjoB,KAAtB,EAA6BiO,MAA7B,EAAqC1M,UAArC,EAAiDwlB,QAAjD,EAA2D;AACxF/mB,MAAAA,KAAK,GAAG,CAACA,KAAT;AACAiO,MAAAA,MAAM,GAAGA,MAAM,KAAK,CAApB;AACA1M,MAAAA,UAAU,GAAGA,UAAU,KAAK,CAA5B;;AACA,UAAI,CAACwlB,QAAL,EAAe;AACb,YAAImB,QAAQ,GAAGjrB,IAAI,CAACmP,GAAL,CAAS,CAAT,EAAY,IAAI7K,UAAhB,IAA8B,CAA7C;AACAymB,QAAAA,QAAQ,CAAC,IAAD,EAAOhoB,KAAP,EAAciO,MAAd,EAAsB1M,UAAtB,EAAkC2mB,QAAlC,EAA4C,CAA5C,CAAR;AACD;;AAED,UAAIlB,GAAG,GAAG,CAAV;AACA,UAAI1rB,CAAC,GAAG,CAAR;AACA,WAAK2S,MAAL,IAAejO,KAAK,GAAG,IAAvB;;AACA,aAAO,EAAE1E,CAAF,GAAMiG,UAAN,KAAqBylB,GAAG,IAAI,KAA5B,CAAP,EAA2C;AACzC,aAAK/Y,MAAM,GAAG3S,CAAd,IAAoB0E,KAAK,GAAGgnB,GAAT,GAAgB,IAAnC;AACD;;AAED,aAAO/Y,MAAM,GAAG1M,UAAhB;AACD,KAjBD;;AAmBApF,IAAAA,MAAM,CAACsL,SAAP,CAAiB0gB,WAAjB,GAA+B,SAASA,WAAT,CAAsBnoB,KAAtB,EAA6BiO,MAA7B,EAAqC1M,UAArC,EAAiDwlB,QAAjD,EAA2D;AACxF/mB,MAAAA,KAAK,GAAG,CAACA,KAAT;AACAiO,MAAAA,MAAM,GAAGA,MAAM,KAAK,CAApB;AACA1M,MAAAA,UAAU,GAAGA,UAAU,KAAK,CAA5B;;AACA,UAAI,CAACwlB,QAAL,EAAe;AACb,YAAImB,QAAQ,GAAGjrB,IAAI,CAACmP,GAAL,CAAS,CAAT,EAAY,IAAI7K,UAAhB,IAA8B,CAA7C;AACAymB,QAAAA,QAAQ,CAAC,IAAD,EAAOhoB,KAAP,EAAciO,MAAd,EAAsB1M,UAAtB,EAAkC2mB,QAAlC,EAA4C,CAA5C,CAAR;AACD;;AAED,UAAI5sB,CAAC,GAAGiG,UAAU,GAAG,CAArB;AACA,UAAIylB,GAAG,GAAG,CAAV;AACA,WAAK/Y,MAAM,GAAG3S,CAAd,IAAmB0E,KAAK,GAAG,IAA3B;;AACA,aAAO,EAAE1E,CAAF,IAAO,CAAP,KAAa0rB,GAAG,IAAI,KAApB,CAAP,EAAmC;AACjC,aAAK/Y,MAAM,GAAG3S,CAAd,IAAoB0E,KAAK,GAAGgnB,GAAT,GAAgB,IAAnC;AACD;;AAED,aAAO/Y,MAAM,GAAG1M,UAAhB;AACD,KAjBD;;AAmBApF,IAAAA,MAAM,CAACsL,SAAP,CAAiB2gB,UAAjB,GAA8B,SAASA,UAAT,CAAqBpoB,KAArB,EAA4BiO,MAA5B,EAAoC8Y,QAApC,EAA8C;AAC1E/mB,MAAAA,KAAK,GAAG,CAACA,KAAT;AACAiO,MAAAA,MAAM,GAAGA,MAAM,KAAK,CAApB;AACA,UAAI,CAAC8Y,QAAL,EAAeiB,QAAQ,CAAC,IAAD,EAAOhoB,KAAP,EAAciO,MAAd,EAAsB,CAAtB,EAAyB,IAAzB,EAA+B,CAA/B,CAAR;AACf,WAAKA,MAAL,IAAgBjO,KAAK,GAAG,IAAxB;AACA,aAAOiO,MAAM,GAAG,CAAhB;AACD,KAND;;AAQA9R,IAAAA,MAAM,CAACsL,SAAP,CAAiB4gB,aAAjB,GAAiC,SAASA,aAAT,CAAwBroB,KAAxB,EAA+BiO,MAA/B,EAAuC8Y,QAAvC,EAAiD;AAChF/mB,MAAAA,KAAK,GAAG,CAACA,KAAT;AACAiO,MAAAA,MAAM,GAAGA,MAAM,KAAK,CAApB;AACA,UAAI,CAAC8Y,QAAL,EAAeiB,QAAQ,CAAC,IAAD,EAAOhoB,KAAP,EAAciO,MAAd,EAAsB,CAAtB,EAAyB,MAAzB,EAAiC,CAAjC,CAAR;AACf,WAAKA,MAAL,IAAgBjO,KAAK,GAAG,IAAxB;AACA,WAAKiO,MAAM,GAAG,CAAd,IAAoBjO,KAAK,KAAK,CAA9B;AACA,aAAOiO,MAAM,GAAG,CAAhB;AACD,KAPD;;AASA9R,IAAAA,MAAM,CAACsL,SAAP,CAAiB6gB,aAAjB,GAAiC,SAASA,aAAT,CAAwBtoB,KAAxB,EAA+BiO,MAA/B,EAAuC8Y,QAAvC,EAAiD;AAChF/mB,MAAAA,KAAK,GAAG,CAACA,KAAT;AACAiO,MAAAA,MAAM,GAAGA,MAAM,KAAK,CAApB;AACA,UAAI,CAAC8Y,QAAL,EAAeiB,QAAQ,CAAC,IAAD,EAAOhoB,KAAP,EAAciO,MAAd,EAAsB,CAAtB,EAAyB,MAAzB,EAAiC,CAAjC,CAAR;AACf,WAAKA,MAAL,IAAgBjO,KAAK,KAAK,CAA1B;AACA,WAAKiO,MAAM,GAAG,CAAd,IAAoBjO,KAAK,GAAG,IAA5B;AACA,aAAOiO,MAAM,GAAG,CAAhB;AACD,KAPD;;AASA9R,IAAAA,MAAM,CAACsL,SAAP,CAAiB8gB,aAAjB,GAAiC,SAASA,aAAT,CAAwBvoB,KAAxB,EAA+BiO,MAA/B,EAAuC8Y,QAAvC,EAAiD;AAChF/mB,MAAAA,KAAK,GAAG,CAACA,KAAT;AACAiO,MAAAA,MAAM,GAAGA,MAAM,KAAK,CAApB;AACA,UAAI,CAAC8Y,QAAL,EAAeiB,QAAQ,CAAC,IAAD,EAAOhoB,KAAP,EAAciO,MAAd,EAAsB,CAAtB,EAAyB,UAAzB,EAAqC,CAArC,CAAR;AACf,WAAKA,MAAM,GAAG,CAAd,IAAoBjO,KAAK,KAAK,EAA9B;AACA,WAAKiO,MAAM,GAAG,CAAd,IAAoBjO,KAAK,KAAK,EAA9B;AACA,WAAKiO,MAAM,GAAG,CAAd,IAAoBjO,KAAK,KAAK,CAA9B;AACA,WAAKiO,MAAL,IAAgBjO,KAAK,GAAG,IAAxB;AACA,aAAOiO,MAAM,GAAG,CAAhB;AACD,KATD;;AAWA9R,IAAAA,MAAM,CAACsL,SAAP,CAAiBwH,aAAjB,GAAiC,SAASA,aAAT,CAAwBjP,KAAxB,EAA+BiO,MAA/B,EAAuC8Y,QAAvC,EAAiD;AAChF/mB,MAAAA,KAAK,GAAG,CAACA,KAAT;AACAiO,MAAAA,MAAM,GAAGA,MAAM,KAAK,CAApB;AACA,UAAI,CAAC8Y,QAAL,EAAeiB,QAAQ,CAAC,IAAD,EAAOhoB,KAAP,EAAciO,MAAd,EAAsB,CAAtB,EAAyB,UAAzB,EAAqC,CAArC,CAAR;AACf,WAAKA,MAAL,IAAgBjO,KAAK,KAAK,EAA1B;AACA,WAAKiO,MAAM,GAAG,CAAd,IAAoBjO,KAAK,KAAK,EAA9B;AACA,WAAKiO,MAAM,GAAG,CAAd,IAAoBjO,KAAK,KAAK,CAA9B;AACA,WAAKiO,MAAM,GAAG,CAAd,IAAoBjO,KAAK,GAAG,IAA5B;AACA,aAAOiO,MAAM,GAAG,CAAhB;AACD,KATD;;AAWA9R,IAAAA,MAAM,CAACsL,SAAP,CAAiB+gB,UAAjB,GAA8B,SAASA,UAAT,CAAqBxoB,KAArB,EAA4BiO,MAA5B,EAAoC1M,UAApC,EAAgDwlB,QAAhD,EAA0D;AACtF/mB,MAAAA,KAAK,GAAG,CAACA,KAAT;AACAiO,MAAAA,MAAM,GAAGA,MAAM,KAAK,CAApB;;AACA,UAAI,CAAC8Y,QAAL,EAAe;AACb,YAAI0B,KAAK,GAAGxrB,IAAI,CAACmP,GAAL,CAAS,CAAT,EAAa,IAAI7K,UAAL,GAAmB,CAA/B,CAAZ;AAEAymB,QAAAA,QAAQ,CAAC,IAAD,EAAOhoB,KAAP,EAAciO,MAAd,EAAsB1M,UAAtB,EAAkCknB,KAAK,GAAG,CAA1C,EAA6C,CAACA,KAA9C,CAAR;AACD;;AAED,UAAIntB,CAAC,GAAG,CAAR;AACA,UAAI0rB,GAAG,GAAG,CAAV;AACA,UAAI0B,GAAG,GAAG,CAAV;AACA,WAAKza,MAAL,IAAejO,KAAK,GAAG,IAAvB;;AACA,aAAO,EAAE1E,CAAF,GAAMiG,UAAN,KAAqBylB,GAAG,IAAI,KAA5B,CAAP,EAA2C;AACzC,YAAIhnB,KAAK,GAAG,CAAR,IAAa0oB,GAAG,KAAK,CAArB,IAA0B,KAAKza,MAAM,GAAG3S,CAAT,GAAa,CAAlB,MAAyB,CAAvD,EAA0D;AACxDotB,UAAAA,GAAG,GAAG,CAAN;AACD;;AACD,aAAKza,MAAM,GAAG3S,CAAd,IAAmB,CAAE0E,KAAK,GAAGgnB,GAAT,IAAiB,CAAlB,IAAuB0B,GAAvB,GAA6B,IAAhD;AACD;;AAED,aAAOza,MAAM,GAAG1M,UAAhB;AACD,KArBD;;AAuBApF,IAAAA,MAAM,CAACsL,SAAP,CAAiBkhB,UAAjB,GAA8B,SAASA,UAAT,CAAqB3oB,KAArB,EAA4BiO,MAA5B,EAAoC1M,UAApC,EAAgDwlB,QAAhD,EAA0D;AACtF/mB,MAAAA,KAAK,GAAG,CAACA,KAAT;AACAiO,MAAAA,MAAM,GAAGA,MAAM,KAAK,CAApB;;AACA,UAAI,CAAC8Y,QAAL,EAAe;AACb,YAAI0B,KAAK,GAAGxrB,IAAI,CAACmP,GAAL,CAAS,CAAT,EAAa,IAAI7K,UAAL,GAAmB,CAA/B,CAAZ;AAEAymB,QAAAA,QAAQ,CAAC,IAAD,EAAOhoB,KAAP,EAAciO,MAAd,EAAsB1M,UAAtB,EAAkCknB,KAAK,GAAG,CAA1C,EAA6C,CAACA,KAA9C,CAAR;AACD;;AAED,UAAIntB,CAAC,GAAGiG,UAAU,GAAG,CAArB;AACA,UAAIylB,GAAG,GAAG,CAAV;AACA,UAAI0B,GAAG,GAAG,CAAV;AACA,WAAKza,MAAM,GAAG3S,CAAd,IAAmB0E,KAAK,GAAG,IAA3B;;AACA,aAAO,EAAE1E,CAAF,IAAO,CAAP,KAAa0rB,GAAG,IAAI,KAApB,CAAP,EAAmC;AACjC,YAAIhnB,KAAK,GAAG,CAAR,IAAa0oB,GAAG,KAAK,CAArB,IAA0B,KAAKza,MAAM,GAAG3S,CAAT,GAAa,CAAlB,MAAyB,CAAvD,EAA0D;AACxDotB,UAAAA,GAAG,GAAG,CAAN;AACD;;AACD,aAAKza,MAAM,GAAG3S,CAAd,IAAmB,CAAE0E,KAAK,GAAGgnB,GAAT,IAAiB,CAAlB,IAAuB0B,GAAvB,GAA6B,IAAhD;AACD;;AAED,aAAOza,MAAM,GAAG1M,UAAhB;AACD,KArBD;;AAuBApF,IAAAA,MAAM,CAACsL,SAAP,CAAiBmhB,SAAjB,GAA6B,SAASA,SAAT,CAAoB5oB,KAApB,EAA2BiO,MAA3B,EAAmC8Y,QAAnC,EAA6C;AACxE/mB,MAAAA,KAAK,GAAG,CAACA,KAAT;AACAiO,MAAAA,MAAM,GAAGA,MAAM,KAAK,CAApB;AACA,UAAI,CAAC8Y,QAAL,EAAeiB,QAAQ,CAAC,IAAD,EAAOhoB,KAAP,EAAciO,MAAd,EAAsB,CAAtB,EAAyB,IAAzB,EAA+B,CAAC,IAAhC,CAAR;AACf,UAAIjO,KAAK,GAAG,CAAZ,EAAeA,KAAK,GAAG,OAAOA,KAAP,GAAe,CAAvB;AACf,WAAKiO,MAAL,IAAgBjO,KAAK,GAAG,IAAxB;AACA,aAAOiO,MAAM,GAAG,CAAhB;AACD,KAPD;;AASA9R,IAAAA,MAAM,CAACsL,SAAP,CAAiBohB,YAAjB,GAAgC,SAASA,YAAT,CAAuB7oB,KAAvB,EAA8BiO,MAA9B,EAAsC8Y,QAAtC,EAAgD;AAC9E/mB,MAAAA,KAAK,GAAG,CAACA,KAAT;AACAiO,MAAAA,MAAM,GAAGA,MAAM,KAAK,CAApB;AACA,UAAI,CAAC8Y,QAAL,EAAeiB,QAAQ,CAAC,IAAD,EAAOhoB,KAAP,EAAciO,MAAd,EAAsB,CAAtB,EAAyB,MAAzB,EAAiC,CAAC,MAAlC,CAAR;AACf,WAAKA,MAAL,IAAgBjO,KAAK,GAAG,IAAxB;AACA,WAAKiO,MAAM,GAAG,CAAd,IAAoBjO,KAAK,KAAK,CAA9B;AACA,aAAOiO,MAAM,GAAG,CAAhB;AACD,KAPD;;AASA9R,IAAAA,MAAM,CAACsL,SAAP,CAAiBqhB,YAAjB,GAAgC,SAASA,YAAT,CAAuB9oB,KAAvB,EAA8BiO,MAA9B,EAAsC8Y,QAAtC,EAAgD;AAC9E/mB,MAAAA,KAAK,GAAG,CAACA,KAAT;AACAiO,MAAAA,MAAM,GAAGA,MAAM,KAAK,CAApB;AACA,UAAI,CAAC8Y,QAAL,EAAeiB,QAAQ,CAAC,IAAD,EAAOhoB,KAAP,EAAciO,MAAd,EAAsB,CAAtB,EAAyB,MAAzB,EAAiC,CAAC,MAAlC,CAAR;AACf,WAAKA,MAAL,IAAgBjO,KAAK,KAAK,CAA1B;AACA,WAAKiO,MAAM,GAAG,CAAd,IAAoBjO,KAAK,GAAG,IAA5B;AACA,aAAOiO,MAAM,GAAG,CAAhB;AACD,KAPD;;AASA9R,IAAAA,MAAM,CAACsL,SAAP,CAAiBshB,YAAjB,GAAgC,SAASA,YAAT,CAAuB/oB,KAAvB,EAA8BiO,MAA9B,EAAsC8Y,QAAtC,EAAgD;AAC9E/mB,MAAAA,KAAK,GAAG,CAACA,KAAT;AACAiO,MAAAA,MAAM,GAAGA,MAAM,KAAK,CAApB;AACA,UAAI,CAAC8Y,QAAL,EAAeiB,QAAQ,CAAC,IAAD,EAAOhoB,KAAP,EAAciO,MAAd,EAAsB,CAAtB,EAAyB,UAAzB,EAAqC,CAAC,UAAtC,CAAR;AACf,WAAKA,MAAL,IAAgBjO,KAAK,GAAG,IAAxB;AACA,WAAKiO,MAAM,GAAG,CAAd,IAAoBjO,KAAK,KAAK,CAA9B;AACA,WAAKiO,MAAM,GAAG,CAAd,IAAoBjO,KAAK,KAAK,EAA9B;AACA,WAAKiO,MAAM,GAAG,CAAd,IAAoBjO,KAAK,KAAK,EAA9B;AACA,aAAOiO,MAAM,GAAG,CAAhB;AACD,KATD;;AAWA9R,IAAAA,MAAM,CAACsL,SAAP,CAAiBuhB,YAAjB,GAAgC,SAASA,YAAT,CAAuBhpB,KAAvB,EAA8BiO,MAA9B,EAAsC8Y,QAAtC,EAAgD;AAC9E/mB,MAAAA,KAAK,GAAG,CAACA,KAAT;AACAiO,MAAAA,MAAM,GAAGA,MAAM,KAAK,CAApB;AACA,UAAI,CAAC8Y,QAAL,EAAeiB,QAAQ,CAAC,IAAD,EAAOhoB,KAAP,EAAciO,MAAd,EAAsB,CAAtB,EAAyB,UAAzB,EAAqC,CAAC,UAAtC,CAAR;AACf,UAAIjO,KAAK,GAAG,CAAZ,EAAeA,KAAK,GAAG,aAAaA,KAAb,GAAqB,CAA7B;AACf,WAAKiO,MAAL,IAAgBjO,KAAK,KAAK,EAA1B;AACA,WAAKiO,MAAM,GAAG,CAAd,IAAoBjO,KAAK,KAAK,EAA9B;AACA,WAAKiO,MAAM,GAAG,CAAd,IAAoBjO,KAAK,KAAK,CAA9B;AACA,WAAKiO,MAAM,GAAG,CAAd,IAAoBjO,KAAK,GAAG,IAA5B;AACA,aAAOiO,MAAM,GAAG,CAAhB;AACD,KAVD;;AAYA,aAASgb,YAAT,CAAuBlmB,GAAvB,EAA4B/C,KAA5B,EAAmCiO,MAAnC,EAA2C4Y,GAA3C,EAAgDxd,GAAhD,EAAqDC,GAArD,EAA0D;AACxD,UAAI2E,MAAM,GAAG4Y,GAAT,GAAe9jB,GAAG,CAAC9G,MAAvB,EAA+B,MAAM,IAAIwlB,UAAJ,CAAe,oBAAf,CAAN;AAC/B,UAAIxT,MAAM,GAAG,CAAb,EAAgB,MAAM,IAAIwT,UAAJ,CAAe,oBAAf,CAAN;AACjB;;AAED,aAASyH,UAAT,CAAqBnmB,GAArB,EAA0B/C,KAA1B,EAAiCiO,MAAjC,EAAyCkb,YAAzC,EAAuDpC,QAAvD,EAAiE;AAC/D/mB,MAAAA,KAAK,GAAG,CAACA,KAAT;AACAiO,MAAAA,MAAM,GAAGA,MAAM,KAAK,CAApB;;AACA,UAAI,CAAC8Y,QAAL,EAAe;AACbkC,QAAAA,YAAY,CAAClmB,GAAD,EAAM/C,KAAN,EAAaiO,MAAb,EAAqB,CAArB,EAAwB,sBAAxB,EAAgD,CAAC,sBAAjD,CAAZ;AACD;;AACDyS,MAAAA,OAAO,CAAC+B,KAAR,CAAc1f,GAAd,EAAmB/C,KAAnB,EAA0BiO,MAA1B,EAAkCkb,YAAlC,EAAgD,EAAhD,EAAoD,CAApD;AACA,aAAOlb,MAAM,GAAG,CAAhB;AACD;;AAED9R,IAAAA,MAAM,CAACsL,SAAP,CAAiB2hB,YAAjB,GAAgC,SAASA,YAAT,CAAuBppB,KAAvB,EAA8BiO,MAA9B,EAAsC8Y,QAAtC,EAAgD;AAC9E,aAAOmC,UAAU,CAAC,IAAD,EAAOlpB,KAAP,EAAciO,MAAd,EAAsB,IAAtB,EAA4B8Y,QAA5B,CAAjB;AACD,KAFD;;AAIA5qB,IAAAA,MAAM,CAACsL,SAAP,CAAiB4hB,YAAjB,GAAgC,SAASA,YAAT,CAAuBrpB,KAAvB,EAA8BiO,MAA9B,EAAsC8Y,QAAtC,EAAgD;AAC9E,aAAOmC,UAAU,CAAC,IAAD,EAAOlpB,KAAP,EAAciO,MAAd,EAAsB,KAAtB,EAA6B8Y,QAA7B,CAAjB;AACD,KAFD;;AAIA,aAASuC,WAAT,CAAsBvmB,GAAtB,EAA2B/C,KAA3B,EAAkCiO,MAAlC,EAA0Ckb,YAA1C,EAAwDpC,QAAxD,EAAkE;AAChE/mB,MAAAA,KAAK,GAAG,CAACA,KAAT;AACAiO,MAAAA,MAAM,GAAGA,MAAM,KAAK,CAApB;;AACA,UAAI,CAAC8Y,QAAL,EAAe;AACbkC,QAAAA,YAAY,CAAClmB,GAAD,EAAM/C,KAAN,EAAaiO,MAAb,EAAqB,CAArB,EAAwB,uBAAxB,EAAiD,CAAC,uBAAlD,CAAZ;AACD;;AACDyS,MAAAA,OAAO,CAAC+B,KAAR,CAAc1f,GAAd,EAAmB/C,KAAnB,EAA0BiO,MAA1B,EAAkCkb,YAAlC,EAAgD,EAAhD,EAAoD,CAApD;AACA,aAAOlb,MAAM,GAAG,CAAhB;AACD;;AAED9R,IAAAA,MAAM,CAACsL,SAAP,CAAiB8hB,aAAjB,GAAiC,SAASA,aAAT,CAAwBvpB,KAAxB,EAA+BiO,MAA/B,EAAuC8Y,QAAvC,EAAiD;AAChF,aAAOuC,WAAW,CAAC,IAAD,EAAOtpB,KAAP,EAAciO,MAAd,EAAsB,IAAtB,EAA4B8Y,QAA5B,CAAlB;AACD,KAFD;;AAIA5qB,IAAAA,MAAM,CAACsL,SAAP,CAAiB+hB,aAAjB,GAAiC,SAASA,aAAT,CAAwBxpB,KAAxB,EAA+BiO,MAA/B,EAAuC8Y,QAAvC,EAAiD;AAChF,aAAOuC,WAAW,CAAC,IAAD,EAAOtpB,KAAP,EAAciO,MAAd,EAAsB,KAAtB,EAA6B8Y,QAA7B,CAAlB;AACD,KAFD,CAj+C0C,CAq+C1C;;;AACA5qB,IAAAA,MAAM,CAACsL,SAAP,CAAiBib,IAAjB,GAAwB,SAASA,IAAT,CAAewB,MAAf,EAAuBuF,WAAvB,EAAoCxR,KAApC,EAA2CoI,GAA3C,EAAgD;AACtE,UAAI,CAAClkB,MAAM,CAACmB,QAAP,CAAgB4mB,MAAhB,CAAL,EAA8B,MAAM,IAAI5nB,SAAJ,CAAc,6BAAd,CAAN;AAC9B,UAAI,CAAC2b,KAAL,EAAYA,KAAK,GAAG,CAAR;AACZ,UAAI,CAACoI,GAAD,IAAQA,GAAG,KAAK,CAApB,EAAuBA,GAAG,GAAG,KAAKpkB,MAAX;AACvB,UAAIwtB,WAAW,IAAIvF,MAAM,CAACjoB,MAA1B,EAAkCwtB,WAAW,GAAGvF,MAAM,CAACjoB,MAArB;AAClC,UAAI,CAACwtB,WAAL,EAAkBA,WAAW,GAAG,CAAd;AAClB,UAAIpJ,GAAG,GAAG,CAAN,IAAWA,GAAG,GAAGpI,KAArB,EAA4BoI,GAAG,GAAGpI,KAAN,CAN0C,CAQtE;;AACA,UAAIoI,GAAG,KAAKpI,KAAZ,EAAmB,OAAO,CAAP;AACnB,UAAIiM,MAAM,CAACjoB,MAAP,KAAkB,CAAlB,IAAuB,KAAKA,MAAL,KAAgB,CAA3C,EAA8C,OAAO,CAAP,CAVwB,CAYtE;;AACA,UAAIwtB,WAAW,GAAG,CAAlB,EAAqB;AACnB,cAAM,IAAIhI,UAAJ,CAAe,2BAAf,CAAN;AACD;;AACD,UAAIxJ,KAAK,GAAG,CAAR,IAAaA,KAAK,IAAI,KAAKhc,MAA/B,EAAuC,MAAM,IAAIwlB,UAAJ,CAAe,oBAAf,CAAN;AACvC,UAAIpB,GAAG,GAAG,CAAV,EAAa,MAAM,IAAIoB,UAAJ,CAAe,yBAAf,CAAN,CAjByD,CAmBtE;;AACA,UAAIpB,GAAG,GAAG,KAAKpkB,MAAf,EAAuBokB,GAAG,GAAG,KAAKpkB,MAAX;;AACvB,UAAIioB,MAAM,CAACjoB,MAAP,GAAgBwtB,WAAhB,GAA8BpJ,GAAG,GAAGpI,KAAxC,EAA+C;AAC7CoI,QAAAA,GAAG,GAAG6D,MAAM,CAACjoB,MAAP,GAAgBwtB,WAAhB,GAA8BxR,KAApC;AACD;;AAED,UAAIwH,GAAG,GAAGY,GAAG,GAAGpI,KAAhB;;AAEA,UAAI,SAASiM,MAAT,IAAmB,OAAO1nB,UAAU,CAACiL,SAAX,CAAqBiiB,UAA5B,KAA2C,UAAlE,EAA8E;AAC5E;AACA,aAAKA,UAAL,CAAgBD,WAAhB,EAA6BxR,KAA7B,EAAoCoI,GAApC;AACD,OAHD,MAGO,IAAI,SAAS6D,MAAT,IAAmBjM,KAAK,GAAGwR,WAA3B,IAA0CA,WAAW,GAAGpJ,GAA5D,EAAiE;AACtE;AACA,aAAK,IAAI/kB,CAAC,GAAGmkB,GAAG,GAAG,CAAnB,EAAsBnkB,CAAC,IAAI,CAA3B,EAA8B,EAAEA,CAAhC,EAAmC;AACjC4oB,UAAAA,MAAM,CAAC5oB,CAAC,GAAGmuB,WAAL,CAAN,GAA0B,KAAKnuB,CAAC,GAAG2c,KAAT,CAA1B;AACD;AACF,OALM,MAKA;AACLzb,QAAAA,UAAU,CAACiL,SAAX,CAAqBuJ,GAArB,CAAyBhV,IAAzB,CACEkoB,MADF,EAEE,KAAKjR,QAAL,CAAcgF,KAAd,EAAqBoI,GAArB,CAFF,EAGEoJ,WAHF;AAKD;;AAED,aAAOhK,GAAP;AACD,KA5CD,CAt+C0C,CAohD1C;AACA;AACA;AACA;;;AACAtjB,IAAAA,MAAM,CAACsL,SAAP,CAAiBhL,IAAjB,GAAwB,SAASA,IAAT,CAAe+nB,GAAf,EAAoBvM,KAApB,EAA2BoI,GAA3B,EAAgC/gB,QAAhC,EAA0C;AAChE;AACA,UAAI,OAAOklB,GAAP,KAAe,QAAnB,EAA6B;AAC3B,YAAI,OAAOvM,KAAP,KAAiB,QAArB,EAA+B;AAC7B3Y,UAAAA,QAAQ,GAAG2Y,KAAX;AACAA,UAAAA,KAAK,GAAG,CAAR;AACAoI,UAAAA,GAAG,GAAG,KAAKpkB,MAAX;AACD,SAJD,MAIO,IAAI,OAAOokB,GAAP,KAAe,QAAnB,EAA6B;AAClC/gB,UAAAA,QAAQ,GAAG+gB,GAAX;AACAA,UAAAA,GAAG,GAAG,KAAKpkB,MAAX;AACD;;AACD,YAAIqD,QAAQ,KAAK0D,SAAb,IAA0B,OAAO1D,QAAP,KAAoB,QAAlD,EAA4D;AAC1D,gBAAM,IAAIhD,SAAJ,CAAc,2BAAd,CAAN;AACD;;AACD,YAAI,OAAOgD,QAAP,KAAoB,QAApB,IAAgC,CAACnD,MAAM,CAAComB,UAAP,CAAkBjjB,QAAlB,CAArC,EAAkE;AAChE,gBAAM,IAAIhD,SAAJ,CAAc,uBAAuBgD,QAArC,CAAN;AACD;;AACD,YAAIklB,GAAG,CAACvoB,MAAJ,KAAe,CAAnB,EAAsB;AACpB,cAAIJ,IAAI,GAAG2oB,GAAG,CAAC3nB,UAAJ,CAAe,CAAf,CAAX;;AACA,cAAKyC,QAAQ,KAAK,MAAb,IAAuBzD,IAAI,GAAG,GAA/B,IACAyD,QAAQ,KAAK,QADjB,EAC2B;AACzB;AACAklB,YAAAA,GAAG,GAAG3oB,IAAN;AACD;AACF;AACF,OAvBD,MAuBO,IAAI,OAAO2oB,GAAP,KAAe,QAAnB,EAA6B;AAClCA,QAAAA,GAAG,GAAGA,GAAG,GAAG,GAAZ;AACD,OA3B+D,CA6BhE;;;AACA,UAAIvM,KAAK,GAAG,CAAR,IAAa,KAAKhc,MAAL,GAAcgc,KAA3B,IAAoC,KAAKhc,MAAL,GAAcokB,GAAtD,EAA2D;AACzD,cAAM,IAAIoB,UAAJ,CAAe,oBAAf,CAAN;AACD;;AAED,UAAIpB,GAAG,IAAIpI,KAAX,EAAkB;AAChB,eAAO,IAAP;AACD;;AAEDA,MAAAA,KAAK,GAAGA,KAAK,KAAK,CAAlB;AACAoI,MAAAA,GAAG,GAAGA,GAAG,KAAKrd,SAAR,GAAoB,KAAK/G,MAAzB,GAAkCokB,GAAG,KAAK,CAAhD;AAEA,UAAI,CAACmE,GAAL,EAAUA,GAAG,GAAG,CAAN;AAEV,UAAIlpB,CAAJ;;AACA,UAAI,OAAOkpB,GAAP,KAAe,QAAnB,EAA6B;AAC3B,aAAKlpB,CAAC,GAAG2c,KAAT,EAAgB3c,CAAC,GAAG+kB,GAApB,EAAyB,EAAE/kB,CAA3B,EAA8B;AAC5B,eAAKA,CAAL,IAAUkpB,GAAV;AACD;AACF,OAJD,MAIO;AACL,YAAIxf,KAAK,GAAG7I,MAAM,CAACmB,QAAP,CAAgBknB,GAAhB,IACRA,GADQ,GAERroB,MAAM,CAACuG,IAAP,CAAY8hB,GAAZ,EAAiBllB,QAAjB,CAFJ;AAGA,YAAImgB,GAAG,GAAGza,KAAK,CAAC/I,MAAhB;;AACA,YAAIwjB,GAAG,KAAK,CAAZ,EAAe;AACb,gBAAM,IAAInjB,SAAJ,CAAc,gBAAgBkoB,GAAhB,GAClB,mCADI,CAAN;AAED;;AACD,aAAKlpB,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG+kB,GAAG,GAAGpI,KAAtB,EAA6B,EAAE3c,CAA/B,EAAkC;AAChC,eAAKA,CAAC,GAAG2c,KAAT,IAAkBjT,KAAK,CAAC1J,CAAC,GAAGmkB,GAAL,CAAvB;AACD;AACF;;AAED,aAAO,IAAP;AACD,KA/DD,CAxhD0C,CAylD1C;AACA;;;AAEA,QAAIkK,iBAAiB,GAAG,mBAAxB;;AAEA,aAASC,WAAT,CAAsB9rB,GAAtB,EAA2B;AACzB;AACAA,MAAAA,GAAG,GAAGA,GAAG,CAAC0J,KAAJ,CAAU,GAAV,EAAe,CAAf,CAAN,CAFyB,CAGzB;;AACA1J,MAAAA,GAAG,GAAGA,GAAG,CAACmmB,IAAJ,GAAW3iB,OAAX,CAAmBqoB,iBAAnB,EAAsC,EAAtC,CAAN,CAJyB,CAKzB;;AACA,UAAI7rB,GAAG,CAAC7B,MAAJ,GAAa,CAAjB,EAAoB,OAAO,EAAP,CANK,CAOzB;;AACA,aAAO6B,GAAG,CAAC7B,MAAJ,GAAa,CAAb,KAAmB,CAA1B,EAA6B;AAC3B6B,QAAAA,GAAG,GAAGA,GAAG,GAAG,GAAZ;AACD;;AACD,aAAOA,GAAP;AACD;;AAED,aAASoG,KAAT,CAAgB/I,CAAhB,EAAmB;AACjB,UAAIA,CAAC,GAAG,EAAR,EAAY,OAAO,MAAMA,CAAC,CAACuM,QAAF,CAAW,EAAX,CAAb;AACZ,aAAOvM,CAAC,CAACuM,QAAF,CAAW,EAAX,CAAP;AACD;;AAED,aAASub,WAAT,CAAsBzkB,MAAtB,EAA8BqrB,KAA9B,EAAqC;AACnCA,MAAAA,KAAK,GAAGA,KAAK,IAAIjd,QAAjB;AACA,UAAIsZ,SAAJ;AACA,UAAIjqB,MAAM,GAAGuC,MAAM,CAACvC,MAApB;AACA,UAAI6tB,aAAa,GAAG,IAApB;AACA,UAAI9kB,KAAK,GAAG,EAAZ;;AAEA,WAAK,IAAI1J,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGW,MAApB,EAA4B,EAAEX,CAA9B,EAAiC;AAC/B4qB,QAAAA,SAAS,GAAG1nB,MAAM,CAAC3B,UAAP,CAAkBvB,CAAlB,CAAZ,CAD+B,CAG/B;;AACA,YAAI4qB,SAAS,GAAG,MAAZ,IAAsBA,SAAS,GAAG,MAAtC,EAA8C;AAC5C;AACA,cAAI,CAAC4D,aAAL,EAAoB;AAClB;AACA,gBAAI5D,SAAS,GAAG,MAAhB,EAAwB;AACtB;AACA,kBAAI,CAAC2D,KAAK,IAAI,CAAV,IAAe,CAAC,CAApB,EAAuB7kB,KAAK,CAACrF,IAAN,CAAW,IAAX,EAAiB,IAAjB,EAAuB,IAAvB;AACvB;AACD,aAJD,MAIO,IAAIrE,CAAC,GAAG,CAAJ,KAAUW,MAAd,EAAsB;AAC3B;AACA,kBAAI,CAAC4tB,KAAK,IAAI,CAAV,IAAe,CAAC,CAApB,EAAuB7kB,KAAK,CAACrF,IAAN,CAAW,IAAX,EAAiB,IAAjB,EAAuB,IAAvB;AACvB;AACD,aAViB,CAYlB;;;AACAmqB,YAAAA,aAAa,GAAG5D,SAAhB;AAEA;AACD,WAlB2C,CAoB5C;;;AACA,cAAIA,SAAS,GAAG,MAAhB,EAAwB;AACtB,gBAAI,CAAC2D,KAAK,IAAI,CAAV,IAAe,CAAC,CAApB,EAAuB7kB,KAAK,CAACrF,IAAN,CAAW,IAAX,EAAiB,IAAjB,EAAuB,IAAvB;AACvBmqB,YAAAA,aAAa,GAAG5D,SAAhB;AACA;AACD,WAzB2C,CA2B5C;;;AACAA,UAAAA,SAAS,GAAG,CAAC4D,aAAa,GAAG,MAAhB,IAA0B,EAA1B,GAA+B5D,SAAS,GAAG,MAA5C,IAAsD,OAAlE;AACD,SA7BD,MA6BO,IAAI4D,aAAJ,EAAmB;AACxB;AACA,cAAI,CAACD,KAAK,IAAI,CAAV,IAAe,CAAC,CAApB,EAAuB7kB,KAAK,CAACrF,IAAN,CAAW,IAAX,EAAiB,IAAjB,EAAuB,IAAvB;AACxB;;AAEDmqB,QAAAA,aAAa,GAAG,IAAhB,CAtC+B,CAwC/B;;AACA,YAAI5D,SAAS,GAAG,IAAhB,EAAsB;AACpB,cAAI,CAAC2D,KAAK,IAAI,CAAV,IAAe,CAAnB,EAAsB;AACtB7kB,UAAAA,KAAK,CAACrF,IAAN,CAAWumB,SAAX;AACD,SAHD,MAGO,IAAIA,SAAS,GAAG,KAAhB,EAAuB;AAC5B,cAAI,CAAC2D,KAAK,IAAI,CAAV,IAAe,CAAnB,EAAsB;AACtB7kB,UAAAA,KAAK,CAACrF,IAAN,CACEumB,SAAS,IAAI,GAAb,GAAmB,IADrB,EAEEA,SAAS,GAAG,IAAZ,GAAmB,IAFrB;AAID,SANM,MAMA,IAAIA,SAAS,GAAG,OAAhB,EAAyB;AAC9B,cAAI,CAAC2D,KAAK,IAAI,CAAV,IAAe,CAAnB,EAAsB;AACtB7kB,UAAAA,KAAK,CAACrF,IAAN,CACEumB,SAAS,IAAI,GAAb,GAAmB,IADrB,EAEEA,SAAS,IAAI,GAAb,GAAmB,IAAnB,GAA0B,IAF5B,EAGEA,SAAS,GAAG,IAAZ,GAAmB,IAHrB;AAKD,SAPM,MAOA,IAAIA,SAAS,GAAG,QAAhB,EAA0B;AAC/B,cAAI,CAAC2D,KAAK,IAAI,CAAV,IAAe,CAAnB,EAAsB;AACtB7kB,UAAAA,KAAK,CAACrF,IAAN,CACEumB,SAAS,IAAI,IAAb,GAAoB,IADtB,EAEEA,SAAS,IAAI,GAAb,GAAmB,IAAnB,GAA0B,IAF5B,EAGEA,SAAS,IAAI,GAAb,GAAmB,IAAnB,GAA0B,IAH5B,EAIEA,SAAS,GAAG,IAAZ,GAAmB,IAJrB;AAMD,SARM,MAQA;AACL,gBAAM,IAAItqB,KAAJ,CAAU,oBAAV,CAAN;AACD;AACF;;AAED,aAAOoJ,KAAP;AACD;;AAED,aAAS0gB,YAAT,CAAuB5nB,GAAvB,EAA4B;AAC1B,UAAIisB,SAAS,GAAG,EAAhB;;AACA,WAAK,IAAIzuB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGwC,GAAG,CAAC7B,MAAxB,EAAgC,EAAEX,CAAlC,EAAqC;AACnC;AACAyuB,QAAAA,SAAS,CAACpqB,IAAV,CAAe7B,GAAG,CAACjB,UAAJ,CAAevB,CAAf,IAAoB,IAAnC;AACD;;AACD,aAAOyuB,SAAP;AACD;;AAED,aAASjE,cAAT,CAAyBhoB,GAAzB,EAA8B+rB,KAA9B,EAAqC;AACnC,UAAIruB,CAAJ,EAAOuT,EAAP,EAAWD,EAAX;AACA,UAAIib,SAAS,GAAG,EAAhB;;AACA,WAAK,IAAIzuB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGwC,GAAG,CAAC7B,MAAxB,EAAgC,EAAEX,CAAlC,EAAqC;AACnC,YAAI,CAACuuB,KAAK,IAAI,CAAV,IAAe,CAAnB,EAAsB;AAEtBruB,QAAAA,CAAC,GAAGsC,GAAG,CAACjB,UAAJ,CAAevB,CAAf,CAAJ;AACAyT,QAAAA,EAAE,GAAGvT,CAAC,IAAI,CAAV;AACAsT,QAAAA,EAAE,GAAGtT,CAAC,GAAG,GAAT;AACAuuB,QAAAA,SAAS,CAACpqB,IAAV,CAAemP,EAAf;AACAib,QAAAA,SAAS,CAACpqB,IAAV,CAAeoP,EAAf;AACD;;AAED,aAAOgb,SAAP;AACD;;AAED,aAAS7G,aAAT,CAAwBplB,GAAxB,EAA6B;AAC3B,aAAO2iB,MAAM,CAACrB,WAAP,CAAmBwK,WAAW,CAAC9rB,GAAD,CAA9B,CAAP;AACD;;AAED,aAAS0nB,UAAT,CAAqBjjB,GAArB,EAA0BC,GAA1B,EAA+ByL,MAA/B,EAAuChS,MAAvC,EAA+C;AAC7C,WAAK,IAAIX,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGW,MAApB,EAA4B,EAAEX,CAA9B,EAAiC;AAC/B,YAAKA,CAAC,GAAG2S,MAAJ,IAAczL,GAAG,CAACvG,MAAnB,IAA+BX,CAAC,IAAIiH,GAAG,CAACtG,MAA5C,EAAqD;AACrDuG,QAAAA,GAAG,CAAClH,CAAC,GAAG2S,MAAL,CAAH,GAAkB1L,GAAG,CAACjH,CAAD,CAArB;AACD;;AACD,aAAOA,CAAP;AACD,KApuDyC,CAsuD1C;AACA;AACA;;;AACA,aAAS2mB,UAAT,CAAqBjM,GAArB,EAA0BiB,IAA1B,EAAgC;AAC9B,aAAOjB,GAAG,YAAYiB,IAAf,IACJjB,GAAG,IAAI,IAAP,IAAeA,GAAG,CAACI,WAAJ,IAAmB,IAAlC,IAA0CJ,GAAG,CAACI,WAAJ,CAAgBqB,IAAhB,IAAwB,IAAlE,IACCzB,GAAG,CAACI,WAAJ,CAAgBqB,IAAhB,KAAyBR,IAAI,CAACQ,IAFlC;AAGD;;AACD,aAASkL,WAAT,CAAsB3M,GAAtB,EAA2B;AACzB;AACA,aAAOA,GAAG,KAAKA,GAAf,CAFyB,CAEN;AACpB;AAEA,GAnvDQ,EAmvDP;AAAC,iBAAY,EAAb;AAAgB,eAAU;AAA1B,GAnvDO,CA54Hic;AA+nLza,MAAG,CAAC,UAASva,OAAT,EAAiBS,MAAjB,EAAwBH,OAAxB,EAAgC;AACrEA,IAAAA,OAAO,CAAC+oB,IAAR,GAAe,UAAUrmB,MAAV,EAAkBwP,MAAlB,EAA0B+b,IAA1B,EAAgCC,IAAhC,EAAsCC,MAAtC,EAA8C;AAC3D,UAAIhvB,CAAJ,EAAOkE,CAAP;AACA,UAAI+qB,IAAI,GAAID,MAAM,GAAG,CAAV,GAAeD,IAAf,GAAsB,CAAjC;AACA,UAAIG,IAAI,GAAG,CAAC,KAAKD,IAAN,IAAc,CAAzB;AACA,UAAIE,KAAK,GAAGD,IAAI,IAAI,CAApB;AACA,UAAIE,KAAK,GAAG,CAAC,CAAb;AACA,UAAIhvB,CAAC,GAAG0uB,IAAI,GAAIE,MAAM,GAAG,CAAb,GAAkB,CAA9B;AACA,UAAItrB,CAAC,GAAGorB,IAAI,GAAG,CAAC,CAAJ,GAAQ,CAApB;AACA,UAAIxjB,CAAC,GAAG/H,MAAM,CAACwP,MAAM,GAAG3S,CAAV,CAAd;AAEAA,MAAAA,CAAC,IAAIsD,CAAL;AAEA1D,MAAAA,CAAC,GAAGsL,CAAC,GAAI,CAAC,KAAM,CAAC8jB,KAAR,IAAkB,CAA3B;AACA9jB,MAAAA,CAAC,KAAM,CAAC8jB,KAAR;AACAA,MAAAA,KAAK,IAAIH,IAAT;;AACA,aAAOG,KAAK,GAAG,CAAf,EAAkBpvB,CAAC,GAAIA,CAAC,GAAG,GAAL,GAAYuD,MAAM,CAACwP,MAAM,GAAG3S,CAAV,CAAtB,EAAoCA,CAAC,IAAIsD,CAAzC,EAA4C0rB,KAAK,IAAI,CAAvE,EAA0E,CAAE;;AAE5ElrB,MAAAA,CAAC,GAAGlE,CAAC,GAAI,CAAC,KAAM,CAACovB,KAAR,IAAkB,CAA3B;AACApvB,MAAAA,CAAC,KAAM,CAACovB,KAAR;AACAA,MAAAA,KAAK,IAAIL,IAAT;;AACA,aAAOK,KAAK,GAAG,CAAf,EAAkBlrB,CAAC,GAAIA,CAAC,GAAG,GAAL,GAAYX,MAAM,CAACwP,MAAM,GAAG3S,CAAV,CAAtB,EAAoCA,CAAC,IAAIsD,CAAzC,EAA4C0rB,KAAK,IAAI,CAAvE,EAA0E,CAAE;;AAE5E,UAAIpvB,CAAC,KAAK,CAAV,EAAa;AACXA,QAAAA,CAAC,GAAG,IAAImvB,KAAR;AACD,OAFD,MAEO,IAAInvB,CAAC,KAAKkvB,IAAV,EAAgB;AACrB,eAAOhrB,CAAC,GAAGyN,GAAH,GAAU,CAACrG,CAAC,GAAG,CAAC,CAAJ,GAAQ,CAAV,IAAeoG,QAAjC;AACD,OAFM,MAEA;AACLxN,QAAAA,CAAC,GAAGA,CAAC,GAAGnC,IAAI,CAACmP,GAAL,CAAS,CAAT,EAAY6d,IAAZ,CAAR;AACA/uB,QAAAA,CAAC,GAAGA,CAAC,GAAGmvB,KAAR;AACD;;AACD,aAAO,CAAC7jB,CAAC,GAAG,CAAC,CAAJ,GAAQ,CAAV,IAAepH,CAAf,GAAmBnC,IAAI,CAACmP,GAAL,CAAS,CAAT,EAAYlR,CAAC,GAAG+uB,IAAhB,CAA1B;AACD,KA/BD;;AAiCAluB,IAAAA,OAAO,CAAC0mB,KAAR,GAAgB,UAAUhkB,MAAV,EAAkBuB,KAAlB,EAAyBiO,MAAzB,EAAiC+b,IAAjC,EAAuCC,IAAvC,EAA6CC,MAA7C,EAAqD;AACnE,UAAIhvB,CAAJ,EAAOkE,CAAP,EAAU5D,CAAV;AACA,UAAI2uB,IAAI,GAAID,MAAM,GAAG,CAAV,GAAeD,IAAf,GAAsB,CAAjC;AACA,UAAIG,IAAI,GAAG,CAAC,KAAKD,IAAN,IAAc,CAAzB;AACA,UAAIE,KAAK,GAAGD,IAAI,IAAI,CAApB;AACA,UAAIG,EAAE,GAAIN,IAAI,KAAK,EAAT,GAAchtB,IAAI,CAACmP,GAAL,CAAS,CAAT,EAAY,CAAC,EAAb,IAAmBnP,IAAI,CAACmP,GAAL,CAAS,CAAT,EAAY,CAAC,EAAb,CAAjC,GAAoD,CAA9D;AACA,UAAI9Q,CAAC,GAAG0uB,IAAI,GAAG,CAAH,GAAQE,MAAM,GAAG,CAA7B;AACA,UAAItrB,CAAC,GAAGorB,IAAI,GAAG,CAAH,GAAO,CAAC,CAApB;AACA,UAAIxjB,CAAC,GAAGxG,KAAK,GAAG,CAAR,IAAcA,KAAK,KAAK,CAAV,IAAe,IAAIA,KAAJ,GAAY,CAAzC,GAA8C,CAA9C,GAAkD,CAA1D;AAEAA,MAAAA,KAAK,GAAG/C,IAAI,CAAC6K,GAAL,CAAS9H,KAAT,CAAR;;AAEA,UAAImB,KAAK,CAACnB,KAAD,CAAL,IAAgBA,KAAK,KAAK4M,QAA9B,EAAwC;AACtCxN,QAAAA,CAAC,GAAG+B,KAAK,CAACnB,KAAD,CAAL,GAAe,CAAf,GAAmB,CAAvB;AACA9E,QAAAA,CAAC,GAAGkvB,IAAJ;AACD,OAHD,MAGO;AACLlvB,QAAAA,CAAC,GAAG+B,IAAI,CAAC6V,KAAL,CAAW7V,IAAI,CAACC,GAAL,CAAS8C,KAAT,IAAkB/C,IAAI,CAACutB,GAAlC,CAAJ;;AACA,YAAIxqB,KAAK,IAAIxE,CAAC,GAAGyB,IAAI,CAACmP,GAAL,CAAS,CAAT,EAAY,CAAClR,CAAb,CAAR,CAAL,GAAgC,CAApC,EAAuC;AACrCA,UAAAA,CAAC;AACDM,UAAAA,CAAC,IAAI,CAAL;AACD;;AACD,YAAIN,CAAC,GAAGmvB,KAAJ,IAAa,CAAjB,EAAoB;AAClBrqB,UAAAA,KAAK,IAAIuqB,EAAE,GAAG/uB,CAAd;AACD,SAFD,MAEO;AACLwE,UAAAA,KAAK,IAAIuqB,EAAE,GAAGttB,IAAI,CAACmP,GAAL,CAAS,CAAT,EAAY,IAAIie,KAAhB,CAAd;AACD;;AACD,YAAIrqB,KAAK,GAAGxE,CAAR,IAAa,CAAjB,EAAoB;AAClBN,UAAAA,CAAC;AACDM,UAAAA,CAAC,IAAI,CAAL;AACD;;AAED,YAAIN,CAAC,GAAGmvB,KAAJ,IAAaD,IAAjB,EAAuB;AACrBhrB,UAAAA,CAAC,GAAG,CAAJ;AACAlE,UAAAA,CAAC,GAAGkvB,IAAJ;AACD,SAHD,MAGO,IAAIlvB,CAAC,GAAGmvB,KAAJ,IAAa,CAAjB,EAAoB;AACzBjrB,UAAAA,CAAC,GAAG,CAAEY,KAAK,GAAGxE,CAAT,GAAc,CAAf,IAAoByB,IAAI,CAACmP,GAAL,CAAS,CAAT,EAAY6d,IAAZ,CAAxB;AACA/uB,UAAAA,CAAC,GAAGA,CAAC,GAAGmvB,KAAR;AACD,SAHM,MAGA;AACLjrB,UAAAA,CAAC,GAAGY,KAAK,GAAG/C,IAAI,CAACmP,GAAL,CAAS,CAAT,EAAYie,KAAK,GAAG,CAApB,CAAR,GAAiCptB,IAAI,CAACmP,GAAL,CAAS,CAAT,EAAY6d,IAAZ,CAArC;AACA/uB,UAAAA,CAAC,GAAG,CAAJ;AACD;AACF;;AAED,aAAO+uB,IAAI,IAAI,CAAf,EAAkBxrB,MAAM,CAACwP,MAAM,GAAG3S,CAAV,CAAN,GAAqB8D,CAAC,GAAG,IAAzB,EAA+B9D,CAAC,IAAIsD,CAApC,EAAuCQ,CAAC,IAAI,GAA5C,EAAiD6qB,IAAI,IAAI,CAA3E,EAA8E,CAAE;;AAEhF/uB,MAAAA,CAAC,GAAIA,CAAC,IAAI+uB,IAAN,GAAc7qB,CAAlB;AACA+qB,MAAAA,IAAI,IAAIF,IAAR;;AACA,aAAOE,IAAI,GAAG,CAAd,EAAiB1rB,MAAM,CAACwP,MAAM,GAAG3S,CAAV,CAAN,GAAqBJ,CAAC,GAAG,IAAzB,EAA+BI,CAAC,IAAIsD,CAApC,EAAuC1D,CAAC,IAAI,GAA5C,EAAiDivB,IAAI,IAAI,CAA1E,EAA6E,CAAE;;AAE/E1rB,MAAAA,MAAM,CAACwP,MAAM,GAAG3S,CAAT,GAAasD,CAAd,CAAN,IAA0B4H,CAAC,GAAG,GAA9B;AACD,KAlDD;AAoDC,GAtFmC,EAsFlC,EAtFkC,CA/nLsa;AAqtLpc,MAAG,CAAC,UAAS/K,OAAT,EAAiBS,MAAjB,EAAwBH,OAAxB,EAAgC;AAC1C;AACA,QAAIsY,OAAO,GAAGnY,MAAM,CAACH,OAAP,GAAiB,EAA/B,CAF0C,CAI1C;AACA;AACA;AACA;;AAEA,QAAI0uB,gBAAJ;AACA,QAAIC,kBAAJ;;AAEA,aAASC,gBAAT,GAA4B;AACxB,YAAM,IAAI/uB,KAAJ,CAAU,iCAAV,CAAN;AACH;;AACD,aAASgvB,mBAAT,GAAgC;AAC5B,YAAM,IAAIhvB,KAAJ,CAAU,mCAAV,CAAN;AACH;;AACA,iBAAY;AACT,UAAI;AACA,YAAI,OAAOivB,UAAP,KAAsB,UAA1B,EAAsC;AAClCJ,UAAAA,gBAAgB,GAAGI,UAAnB;AACH,SAFD,MAEO;AACHJ,UAAAA,gBAAgB,GAAGE,gBAAnB;AACH;AACJ,OAND,CAME,OAAOzvB,CAAP,EAAU;AACRuvB,QAAAA,gBAAgB,GAAGE,gBAAnB;AACH;;AACD,UAAI;AACA,YAAI,OAAOG,YAAP,KAAwB,UAA5B,EAAwC;AACpCJ,UAAAA,kBAAkB,GAAGI,YAArB;AACH,SAFD,MAEO;AACHJ,UAAAA,kBAAkB,GAAGE,mBAArB;AACH;AACJ,OAND,CAME,OAAO1vB,CAAP,EAAU;AACRwvB,QAAAA,kBAAkB,GAAGE,mBAArB;AACH;AACJ,KAnBA,GAAD;;AAoBA,aAASG,UAAT,CAAoBC,GAApB,EAAyB;AACrB,UAAIP,gBAAgB,KAAKI,UAAzB,EAAqC;AACjC;AACA,eAAOA,UAAU,CAACG,GAAD,EAAM,CAAN,CAAjB;AACH,OAJoB,CAKrB;;;AACA,UAAI,CAACP,gBAAgB,KAAKE,gBAArB,IAAyC,CAACF,gBAA3C,KAAgEI,UAApE,EAAgF;AAC5EJ,QAAAA,gBAAgB,GAAGI,UAAnB;AACA,eAAOA,UAAU,CAACG,GAAD,EAAM,CAAN,CAAjB;AACH;;AACD,UAAI;AACA;AACA,eAAOP,gBAAgB,CAACO,GAAD,EAAM,CAAN,CAAvB;AACH,OAHD,CAGE,OAAM9vB,CAAN,EAAQ;AACN,YAAI;AACA;AACA,iBAAOuvB,gBAAgB,CAACzuB,IAAjB,CAAsB,IAAtB,EAA4BgvB,GAA5B,EAAiC,CAAjC,CAAP;AACH,SAHD,CAGE,OAAM9vB,CAAN,EAAQ;AACN;AACA,iBAAOuvB,gBAAgB,CAACzuB,IAAjB,CAAsB,IAAtB,EAA4BgvB,GAA5B,EAAiC,CAAjC,CAAP;AACH;AACJ;AAGJ;;AACD,aAASC,eAAT,CAAyBC,MAAzB,EAAiC;AAC7B,UAAIR,kBAAkB,KAAKI,YAA3B,EAAyC;AACrC;AACA,eAAOA,YAAY,CAACI,MAAD,CAAnB;AACH,OAJ4B,CAK7B;;;AACA,UAAI,CAACR,kBAAkB,KAAKE,mBAAvB,IAA8C,CAACF,kBAAhD,KAAuEI,YAA3E,EAAyF;AACrFJ,QAAAA,kBAAkB,GAAGI,YAArB;AACA,eAAOA,YAAY,CAACI,MAAD,CAAnB;AACH;;AACD,UAAI;AACA;AACA,eAAOR,kBAAkB,CAACQ,MAAD,CAAzB;AACH,OAHD,CAGE,OAAOhwB,CAAP,EAAS;AACP,YAAI;AACA;AACA,iBAAOwvB,kBAAkB,CAAC1uB,IAAnB,CAAwB,IAAxB,EAA8BkvB,MAA9B,CAAP;AACH,SAHD,CAGE,OAAOhwB,CAAP,EAAS;AACP;AACA;AACA,iBAAOwvB,kBAAkB,CAAC1uB,IAAnB,CAAwB,IAAxB,EAA8BkvB,MAA9B,CAAP;AACH;AACJ;AAIJ;;AACD,QAAIC,KAAK,GAAG,EAAZ;AACA,QAAIC,QAAQ,GAAG,KAAf;AACA,QAAIC,YAAJ;AACA,QAAIC,UAAU,GAAG,CAAC,CAAlB;;AAEA,aAASC,eAAT,GAA2B;AACvB,UAAI,CAACH,QAAD,IAAa,CAACC,YAAlB,EAAgC;AAC5B;AACH;;AACDD,MAAAA,QAAQ,GAAG,KAAX;;AACA,UAAIC,YAAY,CAACpvB,MAAjB,EAAyB;AACrBkvB,QAAAA,KAAK,GAAGE,YAAY,CAAC1mB,MAAb,CAAoBwmB,KAApB,CAAR;AACH,OAFD,MAEO;AACHG,QAAAA,UAAU,GAAG,CAAC,CAAd;AACH;;AACD,UAAIH,KAAK,CAAClvB,MAAV,EAAkB;AACduvB,QAAAA,UAAU;AACb;AACJ;;AAED,aAASA,UAAT,GAAsB;AAClB,UAAIJ,QAAJ,EAAc;AACV;AACH;;AACD,UAAIK,OAAO,GAAGV,UAAU,CAACQ,eAAD,CAAxB;AACAH,MAAAA,QAAQ,GAAG,IAAX;AAEA,UAAI3L,GAAG,GAAG0L,KAAK,CAAClvB,MAAhB;;AACA,aAAMwjB,GAAN,EAAW;AACP4L,QAAAA,YAAY,GAAGF,KAAf;AACAA,QAAAA,KAAK,GAAG,EAAR;;AACA,eAAO,EAAEG,UAAF,GAAe7L,GAAtB,EAA2B;AACvB,cAAI4L,YAAJ,EAAkB;AACdA,YAAAA,YAAY,CAACC,UAAD,CAAZ,CAAyBI,GAAzB;AACH;AACJ;;AACDJ,QAAAA,UAAU,GAAG,CAAC,CAAd;AACA7L,QAAAA,GAAG,GAAG0L,KAAK,CAAClvB,MAAZ;AACH;;AACDovB,MAAAA,YAAY,GAAG,IAAf;AACAD,MAAAA,QAAQ,GAAG,KAAX;AACAH,MAAAA,eAAe,CAACQ,OAAD,CAAf;AACH;;AAEDpX,IAAAA,OAAO,CAACsX,QAAR,GAAmB,UAAUX,GAAV,EAAe;AAC9B,UAAIY,IAAI,GAAG,IAAItjB,KAAJ,CAAUya,SAAS,CAAC9mB,MAAV,GAAmB,CAA7B,CAAX;;AACA,UAAI8mB,SAAS,CAAC9mB,MAAV,GAAmB,CAAvB,EAA0B;AACtB,aAAK,IAAIX,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGynB,SAAS,CAAC9mB,MAA9B,EAAsCX,CAAC,EAAvC,EAA2C;AACvCswB,UAAAA,IAAI,CAACtwB,CAAC,GAAG,CAAL,CAAJ,GAAcynB,SAAS,CAACznB,CAAD,CAAvB;AACH;AACJ;;AACD6vB,MAAAA,KAAK,CAACxrB,IAAN,CAAW,IAAIksB,IAAJ,CAASb,GAAT,EAAcY,IAAd,CAAX;;AACA,UAAIT,KAAK,CAAClvB,MAAN,KAAiB,CAAjB,IAAsB,CAACmvB,QAA3B,EAAqC;AACjCL,QAAAA,UAAU,CAACS,UAAD,CAAV;AACH;AACJ,KAXD,CAtI0C,CAmJ1C;;;AACA,aAASK,IAAT,CAAcb,GAAd,EAAmBjS,KAAnB,EAA0B;AACtB,WAAKiS,GAAL,GAAWA,GAAX;AACA,WAAKjS,KAAL,GAAaA,KAAb;AACH;;AACD8S,IAAAA,IAAI,CAACpkB,SAAL,CAAeikB,GAAf,GAAqB,YAAY;AAC7B,WAAKV,GAAL,CAASnH,KAAT,CAAe,IAAf,EAAqB,KAAK9K,KAA1B;AACH,KAFD;;AAGA1E,IAAAA,OAAO,CAACyX,KAAR,GAAgB,SAAhB;AACAzX,IAAAA,OAAO,CAAC0X,OAAR,GAAkB,IAAlB;AACA1X,IAAAA,OAAO,CAAC2X,GAAR,GAAc,EAAd;AACA3X,IAAAA,OAAO,CAAC4X,IAAR,GAAe,EAAf;AACA5X,IAAAA,OAAO,CAACH,OAAR,GAAkB,EAAlB,CA/J0C,CA+JpB;;AACtBG,IAAAA,OAAO,CAACW,QAAR,GAAmB,EAAnB;;AAEA,aAASkX,IAAT,GAAgB,CAAE;;AAElB7X,IAAAA,OAAO,CAAC8X,EAAR,GAAaD,IAAb;AACA7X,IAAAA,OAAO,CAAC+X,WAAR,GAAsBF,IAAtB;AACA7X,IAAAA,OAAO,CAACgY,IAAR,GAAeH,IAAf;AACA7X,IAAAA,OAAO,CAACiY,GAAR,GAAcJ,IAAd;AACA7X,IAAAA,OAAO,CAACkY,cAAR,GAAyBL,IAAzB;AACA7X,IAAAA,OAAO,CAACmY,kBAAR,GAA6BN,IAA7B;AACA7X,IAAAA,OAAO,CAACoY,IAAR,GAAeP,IAAf;AACA7X,IAAAA,OAAO,CAACqY,eAAR,GAA0BR,IAA1B;AACA7X,IAAAA,OAAO,CAACsY,mBAAR,GAA8BT,IAA9B;;AAEA7X,IAAAA,OAAO,CAACuY,SAAR,GAAoB,UAAUnV,IAAV,EAAgB;AAAE,aAAO,EAAP;AAAW,KAAjD;;AAEApD,IAAAA,OAAO,CAACwY,OAAR,GAAkB,UAAUpV,IAAV,EAAgB;AAC9B,YAAM,IAAI7b,KAAJ,CAAU,kCAAV,CAAN;AACH,KAFD;;AAIAyY,IAAAA,OAAO,CAACyY,GAAR,GAAc,YAAY;AAAE,aAAO,GAAP;AAAY,KAAxC;;AACAzY,IAAAA,OAAO,CAAC0Y,KAAR,GAAgB,UAAUtI,GAAV,EAAe;AAC3B,YAAM,IAAI7oB,KAAJ,CAAU,gCAAV,CAAN;AACH,KAFD;;AAGAyY,IAAAA,OAAO,CAAC2Y,KAAR,GAAgB,YAAW;AAAE,aAAO,CAAP;AAAW,KAAxC;AAEC,GA1LQ,EA0LP,EA1LO;AArtLic,CAA5c,EA+4LS,EA/4LT,EA+4LY,CAAC,EAAD,CA/4LZ;AAi5LE9wB,MAAM,CAACH,OAAP,GAAiBojB,WAAjB","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n  // base-x encoding / decoding\n  // Copyright (c) 2018 base-x contributors\n  // Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n  // Distributed under the MIT software license, see the accompanying\n  // file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n  \n  const Buffer = require('safe-buffer').Buffer\n  \n  module.exports = function base (ALPHABET) {\n    if (ALPHABET.length >= 255) throw new TypeError('Alphabet too long')\n  \n    const BASE_MAP = new Uint8Array(256)\n    BASE_MAP.fill(255)\n  \n    for (let i = 0; i < ALPHABET.length; i++) {\n      const x = ALPHABET.charAt(i)\n      const xc = x.charCodeAt(0)\n  \n      if (BASE_MAP[xc] !== 255) throw new TypeError(x + ' is ambiguous')\n      BASE_MAP[xc] = i\n    }\n  \n    const BASE = ALPHABET.length\n    const LEADER = ALPHABET.charAt(0)\n    const FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n    const iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  \n    function encode (source) {\n      if (!Buffer.isBuffer(source)) throw new TypeError('Expected Buffer')\n      if (source.length === 0) return ''\n  \n      // Skip & count leading zeroes.\n      let zeroes = 0\n      let length = 0\n      let pbegin = 0\n      const pend = source.length\n  \n      while (pbegin !== pend && source[pbegin] === 0) {\n        pbegin++\n        zeroes++\n      }\n  \n      // Allocate enough space in big-endian base58 representation.\n      const size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n      const b58 = new Uint8Array(size)\n  \n      // Process the bytes.\n      while (pbegin !== pend) {\n        let carry = source[pbegin]\n  \n        // Apply \"b58 = b58 * 256 + ch\".\n        let i = 0\n        for (let it = size - 1; (carry !== 0 || i < length) && (it !== -1); it--, i++) {\n          carry += (256 * b58[it]) >>> 0\n          b58[it] = (carry % BASE) >>> 0\n          carry = (carry / BASE) >>> 0\n        }\n  \n        if (carry !== 0) throw new Error('Non-zero carry')\n        length = i\n        pbegin++\n      }\n  \n      // Skip leading zeroes in base58 result.\n      let it = size - length\n      while (it !== size && b58[it] === 0) {\n        it++\n      }\n  \n      // Translate the result into a string.\n      let str = LEADER.repeat(zeroes)\n      for (; it < size; ++it) str += ALPHABET.charAt(b58[it])\n  \n      return str\n    }\n  \n    function decodeUnsafe (source) {\n      if (typeof source !== 'string') throw new TypeError('Expected String')\n      if (source.length === 0) return Buffer.alloc(0)\n  \n      let psz = 0\n  \n      // Skip leading spaces.\n      if (source[psz] === ' ') return\n  \n      // Skip and count leading '1's.\n      let zeroes = 0\n      let length = 0\n      while (source[psz] === LEADER) {\n        zeroes++\n        psz++\n      }\n  \n      // Allocate enough space in big-endian base256 representation.\n      const size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n      const b256 = new Uint8Array(size)\n  \n      // Process the characters.\n      while (source[psz]) {\n        // Decode character\n        let carry = BASE_MAP[source.charCodeAt(psz)]\n  \n        // Invalid character\n        if (carry === 255) return\n  \n        let i = 0\n        for (let it = size - 1; (carry !== 0 || i < length) && (it !== -1); it--, i++) {\n          carry += (BASE * b256[it]) >>> 0\n          b256[it] = (carry % 256) >>> 0\n          carry = (carry / 256) >>> 0\n        }\n  \n        if (carry !== 0) throw new Error('Non-zero carry')\n        length = i\n        psz++\n      }\n  \n      // Skip trailing spaces.\n      if (source[psz] === ' ') return\n  \n      // Skip leading zeroes in b256.\n      let it = size - length\n      while (it !== size && b256[it] === 0) {\n        it++\n      }\n  \n      const vch = Buffer.allocUnsafe(zeroes + (size - it))\n      vch.fill(0x00, 0, zeroes)\n  \n      let j = zeroes\n      while (it !== size) {\n        vch[j++] = b256[it++]\n      }\n  \n      return vch\n    }\n  \n    function decode (string) {\n      const buffer = decodeUnsafe(string)\n      if (buffer) return buffer\n  \n      throw new Error('Non-base' + BASE + ' character')\n    }\n  \n    return {\n      encode: encode,\n      decodeUnsafe: decodeUnsafe,\n      decode: decode\n    }\n  }\n  \n  },{\"safe-buffer\":3}],2:[function(require,module,exports){\n  /*\n   A JavaScript implementation of the SHA family of hashes, as\n   defined in FIPS PUB 180-4 and FIPS PUB 202, as well as the corresponding\n   HMAC implementation as defined in FIPS PUB 198a\n   Copyright Brian Turek 2008-2017\n   Distributed under the BSD License\n   See http://caligatio.github.com/jsSHA/ for more information\n   Several functions taken from Paul Johnston\n  */\n  'use strict';(function(I){function w(c,a,d){var l=0,b=[],g=0,f,n,k,e,h,q,y,p,m=!1,t=[],r=[],u,z=!1;d=d||{};f=d.encoding||\"UTF8\";u=d.numRounds||1;if(u!==parseInt(u,10)||1>u)throw Error(\"numRounds must a integer >= 1\");if(0===c.lastIndexOf(\"SHA-\",0))if(q=function(b,a){return A(b,a,c)},y=function(b,a,l,f){var g,e;if(\"SHA-224\"===c||\"SHA-256\"===c)g=(a+65>>>9<<4)+15,e=16;else throw Error(\"Unexpected error in SHA-2 implementation\");for(;b.length<=g;)b.push(0);b[a>>>5]|=128<<24-a%32;a=a+l;b[g]=a&4294967295;\n  b[g-1]=a/4294967296|0;l=b.length;for(a=0;a<l;a+=e)f=A(b.slice(a,a+e),f,c);if(\"SHA-224\"===c)b=[f[0],f[1],f[2],f[3],f[4],f[5],f[6]];else if(\"SHA-256\"===c)b=f;else throw Error(\"Unexpected error in SHA-2 implementation\");return b},p=function(b){return b.slice()},\"SHA-224\"===c)h=512,e=224;else if(\"SHA-256\"===c)h=512,e=256;else throw Error(\"Chosen SHA variant is not supported\");else throw Error(\"Chosen SHA variant is not supported\");k=B(a,f);n=x(c);this.setHMACKey=function(b,a,g){var e;if(!0===m)throw Error(\"HMAC key already set\");\n  if(!0===z)throw Error(\"Cannot set HMAC key after calling update\");f=(g||{}).encoding||\"UTF8\";a=B(a,f)(b);b=a.binLen;a=a.value;e=h>>>3;g=e/4-1;if(e<b/8){for(a=y(a,b,0,x(c));a.length<=g;)a.push(0);a[g]&=4294967040}else if(e>b/8){for(;a.length<=g;)a.push(0);a[g]&=4294967040}for(b=0;b<=g;b+=1)t[b]=a[b]^909522486,r[b]=a[b]^1549556828;n=q(t,n);l=h;m=!0};this.update=function(a){var c,f,e,d=0,p=h>>>5;c=k(a,b,g);a=c.binLen;f=c.value;c=a>>>5;for(e=0;e<c;e+=p)d+h<=a&&(n=q(f.slice(e,e+p),n),d+=h);l+=d;b=f.slice(d>>>\n  5);g=a%h;z=!0};this.getHash=function(a,f){var d,h,k,q;if(!0===m)throw Error(\"Cannot call getHash after setting HMAC key\");k=C(f);switch(a){case \"HEX\":d=function(a){return D(a,e,k)};break;case \"B64\":d=function(a){return E(a,e,k)};break;case \"BYTES\":d=function(a){return F(a,e)};break;case \"ARRAYBUFFER\":try{h=new ArrayBuffer(0)}catch(v){throw Error(\"ARRAYBUFFER not supported by this environment\");}d=function(a){return G(a,e)};break;default:throw Error(\"format must be HEX, B64, BYTES, or ARRAYBUFFER\");\n  }q=y(b.slice(),g,l,p(n));for(h=1;h<u;h+=1)q=y(q,e,0,x(c));return d(q)};this.getHMAC=function(a,f){var d,k,t,u;if(!1===m)throw Error(\"Cannot call getHMAC without first setting HMAC key\");t=C(f);switch(a){case \"HEX\":d=function(a){return D(a,e,t)};break;case \"B64\":d=function(a){return E(a,e,t)};break;case \"BYTES\":d=function(a){return F(a,e)};break;case \"ARRAYBUFFER\":try{d=new ArrayBuffer(0)}catch(v){throw Error(\"ARRAYBUFFER not supported by this environment\");}d=function(a){return G(a,e)};break;default:throw Error(\"outputFormat must be HEX, B64, BYTES, or ARRAYBUFFER\");\n  }k=y(b.slice(),g,l,p(n));u=q(r,x(c));u=y(k,e,h,u);return d(u)}}function m(){}function D(c,a,d){var l=\"\";a/=8;var b,g;for(b=0;b<a;b+=1)g=c[b>>>2]>>>8*(3+b%4*-1),l+=\"0123456789abcdef\".charAt(g>>>4&15)+\"0123456789abcdef\".charAt(g&15);return d.outputUpper?l.toUpperCase():l}function E(c,a,d){var l=\"\",b=a/8,g,f,n;for(g=0;g<b;g+=3)for(f=g+1<b?c[g+1>>>2]:0,n=g+2<b?c[g+2>>>2]:0,n=(c[g>>>2]>>>8*(3+g%4*-1)&255)<<16|(f>>>8*(3+(g+1)%4*-1)&255)<<8|n>>>8*(3+(g+2)%4*-1)&255,f=0;4>f;f+=1)8*g+6*f<=a?l+=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\".charAt(n>>>\n  6*(3-f)&63):l+=d.b64Pad;return l}function F(c,a){var d=\"\",l=a/8,b,g;for(b=0;b<l;b+=1)g=c[b>>>2]>>>8*(3+b%4*-1)&255,d+=String.fromCharCode(g);return d}function G(c,a){var d=a/8,l,b=new ArrayBuffer(d),g;g=new Uint8Array(b);for(l=0;l<d;l+=1)g[l]=c[l>>>2]>>>8*(3+l%4*-1)&255;return b}function C(c){var a={outputUpper:!1,b64Pad:\"=\",shakeLen:-1};c=c||{};a.outputUpper=c.outputUpper||!1;!0===c.hasOwnProperty(\"b64Pad\")&&(a.b64Pad=c.b64Pad);if(\"boolean\"!==typeof a.outputUpper)throw Error(\"Invalid outputUpper formatting option\");\n  if(\"string\"!==typeof a.b64Pad)throw Error(\"Invalid b64Pad formatting option\");return a}function B(c,a){var d;switch(a){case \"UTF8\":case \"UTF16BE\":case \"UTF16LE\":break;default:throw Error(\"encoding must be UTF8, UTF16BE, or UTF16LE\");}switch(c){case \"HEX\":d=function(a,b,c){var f=a.length,d,k,e,h,q;if(0!==f%2)throw Error(\"String of HEX type must be in byte increments\");b=b||[0];c=c||0;q=c>>>3;for(d=0;d<f;d+=2){k=parseInt(a.substr(d,2),16);if(isNaN(k))throw Error(\"String of HEX type contains invalid characters\");\n  h=(d>>>1)+q;for(e=h>>>2;b.length<=e;)b.push(0);b[e]|=k<<8*(3+h%4*-1)}return{value:b,binLen:4*f+c}};break;case \"TEXT\":d=function(c,b,d){var f,n,k=0,e,h,q,m,p,r;b=b||[0];d=d||0;q=d>>>3;if(\"UTF8\"===a)for(r=3,e=0;e<c.length;e+=1)for(f=c.charCodeAt(e),n=[],128>f?n.push(f):2048>f?(n.push(192|f>>>6),n.push(128|f&63)):55296>f||57344<=f?n.push(224|f>>>12,128|f>>>6&63,128|f&63):(e+=1,f=65536+((f&1023)<<10|c.charCodeAt(e)&1023),n.push(240|f>>>18,128|f>>>12&63,128|f>>>6&63,128|f&63)),h=0;h<n.length;h+=1){p=k+\n  q;for(m=p>>>2;b.length<=m;)b.push(0);b[m]|=n[h]<<8*(r+p%4*-1);k+=1}else if(\"UTF16BE\"===a||\"UTF16LE\"===a)for(r=2,n=\"UTF16LE\"===a&&!0||\"UTF16LE\"!==a&&!1,e=0;e<c.length;e+=1){f=c.charCodeAt(e);!0===n&&(h=f&255,f=h<<8|f>>>8);p=k+q;for(m=p>>>2;b.length<=m;)b.push(0);b[m]|=f<<8*(r+p%4*-1);k+=2}return{value:b,binLen:8*k+d}};break;case \"B64\":d=function(a,b,c){var f=0,d,k,e,h,q,m,p;if(-1===a.search(/^[a-zA-Z0-9=+\\/]+$/))throw Error(\"Invalid character in base-64 string\");k=a.indexOf(\"=\");a=a.replace(/\\=/g,\n  \"\");if(-1!==k&&k<a.length)throw Error(\"Invalid '=' found in base-64 string\");b=b||[0];c=c||0;m=c>>>3;for(k=0;k<a.length;k+=4){q=a.substr(k,4);for(e=h=0;e<q.length;e+=1)d=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\".indexOf(q[e]),h|=d<<18-6*e;for(e=0;e<q.length-1;e+=1){p=f+m;for(d=p>>>2;b.length<=d;)b.push(0);b[d]|=(h>>>16-8*e&255)<<8*(3+p%4*-1);f+=1}}return{value:b,binLen:8*f+c}};break;case \"BYTES\":d=function(a,b,c){var d,n,k,e,h;b=b||[0];c=c||0;k=c>>>3;for(n=0;n<a.length;n+=\n  1)d=a.charCodeAt(n),h=n+k,e=h>>>2,b.length<=e&&b.push(0),b[e]|=d<<8*(3+h%4*-1);return{value:b,binLen:8*a.length+c}};break;case \"ARRAYBUFFER\":try{d=new ArrayBuffer(0)}catch(l){throw Error(\"ARRAYBUFFER not supported by this environment\");}d=function(a,b,c){var d,n,k,e,h;b=b||[0];c=c||0;n=c>>>3;h=new Uint8Array(a);for(d=0;d<a.byteLength;d+=1)e=d+n,k=e>>>2,b.length<=k&&b.push(0),b[k]|=h[d]<<8*(3+e%4*-1);return{value:b,binLen:8*a.byteLength+c}};break;default:throw Error(\"format must be HEX, TEXT, B64, BYTES, or ARRAYBUFFER\");\n  }return d}function r(c,a){return c>>>a|c<<32-a}function J(c,a,d){return c&a^~c&d}function K(c,a,d){return c&a^c&d^a&d}function L(c){return r(c,2)^r(c,13)^r(c,22)}function M(c){return r(c,6)^r(c,11)^r(c,25)}function N(c){return r(c,7)^r(c,18)^c>>>3}function O(c){return r(c,17)^r(c,19)^c>>>10}function P(c,a){var d=(c&65535)+(a&65535);return((c>>>16)+(a>>>16)+(d>>>16)&65535)<<16|d&65535}function Q(c,a,d,l){var b=(c&65535)+(a&65535)+(d&65535)+(l&65535);return((c>>>16)+(a>>>16)+(d>>>16)+(l>>>16)+(b>>>\n  16)&65535)<<16|b&65535}function R(c,a,d,l,b){var g=(c&65535)+(a&65535)+(d&65535)+(l&65535)+(b&65535);return((c>>>16)+(a>>>16)+(d>>>16)+(l>>>16)+(b>>>16)+(g>>>16)&65535)<<16|g&65535}function x(c){var a=[],d;if(0===c.lastIndexOf(\"SHA-\",0))switch(a=[3238371032,914150663,812702999,4144912697,4290775857,1750603025,1694076839,3204075428],d=[1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225],c){case \"SHA-224\":break;case \"SHA-256\":a=d;break;case \"SHA-384\":a=[new m,new m,\n  new m,new m,new m,new m,new m,new m];break;case \"SHA-512\":a=[new m,new m,new m,new m,new m,new m,new m,new m];break;default:throw Error(\"Unknown SHA variant\");}else throw Error(\"No SHA variants supported\");return a}function A(c,a,d){var l,b,g,f,n,k,e,h,m,r,p,w,t,x,u,z,A,B,C,D,E,F,v=[],G;if(\"SHA-224\"===d||\"SHA-256\"===d)r=64,w=1,F=Number,t=P,x=Q,u=R,z=N,A=O,B=L,C=M,E=K,D=J,G=H;else throw Error(\"Unexpected error in SHA-2 implementation\");d=a[0];l=a[1];b=a[2];g=a[3];f=a[4];n=a[5];k=a[6];e=a[7];for(p=\n  0;p<r;p+=1)16>p?(m=p*w,h=c.length<=m?0:c[m],m=c.length<=m+1?0:c[m+1],v[p]=new F(h,m)):v[p]=x(A(v[p-2]),v[p-7],z(v[p-15]),v[p-16]),h=u(e,C(f),D(f,n,k),G[p],v[p]),m=t(B(d),E(d,l,b)),e=k,k=n,n=f,f=t(g,h),g=b,b=l,l=d,d=t(h,m);a[0]=t(d,a[0]);a[1]=t(l,a[1]);a[2]=t(b,a[2]);a[3]=t(g,a[3]);a[4]=t(f,a[4]);a[5]=t(n,a[5]);a[6]=t(k,a[6]);a[7]=t(e,a[7]);return a}var H;H=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,\n  2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,\n  2756734187,3204031479,3329325298];\"function\"===typeof define&&define.amd?define(function(){return w}):\"undefined\"!==typeof exports?(\"undefined\"!==typeof module&&module.exports&&(module.exports=w),exports=w):I.jsSHA=w})(this);\n  \n  },{}],3:[function(require,module,exports){\n  var buffer = require('buffer')\n  var Buffer = buffer.Buffer\n  \n  // alternative to using Object.keys for old browsers\n  function copyProps (src, dst) {\n    for (var key in src) {\n      dst[key] = src[key]\n    }\n  }\n  if (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n    module.exports = buffer\n  } else {\n    // Copy properties from require('buffer')\n    copyProps(buffer, exports)\n    exports.Buffer = SafeBuffer\n  }\n  \n  function SafeBuffer (arg, encodingOrOffset, length) {\n    return Buffer(arg, encodingOrOffset, length)\n  }\n  \n  // Copy static methods from Buffer\n  copyProps(Buffer, SafeBuffer)\n  \n  SafeBuffer.from = function (arg, encodingOrOffset, length) {\n    if (typeof arg === 'number') {\n      throw new TypeError('Argument must not be a number')\n    }\n    return Buffer(arg, encodingOrOffset, length)\n  }\n  \n  SafeBuffer.alloc = function (size, fill, encoding) {\n    if (typeof size !== 'number') {\n      throw new TypeError('Argument must be a number')\n    }\n    var buf = Buffer(size)\n    if (fill !== undefined) {\n      if (typeof encoding === 'string') {\n        buf.fill(fill, encoding)\n      } else {\n        buf.fill(fill)\n      }\n    } else {\n      buf.fill(0)\n    }\n    return buf\n  }\n  \n  SafeBuffer.allocUnsafe = function (size) {\n    if (typeof size !== 'number') {\n      throw new TypeError('Argument must be a number')\n    }\n    return Buffer(size)\n  }\n  \n  SafeBuffer.allocUnsafeSlow = function (size) {\n    if (typeof size !== 'number') {\n      throw new TypeError('Argument must be a number')\n    }\n    return buffer.SlowBuffer(size)\n  }\n  \n  },{\"buffer\":22}],4:[function(require,module,exports){\n  var base58 = require('./crypto/base58');\n  var segwit = require('./crypto/segwit_addr');\n  var cryptoUtils = require('./crypto/utils');\n  \n  var DEFAULT_NETWORK_TYPE = 'prod';\n  \n  function getDecoded(address) {\n      try {\n          return base58.decode(address);\n      } catch (e) {\n          // if decoding fails, assume invalid address\n          return null;\n      }\n  }\n  \n  function getChecksum(hashFunction, payload) {\n      // Each currency may implement different hashing algorithm\n      switch (hashFunction) {\n          case 'blake256':\n              return cryptoUtils.blake256Checksum(payload);\n              break;\n          case 'sha256':\n          default:\n              return cryptoUtils.sha256Checksum(payload);\n      }\n  }\n  \n  function getAddressType(address, currency) {\n      currency = currency || {};\n      // should be 25 bytes per btc address spec and 26 decred\n      var expectedLength = currency.expectedLength || 25;\n      var hashFunction = currency.hashFunction || 'sha256';\n      var decoded = getDecoded(address);\n  \n      if (decoded) {\n          var length = decoded.length;\n  \n          if (length !== expectedLength) {\n              return null;\n          }\n  \n          var checksum = cryptoUtils.toHex(decoded.slice(length - 4, length)),\n              body = cryptoUtils.toHex(decoded.slice(0, length - 4)),\n              goodChecksum = getChecksum(hashFunction, body);\n  \n          return checksum === goodChecksum ? cryptoUtils.toHex(decoded.slice(0, expectedLength - 24)) : null;\n      }\n  \n      return null;\n  }\n  \n  function isValidP2PKHandP2SHAddress(address, currency, networkType) {\n      networkType = networkType || DEFAULT_NETWORK_TYPE;\n  \n      var correctAddressTypes;\n      var addressType = getAddressType(address, currency);\n  \n      if (addressType) {\n          if (networkType === 'prod' || networkType === 'testnet') {\n              correctAddressTypes = currency.addressTypes[networkType]\n          } else {\n              correctAddressTypes = currency.addressTypes.prod.concat(currency.addressTypes.testnet);\n          }\n  \n          return correctAddressTypes.indexOf(addressType) >= 0;\n      }\n  \n      return false;\n  }\n  \n  module.exports = {\n      isValidAddress: function (address, currency, networkType) {\n          return isValidP2PKHandP2SHAddress(address, currency, networkType) || segwit.isValidAddress(address, currency.segwitHrp);\n      }\n  };\n  \n  },{\"./crypto/base58\":5,\"./crypto/segwit_addr\":11,\"./crypto/utils\":13}],5:[function(require,module,exports){\n  // Base58 encoding/decoding\n  // Originally written by Mike Hearn for BitcoinJ\n  // Copyright (c) 2011 Google Inc\n  // Ported to JavaScript by Stefan Thomas\n  // Merged Buffer refactorings from base58-native by Stephen Pair\n  // Copyright (c) 2013 BitPay Inc\n  \n  var ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';\n  var ALPHABET_MAP = {};\n  for (var i = 0; i < ALPHABET.length; ++i) {\n      ALPHABET_MAP[ALPHABET.charAt(i)] = i;\n  }\n  var BASE = ALPHABET.length;\n  \n  module.exports = {\n      decode: function(string) {\n          if (string.length === 0) return [];\n  \n          var i, j, bytes = [0];\n          for (i = 0; i < string.length; ++i) {\n              var c = string[i];\n              if (!(c in ALPHABET_MAP)) throw new Error('Non-base58 character');\n  \n              for (j = 0; j < bytes.length; ++j) bytes[j] *= BASE\n              bytes[0] += ALPHABET_MAP[c];\n  \n              var carry = 0;\n              for (j = 0; j < bytes.length; ++j) {\n                  bytes[j] += carry;\n                  carry = bytes[j] >> 8;\n                  bytes[j] &= 0xff\n              }\n  \n              while (carry) {\n                  bytes.push(carry & 0xff);\n                  carry >>= 8;\n              }\n          }\n          // deal with leading zeros\n          for (i = 0; string[i] === '1' && i < string.length - 1; ++i){\n              bytes.push(0);\n          }\n  \n          return bytes.reverse();\n      }\n  };\n  \n  },{}],6:[function(require,module,exports){\n  // Copyright (c) 2017 Pieter Wuille\n  //\n  // Permission is hereby granted, free of charge, to any person obtaining a copy\n  // of this software and associated documentation files (the \"Software\"), to deal\n  // in the Software without restriction, including without limitation the rights\n  // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  // copies of the Software, and to permit persons to whom the Software is\n  // furnished to do so, subject to the following conditions:\n  //\n  // The above copyright notice and this permission notice shall be included in\n  // all copies or substantial portions of the Software.\n  //\n  // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n  // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  // THE SOFTWARE.\n  \n  var CHARSET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l';\n  var GENERATOR = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];\n  \n  module.exports = {\n    decode: decode,\n    encode: encode,\n  };\n  \n  \n  function polymod (values) {\n    var chk = 1;\n    for (var p = 0; p < values.length; ++p) {\n      var top = chk >> 25;\n      chk = (chk & 0x1ffffff) << 5 ^ values[p];\n      for (var i = 0; i < 5; ++i) {\n        if ((top >> i) & 1) {\n          chk ^= GENERATOR[i];\n        }\n      }\n    }\n    return chk;\n  }\n  \n  function hrpExpand (hrp) {\n    var ret = [];\n    var p;\n    for (p = 0; p < hrp.length; ++p) {\n      ret.push(hrp.charCodeAt(p) >> 5);\n    }\n    ret.push(0);\n    for (p = 0; p < hrp.length; ++p) {\n      ret.push(hrp.charCodeAt(p) & 31);\n    }\n    return ret;\n  }\n  \n  function verifyChecksum (hrp, data) {\n    return polymod(hrpExpand(hrp).concat(data)) === 1;\n  }\n  \n  function createChecksum (hrp, data) {\n    var values = hrpExpand(hrp).concat(data).concat([0, 0, 0, 0, 0, 0]);\n    var mod = polymod(values) ^ 1;\n    var ret = [];\n    for (var p = 0; p < 6; ++p) {\n      ret.push((mod >> 5 * (5 - p)) & 31);\n    }\n    return ret;\n  }\n  \n  function encode (hrp, data) {\n    var combined = data.concat(createChecksum(hrp, data));\n    var ret = hrp + '1';\n    for (var p = 0; p < combined.length; ++p) {\n      ret += CHARSET.charAt(combined[p]);\n    }\n    return ret;\n  }\n  \n  function decode (bechString) {\n    var p;\n    var has_lower = false;\n    var has_upper = false;\n    for (p = 0; p < bechString.length; ++p) {\n      if (bechString.charCodeAt(p) < 33 || bechString.charCodeAt(p) > 126) {\n        return null;\n      }\n      if (bechString.charCodeAt(p) >= 97 && bechString.charCodeAt(p) <= 122) {\n          has_lower = true;\n      }\n      if (bechString.charCodeAt(p) >= 65 && bechString.charCodeAt(p) <= 90) {\n          has_upper = true;\n      }\n    }\n    if (has_lower && has_upper) {\n      return null;\n    }\n    bechString = bechString.toLowerCase();\n    var pos = bechString.lastIndexOf('1');\n    if (pos < 1 || pos + 7 > bechString.length || bechString.length > 90) {\n      return null;\n    }\n    var hrp = bechString.substring(0, pos);\n    var data = [];\n    for (p = pos + 1; p < bechString.length; ++p) {\n      var d = CHARSET.indexOf(bechString.charAt(p));\n      if (d === -1) {\n        return null;\n      }\n      data.push(d);\n    }\n    if (!verifyChecksum(hrp, data)) {\n      return null;\n    }\n    return {hrp: hrp, data: data.slice(0, data.length - 6)};\n  }\n  \n  },{}],7:[function(require,module,exports){\n  /*\n    JavaScript BigInteger library version 0.9.1\n    http://silentmatt.com/biginteger/\n    Copyright (c) 2009 Matthew Crumley <email@matthewcrumley.com>\n    Copyright (c) 2010,2011 by John Tobey <John.Tobey@gmail.com>\n    Licensed under the MIT license.\n    Support for arbitrary internal representation base was added by\n    Vitaly Magerya.\n  */\n  \n  /*\n    File: biginteger.js\n    Exports:\n      <BigInteger>\n  */\n  (function(exports) {\n      \"use strict\";\n      /*\n          Class: BigInteger\n          An arbitrarily-large integer.\n          <BigInteger> objects should be considered immutable. None of the \"built-in\"\n          methods modify *this* or their arguments. All properties should be\n          considered private.\n          All the methods of <BigInteger> instances can be called \"statically\". The\n          static versions are convenient if you don't already have a <BigInteger>\n          object.\n          As an example, these calls are equivalent.\n          > BigInteger(4).multiply(5); // returns BigInteger(20);\n          > BigInteger.multiply(4, 5); // returns BigInteger(20);\n          > var a = 42;\n          > var a = BigInteger.toJSValue(\"0b101010\"); // Not completely useless...\n      */\n      \n      var CONSTRUCT = {}; // Unique token to call \"private\" version of constructor\n      \n      /*\n          Constructor: BigInteger()\n          Convert a value to a <BigInteger>.\n          Although <BigInteger()> is the constructor for <BigInteger> objects, it is\n          best not to call it as a constructor. If *n* is a <BigInteger> object, it is\n          simply returned as-is. Otherwise, <BigInteger()> is equivalent to <parse>\n          without a radix argument.\n          > var n0 = BigInteger();      // Same as <BigInteger.ZERO>\n          > var n1 = BigInteger(\"123\"); // Create a new <BigInteger> with value 123\n          > var n2 = BigInteger(123);   // Create a new <BigInteger> with value 123\n          > var n3 = BigInteger(n2);    // Return n2, unchanged\n          The constructor form only takes an array and a sign. *n* must be an\n          array of numbers in little-endian order, where each digit is between 0\n          and BigInteger.base.  The second parameter sets the sign: -1 for\n          negative, +1 for positive, or 0 for zero. The array is *not copied and\n          may be modified*. If the array contains only zeros, the sign parameter\n          is ignored and is forced to zero.\n          > new BigInteger([5], -1): create a new BigInteger with value -5\n          Parameters:\n              n - Value to convert to a <BigInteger>.\n          Returns:\n              A <BigInteger> value.\n          See Also:\n              <parse>, <BigInteger>\n      */\n      function BigInteger(n, s, token) {\n          \n          if (token !== CONSTRUCT) {\n              if (n instanceof BigInteger) {\n                  return n;\n              }\n              else if (typeof n === \"undefined\") {\n                  return ZERO;\n              }\n              return BigInteger.parse(n);\n          }\n      \n          n = n || [];  // Provide the nullary constructor for subclasses.\n          while (n.length && !n[n.length - 1]) {\n              --n.length;\n          }\n          this._d = n;\n          this._s = n.length ? (s || 1) : 0;\n      }\n      \n      BigInteger._construct = function(n, s) {\n          return new BigInteger(n, s, CONSTRUCT);\n      };\n      \n      // Base-10 speedup hacks in parse, toString, exp10 and log functions\n      // require base to be a power of 10. 10^7 is the largest such power\n      // that won't cause a precision loss when digits are multiplied.\n      var BigInteger_base = 10000000;\n      var BigInteger_base_log10 = 7;\n      \n      BigInteger.base = BigInteger_base;\n      BigInteger.base_log10 = BigInteger_base_log10;\n      \n      var ZERO = new BigInteger([], 0, CONSTRUCT);\n      // Constant: ZERO\n      // <BigInteger> 0.\n      BigInteger.ZERO = ZERO;\n      \n      var ONE = new BigInteger([1], 1, CONSTRUCT);\n      // Constant: ONE\n      // <BigInteger> 1.\n      BigInteger.ONE = ONE;\n      \n      var M_ONE = new BigInteger(ONE._d, -1, CONSTRUCT);\n      // Constant: M_ONE\n      // <BigInteger> -1.\n      BigInteger.M_ONE = M_ONE;\n      \n      // Constant: _0\n      // Shortcut for <ZERO>.\n      BigInteger._0 = ZERO;\n      \n      // Constant: _1\n      // Shortcut for <ONE>.\n      BigInteger._1 = ONE;\n      \n      /*\n          Constant: small\n          Array of <BigIntegers> from 0 to 36.\n          These are used internally for parsing, but useful when you need a \"small\"\n          <BigInteger>.\n          See Also:\n              <ZERO>, <ONE>, <_0>, <_1>\n      */\n      BigInteger.small = [\n          ZERO,\n          ONE,\n          /* Assuming BigInteger_base > 36 */\n          new BigInteger( [2], 1, CONSTRUCT),\n          new BigInteger( [3], 1, CONSTRUCT),\n          new BigInteger( [4], 1, CONSTRUCT),\n          new BigInteger( [5], 1, CONSTRUCT),\n          new BigInteger( [6], 1, CONSTRUCT),\n          new BigInteger( [7], 1, CONSTRUCT),\n          new BigInteger( [8], 1, CONSTRUCT),\n          new BigInteger( [9], 1, CONSTRUCT),\n          new BigInteger([10], 1, CONSTRUCT),\n          new BigInteger([11], 1, CONSTRUCT),\n          new BigInteger([12], 1, CONSTRUCT),\n          new BigInteger([13], 1, CONSTRUCT),\n          new BigInteger([14], 1, CONSTRUCT),\n          new BigInteger([15], 1, CONSTRUCT),\n          new BigInteger([16], 1, CONSTRUCT),\n          new BigInteger([17], 1, CONSTRUCT),\n          new BigInteger([18], 1, CONSTRUCT),\n          new BigInteger([19], 1, CONSTRUCT),\n          new BigInteger([20], 1, CONSTRUCT),\n          new BigInteger([21], 1, CONSTRUCT),\n          new BigInteger([22], 1, CONSTRUCT),\n          new BigInteger([23], 1, CONSTRUCT),\n          new BigInteger([24], 1, CONSTRUCT),\n          new BigInteger([25], 1, CONSTRUCT),\n          new BigInteger([26], 1, CONSTRUCT),\n          new BigInteger([27], 1, CONSTRUCT),\n          new BigInteger([28], 1, CONSTRUCT),\n          new BigInteger([29], 1, CONSTRUCT),\n          new BigInteger([30], 1, CONSTRUCT),\n          new BigInteger([31], 1, CONSTRUCT),\n          new BigInteger([32], 1, CONSTRUCT),\n          new BigInteger([33], 1, CONSTRUCT),\n          new BigInteger([34], 1, CONSTRUCT),\n          new BigInteger([35], 1, CONSTRUCT),\n          new BigInteger([36], 1, CONSTRUCT)\n      ];\n      \n      // Used for parsing/radix conversion\n      BigInteger.digits = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\".split(\"\");\n      \n      /*\n          Method: toString\n          Convert a <BigInteger> to a string.\n          When *base* is greater than 10, letters are upper case.\n          Parameters:\n              base - Optional base to represent the number in (default is base 10).\n                     Must be between 2 and 36 inclusive, or an Error will be thrown.\n          Returns:\n              The string representation of the <BigInteger>.\n      */\n      BigInteger.prototype.toString = function(base) {\n          base = +base || 10;\n          if (base < 2 || base > 36) {\n              throw new Error(\"illegal radix \" + base + \".\");\n          }\n          if (this._s === 0) {\n              return \"0\";\n          }\n          if (base === 10) {\n              var str = this._s < 0 ? \"-\" : \"\";\n              str += this._d[this._d.length - 1].toString();\n              for (var i = this._d.length - 2; i >= 0; i--) {\n                  var group = this._d[i].toString();\n                  while (group.length < BigInteger_base_log10) group = '0' + group;\n                  str += group;\n              }\n              return str;\n          }\n          else {\n              var numerals = BigInteger.digits;\n              base = BigInteger.small[base];\n              var sign = this._s;\n      \n              var n = this.abs();\n              var digits = [];\n              var digit;\n      \n              while (n._s !== 0) {\n                  var divmod = n.divRem(base);\n                  n = divmod[0];\n                  digit = divmod[1];\n                  // TODO: This could be changed to unshift instead of reversing at the end.\n                  // Benchmark both to compare speeds.\n                  digits.push(numerals[digit.valueOf()]);\n              }\n              return (sign < 0 ? \"-\" : \"\") + digits.reverse().join(\"\");\n          }\n      };\n      \n      // Verify strings for parsing\n      BigInteger.radixRegex = [\n          /^$/,\n          /^$/,\n          /^[01]*$/,\n          /^[012]*$/,\n          /^[0-3]*$/,\n          /^[0-4]*$/,\n          /^[0-5]*$/,\n          /^[0-6]*$/,\n          /^[0-7]*$/,\n          /^[0-8]*$/,\n          /^[0-9]*$/,\n          /^[0-9aA]*$/,\n          /^[0-9abAB]*$/,\n          /^[0-9abcABC]*$/,\n          /^[0-9a-dA-D]*$/,\n          /^[0-9a-eA-E]*$/,\n          /^[0-9a-fA-F]*$/,\n          /^[0-9a-gA-G]*$/,\n          /^[0-9a-hA-H]*$/,\n          /^[0-9a-iA-I]*$/,\n          /^[0-9a-jA-J]*$/,\n          /^[0-9a-kA-K]*$/,\n          /^[0-9a-lA-L]*$/,\n          /^[0-9a-mA-M]*$/,\n          /^[0-9a-nA-N]*$/,\n          /^[0-9a-oA-O]*$/,\n          /^[0-9a-pA-P]*$/,\n          /^[0-9a-qA-Q]*$/,\n          /^[0-9a-rA-R]*$/,\n          /^[0-9a-sA-S]*$/,\n          /^[0-9a-tA-T]*$/,\n          /^[0-9a-uA-U]*$/,\n          /^[0-9a-vA-V]*$/,\n          /^[0-9a-wA-W]*$/,\n          /^[0-9a-xA-X]*$/,\n          /^[0-9a-yA-Y]*$/,\n          /^[0-9a-zA-Z]*$/\n      ];\n      \n      /*\n          Function: parse\n          Parse a string into a <BigInteger>.\n          *base* is optional but, if provided, must be from 2 to 36 inclusive. If\n          *base* is not provided, it will be guessed based on the leading characters\n          of *s* as follows:\n          - \"0x\" or \"0X\": *base* = 16\n          - \"0c\" or \"0C\": *base* = 8\n          - \"0b\" or \"0B\": *base* = 2\n          - else: *base* = 10\n          If no base is provided, or *base* is 10, the number can be in exponential\n          form. For example, these are all valid:\n          > BigInteger.parse(\"1e9\");              // Same as \"1000000000\"\n          > BigInteger.parse(\"1.234*10^3\");       // Same as 1234\n          > BigInteger.parse(\"56789 * 10 ** -2\"); // Same as 567\n          If any characters fall outside the range defined by the radix, an exception\n          will be thrown.\n          Parameters:\n              s - The string to parse.\n              base - Optional radix (default is to guess based on *s*).\n          Returns:\n              a <BigInteger> instance.\n      */\n      BigInteger.parse = function(s, base) {\n          // Expands a number in exponential form to decimal form.\n          // expandExponential(\"-13.441*10^5\") === \"1344100\";\n          // expandExponential(\"1.12300e-1\") === \"0.112300\";\n          // expandExponential(1000000000000000000000000000000) === \"1000000000000000000000000000000\";\n          function expandExponential(str) {\n              str = str.replace(/\\s*[*xX]\\s*10\\s*(\\^|\\*\\*)\\s*/, \"e\");\n      \n              return str.replace(/^([+\\-])?(\\d+)\\.?(\\d*)[eE]([+\\-]?\\d+)$/, function(x, s, n, f, c) {\n                  c = +c;\n                  var l = c < 0;\n                  var i = n.length + c;\n                  x = (l ? n : f).length;\n                  c = ((c = Math.abs(c)) >= x ? c - x + l : 0);\n                  var z = (new Array(c + 1)).join(\"0\");\n                  var r = n + f;\n                  return (s || \"\") + (l ? r = z + r : r += z).substr(0, i += l ? z.length : 0) + (i < r.length ? \".\" + r.substr(i) : \"\");\n              });\n          }\n      \n          s = s.toString();\n          if (typeof base === \"undefined\" || +base === 10) {\n              s = expandExponential(s);\n          }\n      \n          var prefixRE;\n          if (typeof base === \"undefined\") {\n              prefixRE = '0[xcb]';\n          }\n          else if (base == 16) {\n              prefixRE = '0x';\n          }\n          else if (base == 8) {\n              prefixRE = '0c';\n          }\n          else if (base == 2) {\n              prefixRE = '0b';\n          }\n          else {\n              prefixRE = '';\n          }\n          var parts = new RegExp('^([+\\\\-]?)(' + prefixRE + ')?([0-9a-z]*)(?:\\\\.\\\\d*)?$', 'i').exec(s);\n          if (parts) {\n              var sign = parts[1] || \"+\";\n              var baseSection = parts[2] || \"\";\n              var digits = parts[3] || \"\";\n      \n              if (typeof base === \"undefined\") {\n                  // Guess base\n                  if (baseSection === \"0x\" || baseSection === \"0X\") { // Hex\n                      base = 16;\n                  }\n                  else if (baseSection === \"0c\" || baseSection === \"0C\") { // Octal\n                      base = 8;\n                  }\n                  else if (baseSection === \"0b\" || baseSection === \"0B\") { // Binary\n                      base = 2;\n                  }\n                  else {\n                      base = 10;\n                  }\n              }\n              else if (base < 2 || base > 36) {\n                  throw new Error(\"Illegal radix \" + base + \".\");\n              }\n      \n              base = +base;\n      \n              // Check for digits outside the range\n              if (!(BigInteger.radixRegex[base].test(digits))) {\n                  throw new Error(\"Bad digit for radix \" + base);\n              }\n      \n              // Strip leading zeros, and convert to array\n              digits = digits.replace(/^0+/, \"\").split(\"\");\n              if (digits.length === 0) {\n                  return ZERO;\n              }\n      \n              // Get the sign (we know it's not zero)\n              sign = (sign === \"-\") ? -1 : 1;\n      \n              // Optimize 10\n              if (base == 10) {\n                  var d = [];\n                  while (digits.length >= BigInteger_base_log10) {\n                      d.push(parseInt(digits.splice(digits.length-BigInteger.base_log10, BigInteger.base_log10).join(''), 10));\n                  }\n                  d.push(parseInt(digits.join(''), 10));\n                  return new BigInteger(d, sign, CONSTRUCT);\n              }\n      \n              // Do the conversion\n              var d = ZERO;\n              base = BigInteger.small[base];\n              var small = BigInteger.small;\n              for (var i = 0; i < digits.length; i++) {\n                  d = d.multiply(base).add(small[parseInt(digits[i], 36)]);\n              }\n              return new BigInteger(d._d, sign, CONSTRUCT);\n          }\n          else {\n              throw new Error(\"Invalid BigInteger format: \" + s);\n          }\n      };\n      \n      /*\n          Function: add\n          Add two <BigIntegers>.\n          Parameters:\n              n - The number to add to *this*. Will be converted to a <BigInteger>.\n          Returns:\n              The numbers added together.\n          See Also:\n              <subtract>, <multiply>, <quotient>, <next>\n      */\n      BigInteger.prototype.add = function(n) {\n          if (this._s === 0) {\n              return BigInteger(n);\n          }\n      \n          n = BigInteger(n);\n          if (n._s === 0) {\n              return this;\n          }\n          if (this._s !== n._s) {\n              n = n.negate();\n              return this.subtract(n);\n          }\n      \n          var a = this._d;\n          var b = n._d;\n          var al = a.length;\n          var bl = b.length;\n          var sum = new Array(Math.max(al, bl) + 1);\n          var size = Math.min(al, bl);\n          var carry = 0;\n          var digit;\n      \n          for (var i = 0; i < size; i++) {\n              digit = a[i] + b[i] + carry;\n              sum[i] = digit % BigInteger_base;\n              carry = (digit / BigInteger_base) | 0;\n          }\n          if (bl > al) {\n              a = b;\n              al = bl;\n          }\n          for (i = size; carry && i < al; i++) {\n              digit = a[i] + carry;\n              sum[i] = digit % BigInteger_base;\n              carry = (digit / BigInteger_base) | 0;\n          }\n          if (carry) {\n              sum[i] = carry;\n          }\n      \n          for ( ; i < al; i++) {\n              sum[i] = a[i];\n          }\n      \n          return new BigInteger(sum, this._s, CONSTRUCT);\n      };\n      \n      /*\n          Function: negate\n          Get the additive inverse of a <BigInteger>.\n          Returns:\n              A <BigInteger> with the same magnatude, but with the opposite sign.\n          See Also:\n              <abs>\n      */\n      BigInteger.prototype.negate = function() {\n          return new BigInteger(this._d, (-this._s) | 0, CONSTRUCT);\n      };\n      \n      /*\n          Function: abs\n          Get the absolute value of a <BigInteger>.\n          Returns:\n              A <BigInteger> with the same magnatude, but always positive (or zero).\n          See Also:\n              <negate>\n      */\n      BigInteger.prototype.abs = function() {\n          return (this._s < 0) ? this.negate() : this;\n      };\n      \n      /*\n          Function: subtract\n          Subtract two <BigIntegers>.\n          Parameters:\n              n - The number to subtract from *this*. Will be converted to a <BigInteger>.\n          Returns:\n              The *n* subtracted from *this*.\n          See Also:\n              <add>, <multiply>, <quotient>, <prev>\n      */\n      BigInteger.prototype.subtract = function(n) {\n          if (this._s === 0) {\n              return BigInteger(n).negate();\n          }\n      \n          n = BigInteger(n);\n          if (n._s === 0) {\n              return this;\n          }\n          if (this._s !== n._s) {\n              n = n.negate();\n              return this.add(n);\n          }\n      \n          var m = this;\n          // negative - negative => -|a| - -|b| => -|a| + |b| => |b| - |a|\n          if (this._s < 0) {\n              m = new BigInteger(n._d, 1, CONSTRUCT);\n              n = new BigInteger(this._d, 1, CONSTRUCT);\n          }\n      \n          // Both are positive => a - b\n          var sign = m.compareAbs(n);\n          if (sign === 0) {\n              return ZERO;\n          }\n          else if (sign < 0) {\n              // swap m and n\n              var t = n;\n              n = m;\n              m = t;\n          }\n      \n          // a > b\n          var a = m._d;\n          var b = n._d;\n          var al = a.length;\n          var bl = b.length;\n          var diff = new Array(al); // al >= bl since a > b\n          var borrow = 0;\n          var i;\n          var digit;\n      \n          for (i = 0; i < bl; i++) {\n              digit = a[i] - borrow - b[i];\n              if (digit < 0) {\n                  digit += BigInteger_base;\n                  borrow = 1;\n              }\n              else {\n                  borrow = 0;\n              }\n              diff[i] = digit;\n          }\n          for (i = bl; i < al; i++) {\n              digit = a[i] - borrow;\n              if (digit < 0) {\n                  digit += BigInteger_base;\n              }\n              else {\n                  diff[i++] = digit;\n                  break;\n              }\n              diff[i] = digit;\n          }\n          for ( ; i < al; i++) {\n              diff[i] = a[i];\n          }\n      \n          return new BigInteger(diff, sign, CONSTRUCT);\n      };\n      \n      (function() {\n          function addOne(n, sign) {\n              var a = n._d;\n              var sum = a.slice();\n              var carry = true;\n              var i = 0;\n      \n              while (true) {\n                  var digit = (a[i] || 0) + 1;\n                  sum[i] = digit % BigInteger_base;\n                  if (digit <= BigInteger_base - 1) {\n                      break;\n                  }\n                  ++i;\n              }\n      \n              return new BigInteger(sum, sign, CONSTRUCT);\n          }\n      \n          function subtractOne(n, sign) {\n              var a = n._d;\n              var sum = a.slice();\n              var borrow = true;\n              var i = 0;\n      \n              while (true) {\n                  var digit = (a[i] || 0) - 1;\n                  if (digit < 0) {\n                      sum[i] = digit + BigInteger_base;\n                  }\n                  else {\n                      sum[i] = digit;\n                      break;\n                  }\n                  ++i;\n              }\n      \n              return new BigInteger(sum, sign, CONSTRUCT);\n          }\n      \n          /*\n              Function: next\n              Get the next <BigInteger> (add one).\n              Returns:\n                  *this* + 1.\n              See Also:\n                  <add>, <prev>\n          */\n          BigInteger.prototype.next = function() {\n              switch (this._s) {\n              case 0:\n                  return ONE;\n              case -1:\n                  return subtractOne(this, -1);\n              // case 1:\n              default:\n                  return addOne(this, 1);\n              }\n          };\n      \n          /*\n              Function: prev\n              Get the previous <BigInteger> (subtract one).\n              Returns:\n                  *this* - 1.\n              See Also:\n                  <next>, <subtract>\n          */\n          BigInteger.prototype.prev = function() {\n              switch (this._s) {\n              case 0:\n                  return M_ONE;\n              case -1:\n                  return addOne(this, -1);\n              // case 1:\n              default:\n                  return subtractOne(this, 1);\n              }\n          };\n      })();\n      \n      /*\n          Function: compareAbs\n          Compare the absolute value of two <BigIntegers>.\n          Calling <compareAbs> is faster than calling <abs> twice, then <compare>.\n          Parameters:\n              n - The number to compare to *this*. Will be converted to a <BigInteger>.\n          Returns:\n              -1, 0, or +1 if *|this|* is less than, equal to, or greater than *|n|*.\n          See Also:\n              <compare>, <abs>\n      */\n      BigInteger.prototype.compareAbs = function(n) {\n          if (this === n) {\n              return 0;\n          }\n      \n          if (!(n instanceof BigInteger)) {\n              if (!isFinite(n)) {\n                  return(isNaN(n) ? n : -1);\n              }\n              n = BigInteger(n);\n          }\n      \n          if (this._s === 0) {\n              return (n._s !== 0) ? -1 : 0;\n          }\n          if (n._s === 0) {\n              return 1;\n          }\n      \n          var l = this._d.length;\n          var nl = n._d.length;\n          if (l < nl) {\n              return -1;\n          }\n          else if (l > nl) {\n              return 1;\n          }\n      \n          var a = this._d;\n          var b = n._d;\n          for (var i = l-1; i >= 0; i--) {\n              if (a[i] !== b[i]) {\n                  return a[i] < b[i] ? -1 : 1;\n              }\n          }\n      \n          return 0;\n      };\n      \n      /*\n          Function: compare\n          Compare two <BigIntegers>.\n          Parameters:\n              n - The number to compare to *this*. Will be converted to a <BigInteger>.\n          Returns:\n              -1, 0, or +1 if *this* is less than, equal to, or greater than *n*.\n          See Also:\n              <compareAbs>, <isPositive>, <isNegative>, <isUnit>\n      */\n      BigInteger.prototype.compare = function(n) {\n          if (this === n) {\n              return 0;\n          }\n      \n          n = BigInteger(n);\n      \n          if (this._s === 0) {\n              return -n._s;\n          }\n      \n          if (this._s === n._s) { // both positive or both negative\n              var cmp = this.compareAbs(n);\n              return cmp * this._s;\n          }\n          else {\n              return this._s;\n          }\n      };\n      \n      /*\n          Function: isUnit\n          Return true iff *this* is either 1 or -1.\n          Returns:\n              true if *this* compares equal to <BigInteger.ONE> or <BigInteger.M_ONE>.\n          See Also:\n              <isZero>, <isNegative>, <isPositive>, <compareAbs>, <compare>,\n              <BigInteger.ONE>, <BigInteger.M_ONE>\n      */\n      BigInteger.prototype.isUnit = function() {\n          return this === ONE ||\n              this === M_ONE ||\n              (this._d.length === 1 && this._d[0] === 1);\n      };\n      \n      /*\n          Function: multiply\n          Multiply two <BigIntegers>.\n          Parameters:\n              n - The number to multiply *this* by. Will be converted to a\n              <BigInteger>.\n          Returns:\n              The numbers multiplied together.\n          See Also:\n              <add>, <subtract>, <quotient>, <square>\n      */\n      BigInteger.prototype.multiply = function(n) {\n          // TODO: Consider adding Karatsuba multiplication for large numbers\n          if (this._s === 0) {\n              return ZERO;\n          }\n      \n          n = BigInteger(n);\n          if (n._s === 0) {\n              return ZERO;\n          }\n          if (this.isUnit()) {\n              if (this._s < 0) {\n                  return n.negate();\n              }\n              return n;\n          }\n          if (n.isUnit()) {\n              if (n._s < 0) {\n                  return this.negate();\n              }\n              return this;\n          }\n          if (this === n) {\n              return this.square();\n          }\n      \n          var r = (this._d.length >= n._d.length);\n          var a = (r ? this : n)._d; // a will be longer than b\n          var b = (r ? n : this)._d;\n          var al = a.length;\n          var bl = b.length;\n      \n          var pl = al + bl;\n          var partial = new Array(pl);\n          var i;\n          for (i = 0; i < pl; i++) {\n              partial[i] = 0;\n          }\n      \n          for (i = 0; i < bl; i++) {\n              var carry = 0;\n              var bi = b[i];\n              var jlimit = al + i;\n              var digit;\n              for (var j = i; j < jlimit; j++) {\n                  digit = partial[j] + bi * a[j - i] + carry;\n                  carry = (digit / BigInteger_base) | 0;\n                  partial[j] = (digit % BigInteger_base) | 0;\n              }\n              if (carry) {\n                  digit = partial[j] + carry;\n                  carry = (digit / BigInteger_base) | 0;\n                  partial[j] = digit % BigInteger_base;\n              }\n          }\n          return new BigInteger(partial, this._s * n._s, CONSTRUCT);\n      };\n      \n      // Multiply a BigInteger by a single-digit native number\n      // Assumes that this and n are >= 0\n      // This is not really intended to be used outside the library itself\n      BigInteger.prototype.multiplySingleDigit = function(n) {\n          if (n === 0 || this._s === 0) {\n              return ZERO;\n          }\n          if (n === 1) {\n              return this;\n          }\n      \n          var digit;\n          if (this._d.length === 1) {\n              digit = this._d[0] * n;\n              if (digit >= BigInteger_base) {\n                  return new BigInteger([(digit % BigInteger_base)|0,\n                          (digit / BigInteger_base)|0], 1, CONSTRUCT);\n              }\n              return new BigInteger([digit], 1, CONSTRUCT);\n          }\n      \n          if (n === 2) {\n              return this.add(this);\n          }\n          if (this.isUnit()) {\n              return new BigInteger([n], 1, CONSTRUCT);\n          }\n      \n          var a = this._d;\n          var al = a.length;\n      \n          var pl = al + 1;\n          var partial = new Array(pl);\n          for (var i = 0; i < pl; i++) {\n              partial[i] = 0;\n          }\n      \n          var carry = 0;\n          for (var j = 0; j < al; j++) {\n              digit = n * a[j] + carry;\n              carry = (digit / BigInteger_base) | 0;\n              partial[j] = (digit % BigInteger_base) | 0;\n          }\n          if (carry) {\n              partial[j] = carry;\n          }\n      \n          return new BigInteger(partial, 1, CONSTRUCT);\n      };\n      \n      /*\n          Function: square\n          Multiply a <BigInteger> by itself.\n          This is slightly faster than regular multiplication, since it removes the\n          duplicated multiplcations.\n          Returns:\n              > this.multiply(this)\n          See Also:\n              <multiply>\n      */\n      BigInteger.prototype.square = function() {\n          // Normally, squaring a 10-digit number would take 100 multiplications.\n          // Of these 10 are unique diagonals, of the remaining 90 (100-10), 45 are repeated.\n          // This procedure saves (N*(N-1))/2 multiplications, (e.g., 45 of 100 multiplies).\n          // Based on code by Gary Darby, Intellitech Systems Inc., www.DelphiForFun.org\n      \n          if (this._s === 0) {\n              return ZERO;\n          }\n          if (this.isUnit()) {\n              return ONE;\n          }\n      \n          var digits = this._d;\n          var length = digits.length;\n          var imult1 = new Array(length + length + 1);\n          var product, carry, k;\n          var i;\n      \n          // Calculate diagonal\n          for (i = 0; i < length; i++) {\n              k = i * 2;\n              product = digits[i] * digits[i];\n              carry = (product / BigInteger_base) | 0;\n              imult1[k] = product % BigInteger_base;\n              imult1[k + 1] = carry;\n          }\n      \n          // Calculate repeating part\n          for (i = 0; i < length; i++) {\n              carry = 0;\n              k = i * 2 + 1;\n              for (var j = i + 1; j < length; j++, k++) {\n                  product = digits[j] * digits[i] * 2 + imult1[k] + carry;\n                  carry = (product / BigInteger_base) | 0;\n                  imult1[k] = product % BigInteger_base;\n              }\n              k = length + i;\n              var digit = carry + imult1[k];\n              carry = (digit / BigInteger_base) | 0;\n              imult1[k] = digit % BigInteger_base;\n              imult1[k + 1] += carry;\n          }\n      \n          return new BigInteger(imult1, 1, CONSTRUCT);\n      };\n      \n      /*\n          Function: quotient\n          Divide two <BigIntegers> and truncate towards zero.\n          <quotient> throws an exception if *n* is zero.\n          Parameters:\n              n - The number to divide *this* by. Will be converted to a <BigInteger>.\n          Returns:\n              The *this* / *n*, truncated to an integer.\n          See Also:\n              <add>, <subtract>, <multiply>, <divRem>, <remainder>\n      */\n      BigInteger.prototype.quotient = function(n) {\n          return this.divRem(n)[0];\n      };\n      \n      /*\n          Function: divide\n          Deprecated synonym for <quotient>.\n      */\n      BigInteger.prototype.divide = BigInteger.prototype.quotient;\n      \n      /*\n          Function: remainder\n          Calculate the remainder of two <BigIntegers>.\n          <remainder> throws an exception if *n* is zero.\n          Parameters:\n              n - The remainder after *this* is divided *this* by *n*. Will be\n                  converted to a <BigInteger>.\n          Returns:\n              *this* % *n*.\n          See Also:\n              <divRem>, <quotient>\n      */\n      BigInteger.prototype.remainder = function(n) {\n          return this.divRem(n)[1];\n      };\n      \n      /*\n          Function: divRem\n          Calculate the integer quotient and remainder of two <BigIntegers>.\n          <divRem> throws an exception if *n* is zero.\n          Parameters:\n              n - The number to divide *this* by. Will be converted to a <BigInteger>.\n          Returns:\n              A two-element array containing the quotient and the remainder.\n              > a.divRem(b)\n              is exactly equivalent to\n              > [a.quotient(b), a.remainder(b)]\n              except it is faster, because they are calculated at the same time.\n          See Also:\n              <quotient>, <remainder>\n      */\n      BigInteger.prototype.divRem = function(n) {\n          n = BigInteger(n);\n          if (n._s === 0) {\n              throw new Error(\"Divide by zero\");\n          }\n          if (this._s === 0) {\n              return [ZERO, ZERO];\n          }\n          if (n._d.length === 1) {\n              return this.divRemSmall(n._s * n._d[0]);\n          }\n      \n          // Test for easy cases -- |n1| <= |n2|\n          switch (this.compareAbs(n)) {\n          case 0: // n1 == n2\n              return [this._s === n._s ? ONE : M_ONE, ZERO];\n          case -1: // |n1| < |n2|\n              return [ZERO, this];\n          }\n      \n          var sign = this._s * n._s;\n          var a = n.abs();\n          var b_digits = this._d;\n          var b_index = b_digits.length;\n          var digits = n._d.length;\n          var quot = [];\n          var guess;\n      \n          var part = new BigInteger([], 0, CONSTRUCT);\n      \n          while (b_index) {\n              part._d.unshift(b_digits[--b_index]);\n              part = new BigInteger(part._d, 1, CONSTRUCT);\n      \n              if (part.compareAbs(n) < 0) {\n                  quot.push(0);\n                  continue;\n              }\n              if (part._s === 0) {\n                  guess = 0;\n              }\n              else {\n                  var xlen = part._d.length, ylen = a._d.length;\n                  var highx = part._d[xlen-1]*BigInteger_base + part._d[xlen-2];\n                  var highy = a._d[ylen-1]*BigInteger_base + a._d[ylen-2];\n                  if (part._d.length > a._d.length) {\n                      // The length of part._d can either match a._d length,\n                      // or exceed it by one.\n                      highx = (highx+1)*BigInteger_base;\n                  }\n                  guess = Math.ceil(highx/highy);\n              }\n              do {\n                  var check = a.multiplySingleDigit(guess);\n                  if (check.compareAbs(part) <= 0) {\n                      break;\n                  }\n                  guess--;\n              } while (guess);\n      \n              quot.push(guess);\n              if (!guess) {\n                  continue;\n              }\n              var diff = part.subtract(check);\n              part._d = diff._d.slice();\n          }\n      \n          return [new BigInteger(quot.reverse(), sign, CONSTRUCT),\n                 new BigInteger(part._d, this._s, CONSTRUCT)];\n      };\n      \n      // Throws an exception if n is outside of (-BigInteger.base, -1] or\n      // [1, BigInteger.base).  It's not necessary to call this, since the\n      // other division functions will call it if they are able to.\n      BigInteger.prototype.divRemSmall = function(n) {\n          var r;\n          n = +n;\n          if (n === 0) {\n              throw new Error(\"Divide by zero\");\n          }\n      \n          var n_s = n < 0 ? -1 : 1;\n          var sign = this._s * n_s;\n          n = Math.abs(n);\n      \n          if (n < 1 || n >= BigInteger_base) {\n              throw new Error(\"Argument out of range\");\n          }\n      \n          if (this._s === 0) {\n              return [ZERO, ZERO];\n          }\n      \n          if (n === 1 || n === -1) {\n              return [(sign === 1) ? this.abs() : new BigInteger(this._d, sign, CONSTRUCT), ZERO];\n          }\n      \n          // 2 <= n < BigInteger_base\n      \n          // divide a single digit by a single digit\n          if (this._d.length === 1) {\n              var q = new BigInteger([(this._d[0] / n) | 0], 1, CONSTRUCT);\n              r = new BigInteger([(this._d[0] % n) | 0], 1, CONSTRUCT);\n              if (sign < 0) {\n                  q = q.negate();\n              }\n              if (this._s < 0) {\n                  r = r.negate();\n              }\n              return [q, r];\n          }\n      \n          var digits = this._d.slice();\n          var quot = new Array(digits.length);\n          var part = 0;\n          var diff = 0;\n          var i = 0;\n          var guess;\n      \n          while (digits.length) {\n              part = part * BigInteger_base + digits[digits.length - 1];\n              if (part < n) {\n                  quot[i++] = 0;\n                  digits.pop();\n                  diff = BigInteger_base * diff + part;\n                  continue;\n              }\n              if (part === 0) {\n                  guess = 0;\n              }\n              else {\n                  guess = (part / n) | 0;\n              }\n      \n              var check = n * guess;\n              diff = part - check;\n              quot[i++] = guess;\n              if (!guess) {\n                  digits.pop();\n                  continue;\n              }\n      \n              digits.pop();\n              part = diff;\n          }\n      \n          r = new BigInteger([diff], 1, CONSTRUCT);\n          if (this._s < 0) {\n              r = r.negate();\n          }\n          return [new BigInteger(quot.reverse(), sign, CONSTRUCT), r];\n      };\n      \n      /*\n          Function: isEven\n          Return true iff *this* is divisible by two.\n          Note that <BigInteger.ZERO> is even.\n          Returns:\n              true if *this* is even, false otherwise.\n          See Also:\n              <isOdd>\n      */\n      BigInteger.prototype.isEven = function() {\n          var digits = this._d;\n          return this._s === 0 || digits.length === 0 || (digits[0] % 2) === 0;\n      };\n      \n      /*\n          Function: isOdd\n          Return true iff *this* is not divisible by two.\n          Returns:\n              true if *this* is odd, false otherwise.\n          See Also:\n              <isEven>\n      */\n      BigInteger.prototype.isOdd = function() {\n          return !this.isEven();\n      };\n      \n      /*\n          Function: sign\n          Get the sign of a <BigInteger>.\n          Returns:\n              * -1 if *this* < 0\n              * 0 if *this* == 0\n              * +1 if *this* > 0\n          See Also:\n              <isZero>, <isPositive>, <isNegative>, <compare>, <BigInteger.ZERO>\n      */\n      BigInteger.prototype.sign = function() {\n          return this._s;\n      };\n      \n      /*\n          Function: isPositive\n          Return true iff *this* > 0.\n          Returns:\n              true if *this*.compare(<BigInteger.ZERO>) == 1.\n          See Also:\n              <sign>, <isZero>, <isNegative>, <isUnit>, <compare>, <BigInteger.ZERO>\n      */\n      BigInteger.prototype.isPositive = function() {\n          return this._s > 0;\n      };\n      \n      /*\n          Function: isNegative\n          Return true iff *this* < 0.\n          Returns:\n              true if *this*.compare(<BigInteger.ZERO>) == -1.\n          See Also:\n              <sign>, <isPositive>, <isZero>, <isUnit>, <compare>, <BigInteger.ZERO>\n      */\n      BigInteger.prototype.isNegative = function() {\n          return this._s < 0;\n      };\n      \n      /*\n          Function: isZero\n          Return true iff *this* == 0.\n          Returns:\n              true if *this*.compare(<BigInteger.ZERO>) == 0.\n          See Also:\n              <sign>, <isPositive>, <isNegative>, <isUnit>, <BigInteger.ZERO>\n      */\n      BigInteger.prototype.isZero = function() {\n          return this._s === 0;\n      };\n      \n      /*\n          Function: exp10\n          Multiply a <BigInteger> by a power of 10.\n          This is equivalent to, but faster than\n          > if (n >= 0) {\n          >     return this.multiply(BigInteger(\"1e\" + n));\n          > }\n          > else { // n <= 0\n          >     return this.quotient(BigInteger(\"1e\" + -n));\n          > }\n          Parameters:\n              n - The power of 10 to multiply *this* by. *n* is converted to a\n              javascipt number and must be no greater than <BigInteger.MAX_EXP>\n              (0x7FFFFFFF), or an exception will be thrown.\n          Returns:\n              *this* * (10 ** *n*), truncated to an integer if necessary.\n          See Also:\n              <pow>, <multiply>\n      */\n      BigInteger.prototype.exp10 = function(n) {\n          n = +n;\n          if (n === 0) {\n              return this;\n          }\n          if (Math.abs(n) > Number(MAX_EXP)) {\n              throw new Error(\"exponent too large in BigInteger.exp10\");\n          }\n          // Optimization for this == 0. This also keeps us from having to trim zeros in the positive n case\n          if (this._s === 0) {\n              return ZERO;\n          }\n          if (n > 0) {\n              var k = new BigInteger(this._d.slice(), this._s, CONSTRUCT);\n      \n              for (; n >= BigInteger_base_log10; n -= BigInteger_base_log10) {\n                  k._d.unshift(0);\n              }\n              if (n == 0)\n                  return k;\n              k._s = 1;\n              k = k.multiplySingleDigit(Math.pow(10, n));\n              return (this._s < 0 ? k.negate() : k);\n          } else if (-n >= this._d.length*BigInteger_base_log10) {\n              return ZERO;\n          } else {\n              var k = new BigInteger(this._d.slice(), this._s, CONSTRUCT);\n      \n              for (n = -n; n >= BigInteger_base_log10; n -= BigInteger_base_log10) {\n                  k._d.shift();\n              }\n              return (n == 0) ? k : k.divRemSmall(Math.pow(10, n))[0];\n          }\n      };\n      \n      /*\n          Function: pow\n          Raise a <BigInteger> to a power.\n          In this implementation, 0**0 is 1.\n          Parameters:\n              n - The exponent to raise *this* by. *n* must be no greater than\n              <BigInteger.MAX_EXP> (0x7FFFFFFF), or an exception will be thrown.\n          Returns:\n              *this* raised to the *nth* power.\n          See Also:\n              <modPow>\n      */\n      BigInteger.prototype.pow = function(n) {\n          if (this.isUnit()) {\n              if (this._s > 0) {\n                  return this;\n              }\n              else {\n                  return BigInteger(n).isOdd() ? this : this.negate();\n              }\n          }\n      \n          n = BigInteger(n);\n          if (n._s === 0) {\n              return ONE;\n          }\n          else if (n._s < 0) {\n              if (this._s === 0) {\n                  throw new Error(\"Divide by zero\");\n              }\n              else {\n                  return ZERO;\n              }\n          }\n          if (this._s === 0) {\n              return ZERO;\n          }\n          if (n.isUnit()) {\n              return this;\n          }\n      \n          if (n.compareAbs(MAX_EXP) > 0) {\n              throw new Error(\"exponent too large in BigInteger.pow\");\n          }\n          var x = this;\n          var aux = ONE;\n          var two = BigInteger.small[2];\n      \n          while (n.isPositive()) {\n              if (n.isOdd()) {\n                  aux = aux.multiply(x);\n                  if (n.isUnit()) {\n                      return aux;\n                  }\n              }\n              x = x.square();\n              n = n.quotient(two);\n          }\n      \n          return aux;\n      };\n      \n      /*\n          Function: modPow\n          Raise a <BigInteger> to a power (mod m).\n          Because it is reduced by a modulus, <modPow> is not limited by\n          <BigInteger.MAX_EXP> like <pow>.\n          Parameters:\n              exponent - The exponent to raise *this* by. Must be positive.\n              modulus - The modulus.\n          Returns:\n              *this* ^ *exponent* (mod *modulus*).\n          See Also:\n              <pow>, <mod>\n      */\n      BigInteger.prototype.modPow = function(exponent, modulus) {\n          var result = ONE;\n          var base = this;\n      \n          while (exponent.isPositive()) {\n              if (exponent.isOdd()) {\n                  result = result.multiply(base).remainder(modulus);\n              }\n      \n              exponent = exponent.quotient(BigInteger.small[2]);\n              if (exponent.isPositive()) {\n                  base = base.square().remainder(modulus);\n              }\n          }\n      \n          return result;\n      };\n      \n      /*\n          Function: log\n          Get the natural logarithm of a <BigInteger> as a native JavaScript number.\n          This is equivalent to\n          > Math.log(this.toJSValue())\n          but handles values outside of the native number range.\n          Returns:\n              log( *this* )\n          See Also:\n              <toJSValue>\n      */\n      BigInteger.prototype.log = function() {\n          switch (this._s) {\n          case 0:\t return -Infinity;\n          case -1: return NaN;\n          default: // Fall through.\n          }\n      \n          var l = this._d.length;\n      \n          if (l*BigInteger_base_log10 < 30) {\n              return Math.log(this.valueOf());\n          }\n      \n          var N = Math.ceil(30/BigInteger_base_log10);\n          var firstNdigits = this._d.slice(l - N);\n          return Math.log((new BigInteger(firstNdigits, 1, CONSTRUCT)).valueOf()) + (l - N) * Math.log(BigInteger_base);\n      };\n      \n      /*\n          Function: valueOf\n          Convert a <BigInteger> to a native JavaScript integer.\n          This is called automatically by JavaScipt to convert a <BigInteger> to a\n          native value.\n          Returns:\n              > parseInt(this.toString(), 10)\n          See Also:\n              <toString>, <toJSValue>\n      */\n      BigInteger.prototype.valueOf = function() {\n          return parseInt(this.toString(), 10);\n      };\n      \n      /*\n          Function: toJSValue\n          Convert a <BigInteger> to a native JavaScript integer.\n          This is the same as valueOf, but more explicitly named.\n          Returns:\n              > parseInt(this.toString(), 10)\n          See Also:\n              <toString>, <valueOf>\n      */\n      BigInteger.prototype.toJSValue = function() {\n          return parseInt(this.toString(), 10);\n      };\n      \n      \n      /*\n       Function: lowVal\n       Author: Lucas Jones\n       */\n      BigInteger.prototype.lowVal = function () {\n          return this._d[0] || 0;\n      };\n      \n      var MAX_EXP = BigInteger(0x7FFFFFFF);\n      // Constant: MAX_EXP\n      // The largest exponent allowed in <pow> and <exp10> (0x7FFFFFFF or 2147483647).\n      BigInteger.MAX_EXP = MAX_EXP;\n      \n      (function() {\n          function makeUnary(fn) {\n              return function(a) {\n                  return fn.call(BigInteger(a));\n              };\n          }\n      \n          function makeBinary(fn) {\n              return function(a, b) {\n                  return fn.call(BigInteger(a), BigInteger(b));\n              };\n          }\n      \n          function makeTrinary(fn) {\n              return function(a, b, c) {\n                  return fn.call(BigInteger(a), BigInteger(b), BigInteger(c));\n              };\n          }\n      \n          (function() {\n              var i, fn;\n              var unary = \"toJSValue,isEven,isOdd,sign,isZero,isNegative,abs,isUnit,square,negate,isPositive,toString,next,prev,log\".split(\",\");\n              var binary = \"compare,remainder,divRem,subtract,add,quotient,divide,multiply,pow,compareAbs\".split(\",\");\n              var trinary = [\"modPow\"];\n      \n              for (i = 0; i < unary.length; i++) {\n                  fn = unary[i];\n                  BigInteger[fn] = makeUnary(BigInteger.prototype[fn]);\n              }\n      \n              for (i = 0; i < binary.length; i++) {\n                  fn = binary[i];\n                  BigInteger[fn] = makeBinary(BigInteger.prototype[fn]);\n              }\n      \n              for (i = 0; i < trinary.length; i++) {\n                  fn = trinary[i];\n                  BigInteger[fn] = makeTrinary(BigInteger.prototype[fn]);\n              }\n      \n              BigInteger.exp10 = function(x, n) {\n                  return BigInteger(x).exp10(n);\n              };\n          })();\n      })();\n      \n      exports.JSBigInt = BigInteger; // exports.BigInteger changed to exports.JSBigInt\n      })(typeof exports !== 'undefined' ? exports : this);\n  },{}],8:[function(require,module,exports){\n  (function (Buffer){\n  'use strict';\n  \n  /**\n   * Credits to https://github.com/cryptocoinjs/blake-hash\n   */\n  Blake256.sigma = [\n      [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],\n      [14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3],\n      [11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4],\n      [7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8],\n      [9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13],\n      [2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9],\n      [12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11],\n      [13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10],\n      [6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5],\n      [10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0],\n      [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],\n      [14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3],\n      [11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4],\n      [7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8],\n      [9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13],\n      [2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9]\n  ]\n  \n  Blake256.u256 = [\n      0x243f6a88, 0x85a308d3, 0x13198a2e, 0x03707344,\n      0xa4093822, 0x299f31d0, 0x082efa98, 0xec4e6c89,\n      0x452821e6, 0x38d01377, 0xbe5466cf, 0x34e90c6c,\n      0xc0ac29b7, 0xc97c50dd, 0x3f84d5b5, 0xb5470917\n  ]\n  \n  Blake256.padding = new Buffer([\n      0x80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n  ])\n  \n  Blake256.prototype._length_carry = function (arr) {\n      for (var j = 0; j < arr.length; ++j) {\n          if (arr[j] < 0x0100000000) break\n          arr[j] -= 0x0100000000\n          arr[j + 1] += 1\n      }\n  }\n  \n  Blake256.prototype.update = function (data, encoding) {\n      data = new Buffer(data, encoding);\n      var block = this._block\n      var offset = 0\n  \n      while (this._blockOffset + data.length - offset >= block.length) {\n          for (var i = this._blockOffset; i < block.length;) block[i++] = data[offset++]\n  \n          this._length[0] += block.length * 8\n          this._length_carry(this._length)\n  \n          this._compress()\n          this._blockOffset = 0\n      }\n  \n      while (offset < data.length) block[this._blockOffset++] = data[offset++]\n      return this;\n  }\n  \n  var zo = new Buffer([0x01])\n  var oo = new Buffer([0x81])\n  \n  function rot (x, n) {\n      return ((x << (32 - n)) | (x >>> n)) >>> 0\n  }\n  \n  function g (v, m, i, a, b, c, d, e) {\n      var sigma = Blake256.sigma\n      var u256 = Blake256.u256\n  \n      v[a] = (v[a] + ((m[sigma[i][e]] ^ u256[sigma[i][e + 1]]) >>> 0) + v[b]) >>> 0\n      v[d] = rot(v[d] ^ v[a], 16)\n      v[c] = (v[c] + v[d]) >>> 0\n      v[b] = rot(v[b] ^ v[c], 12)\n      v[a] = (v[a] + ((m[sigma[i][e + 1]] ^ u256[sigma[i][e]]) >>> 0) + v[b]) >>> 0\n      v[d] = rot(v[d] ^ v[a], 8)\n      v[c] = (v[c] + v[d]) >>> 0\n      v[b] = rot(v[b] ^ v[c], 7)\n  }\n  \n  function Blake256 () {\n      this._h = [\n          0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n          0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n      ]\n  \n      this._s = [0, 0, 0, 0]\n  \n      this._block = new Buffer(64)\n      this._blockOffset = 0\n      this._length = [0, 0]\n  \n      this._nullt = false\n  \n      this._zo = zo\n      this._oo = oo\n  }\n  \n  Blake256.prototype._compress = function () {\n      var u256 = Blake256.u256\n      var v = new Array(16)\n      var m = new Array(16)\n      var i\n  \n      for (i = 0; i < 16; ++i) m[i] = this._block.readUInt32BE(i * 4)\n      for (i = 0; i < 8; ++i) v[i] = this._h[i] >>> 0\n      for (i = 8; i < 12; ++i) v[i] = (this._s[i - 8] ^ u256[i - 8]) >>> 0\n      for (i = 12; i < 16; ++i) v[i] = u256[i - 8]\n  \n      if (!this._nullt) {\n          v[12] = (v[12] ^ this._length[0]) >>> 0\n          v[13] = (v[13] ^ this._length[0]) >>> 0\n          v[14] = (v[14] ^ this._length[1]) >>> 0\n          v[15] = (v[15] ^ this._length[1]) >>> 0\n      }\n  \n      for (i = 0; i < 14; ++i) {\n          /* column step */\n          g(v, m, i, 0, 4, 8, 12, 0)\n          g(v, m, i, 1, 5, 9, 13, 2)\n          g(v, m, i, 2, 6, 10, 14, 4)\n          g(v, m, i, 3, 7, 11, 15, 6)\n          /* diagonal step */\n          g(v, m, i, 0, 5, 10, 15, 8)\n          g(v, m, i, 1, 6, 11, 12, 10)\n          g(v, m, i, 2, 7, 8, 13, 12)\n          g(v, m, i, 3, 4, 9, 14, 14)\n      }\n  \n      for (i = 0; i < 16; ++i) this._h[i % 8] = (this._h[i % 8] ^ v[i]) >>> 0\n      for (i = 0; i < 8; ++i) this._h[i] = (this._h[i] ^ this._s[i % 4]) >>> 0\n  }\n  \n  Blake256.prototype._padding = function () {\n      var lo = this._length[0] + this._blockOffset * 8\n      var hi = this._length[1]\n      if (lo >= 0x0100000000) {\n          lo -= 0x0100000000\n          hi += 1\n      }\n  \n      var msglen = new Buffer(8)\n      msglen.writeUInt32BE(hi, 0)\n      msglen.writeUInt32BE(lo, 4)\n  \n      if (this._blockOffset === 55) {\n          this._length[0] -= 8\n          this.update(this._oo)\n      } else {\n          if (this._blockOffset < 55) {\n              if (this._blockOffset === 0) this._nullt = true\n              this._length[0] -= (55 - this._blockOffset) * 8\n              this.update(Blake256.padding.slice(0, 55 - this._blockOffset))\n          } else {\n              this._length[0] -= (64 - this._blockOffset) * 8\n              this.update(Blake256.padding.slice(0, 64 - this._blockOffset))\n              this._length[0] -= 55 * 8\n              this.update(Blake256.padding.slice(1, 1 + 55))\n              this._nullt = true\n          }\n  \n          this.update(this._zo)\n          this._length[0] -= 8\n      }\n  \n      this._length[0] -= 64\n      this.update(msglen)\n  }\n  \n  Blake256.prototype.digest = function (encoding) {\n      this._padding()\n  \n      var buffer = new Buffer(32)\n      for (var i = 0; i < 8; ++i) buffer.writeUInt32BE(this._h[i], i * 4)\n      return buffer.toString(encoding);\n  }\n  \n  module.exports = Blake256;\n  }).call(this,require(\"buffer\").Buffer)\n  },{\"buffer\":22}],9:[function(require,module,exports){\n  'use strict';\n  \n  /**\n   * Credits to https://github.com/emilbayes/blake2b\n   *\n   * Copyright (c) 2017, Emil Bay github@tixz.dk\n   *\n   * Permission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies.\n   *\n   * THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n   */\n  \n  // 64-bit unsigned addition\n  // Sets v[a,a+1] += v[b,b+1]\n  // v should be a Uint32Array\n  function ADD64AA (v, a, b) {\n    var o0 = v[a] + v[b]\n    var o1 = v[a + 1] + v[b + 1]\n    if (o0 >= 0x100000000) {\n      o1++\n    }\n    v[a] = o0\n    v[a + 1] = o1\n  }\n  \n  // 64-bit unsigned addition\n  // Sets v[a,a+1] += b\n  // b0 is the low 32 bits of b, b1 represents the high 32 bits\n  function ADD64AC (v, a, b0, b1) {\n    var o0 = v[a] + b0\n    if (b0 < 0) {\n      o0 += 0x100000000\n    }\n    var o1 = v[a + 1] + b1\n    if (o0 >= 0x100000000) {\n      o1++\n    }\n    v[a] = o0\n    v[a + 1] = o1\n  }\n  \n  // Little-endian byte access\n  function B2B_GET32 (arr, i) {\n    return (arr[i] ^\n    (arr[i + 1] << 8) ^\n    (arr[i + 2] << 16) ^\n    (arr[i + 3] << 24))\n  }\n  \n  // G Mixing function\n  // The ROTRs are inlined for speed\n  function B2B_G (a, b, c, d, ix, iy) {\n    var x0 = m[ix]\n    var x1 = m[ix + 1]\n    var y0 = m[iy]\n    var y1 = m[iy + 1]\n  \n    ADD64AA(v, a, b) // v[a,a+1] += v[b,b+1] ... in JS we must store a uint64 as two uint32s\n    ADD64AC(v, a, x0, x1) // v[a, a+1] += x ... x0 is the low 32 bits of x, x1 is the high 32 bits\n  \n    // v[d,d+1] = (v[d,d+1] xor v[a,a+1]) rotated to the right by 32 bits\n    var xor0 = v[d] ^ v[a]\n    var xor1 = v[d + 1] ^ v[a + 1]\n    v[d] = xor1\n    v[d + 1] = xor0\n  \n    ADD64AA(v, c, d)\n  \n    // v[b,b+1] = (v[b,b+1] xor v[c,c+1]) rotated right by 24 bits\n    xor0 = v[b] ^ v[c]\n    xor1 = v[b + 1] ^ v[c + 1]\n    v[b] = (xor0 >>> 24) ^ (xor1 << 8)\n    v[b + 1] = (xor1 >>> 24) ^ (xor0 << 8)\n  \n    ADD64AA(v, a, b)\n    ADD64AC(v, a, y0, y1)\n  \n    // v[d,d+1] = (v[d,d+1] xor v[a,a+1]) rotated right by 16 bits\n    xor0 = v[d] ^ v[a]\n    xor1 = v[d + 1] ^ v[a + 1]\n    v[d] = (xor0 >>> 16) ^ (xor1 << 16)\n    v[d + 1] = (xor1 >>> 16) ^ (xor0 << 16)\n  \n    ADD64AA(v, c, d)\n  \n    // v[b,b+1] = (v[b,b+1] xor v[c,c+1]) rotated right by 63 bits\n    xor0 = v[b] ^ v[c]\n    xor1 = v[b + 1] ^ v[c + 1]\n    v[b] = (xor1 >>> 31) ^ (xor0 << 1)\n    v[b + 1] = (xor0 >>> 31) ^ (xor1 << 1)\n  }\n  \n  // Initialization Vector\n  var BLAKE2B_IV32 = new Uint32Array([\n    0xF3BCC908, 0x6A09E667, 0x84CAA73B, 0xBB67AE85,\n    0xFE94F82B, 0x3C6EF372, 0x5F1D36F1, 0xA54FF53A,\n    0xADE682D1, 0x510E527F, 0x2B3E6C1F, 0x9B05688C,\n    0xFB41BD6B, 0x1F83D9AB, 0x137E2179, 0x5BE0CD19\n  ])\n  \n  var SIGMA8 = [\n    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n    14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3,\n    11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4,\n    7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8,\n    9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13,\n    2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9,\n    12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11,\n    13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10,\n    6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5,\n    10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0,\n    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n    14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3\n  ]\n  \n  // These are offsets into a uint64 buffer.\n  // Multiply them all by 2 to make them offsets into a uint32 buffer,\n  // because this is Javascript and we don't have uint64s\n  var SIGMA82 = new Uint8Array(SIGMA8.map(function (x) { return x * 2 }))\n  \n  // Compression function. 'last' flag indicates last block.\n  // Note we're representing 16 uint64s as 32 uint32s\n  var v = new Uint32Array(32)\n  var m = new Uint32Array(32)\n  function blake2bCompress (ctx, last) {\n    var i = 0\n  \n    // init work variables\n    for (i = 0; i < 16; i++) {\n      v[i] = ctx.h[i]\n      v[i + 16] = BLAKE2B_IV32[i]\n    }\n  \n    // low 64 bits of offset\n    v[24] = v[24] ^ ctx.t\n    v[25] = v[25] ^ (ctx.t / 0x100000000)\n    // high 64 bits not supported, offset may not be higher than 2**53-1\n  \n    // last block flag set ?\n    if (last) {\n      v[28] = ~v[28]\n      v[29] = ~v[29]\n    }\n  \n    // get little-endian words\n    for (i = 0; i < 32; i++) {\n      m[i] = B2B_GET32(ctx.b, 4 * i)\n    }\n  \n    // twelve rounds of mixing\n    for (i = 0; i < 12; i++) {\n      B2B_G(0, 8, 16, 24, SIGMA82[i * 16 + 0], SIGMA82[i * 16 + 1])\n      B2B_G(2, 10, 18, 26, SIGMA82[i * 16 + 2], SIGMA82[i * 16 + 3])\n      B2B_G(4, 12, 20, 28, SIGMA82[i * 16 + 4], SIGMA82[i * 16 + 5])\n      B2B_G(6, 14, 22, 30, SIGMA82[i * 16 + 6], SIGMA82[i * 16 + 7])\n      B2B_G(0, 10, 20, 30, SIGMA82[i * 16 + 8], SIGMA82[i * 16 + 9])\n      B2B_G(2, 12, 22, 24, SIGMA82[i * 16 + 10], SIGMA82[i * 16 + 11])\n      B2B_G(4, 14, 16, 26, SIGMA82[i * 16 + 12], SIGMA82[i * 16 + 13])\n      B2B_G(6, 8, 18, 28, SIGMA82[i * 16 + 14], SIGMA82[i * 16 + 15])\n    }\n  \n    for (i = 0; i < 16; i++) {\n      ctx.h[i] = ctx.h[i] ^ v[i] ^ v[i + 16]\n    }\n  }\n  \n  // reusable parameter_block\n  var parameter_block = new Uint8Array([\n    0, 0, 0, 0,      //  0: outlen, keylen, fanout, depth\n    0, 0, 0, 0,      //  4: leaf length, sequential mode\n    0, 0, 0, 0,      //  8: node offset\n    0, 0, 0, 0,      // 12: node offset\n    0, 0, 0, 0,      // 16: node depth, inner length, rfu\n    0, 0, 0, 0,      // 20: rfu\n    0, 0, 0, 0,      // 24: rfu\n    0, 0, 0, 0,      // 28: rfu\n    0, 0, 0, 0,      // 32: salt\n    0, 0, 0, 0,      // 36: salt\n    0, 0, 0, 0,      // 40: salt\n    0, 0, 0, 0,      // 44: salt\n    0, 0, 0, 0,      // 48: personal\n    0, 0, 0, 0,      // 52: personal\n    0, 0, 0, 0,      // 56: personal\n    0, 0, 0, 0       // 60: personal\n  ])\n  \n  // Creates a BLAKE2b hashing context\n  // Requires an output length between 1 and 64 bytes\n  // Takes an optional Uint8Array key\n  function Blake2b (outlen, key, salt, personal) {\n    // zero out parameter_block before usage\n    parameter_block.fill(0)\n    // state, 'param block'\n  \n    this.b = new Uint8Array(128)\n    this.h = new Uint32Array(16)\n    this.t = 0 // input count\n    this.c = 0 // pointer within buffer\n    this.outlen = outlen // output length in bytes\n  \n    parameter_block[0] = outlen\n    if (key) parameter_block[1] = key.length\n    parameter_block[2] = 1 // fanout\n    parameter_block[3] = 1 // depth\n  \n    if (salt) parameter_block.set(salt, 32)\n    if (personal) parameter_block.set(personal, 48)\n  \n    // initialize hash state\n    for (var i = 0; i < 16; i++) {\n      this.h[i] = BLAKE2B_IV32[i] ^ B2B_GET32(parameter_block, i * 4)\n    }\n  \n    // key the hash, if applicable\n    if (key) {\n      blake2bUpdate(this, key)\n      // at the end\n      this.c = 128\n    }\n  }\n  \n  Blake2b.prototype.update = function (input) {\n    blake2bUpdate(this, input)\n    return this\n  }\n  \n  Blake2b.prototype.digest = function (out) {\n    var buf = (!out || out === 'binary' || out === 'hex') ? new Uint8Array(this.outlen) : out\n    blake2bFinal(this, buf)\n    if (out === 'hex') return hexSlice(buf)\n    return buf\n  }\n  \n  Blake2b.prototype.final = Blake2b.prototype.digest\n  \n  // Updates a BLAKE2b streaming hash\n  // Requires hash context and Uint8Array (byte array)\n  function blake2bUpdate (ctx, input) {\n    for (var i = 0; i < input.length; i++) {\n      if (ctx.c === 128) { // buffer full ?\n        ctx.t += ctx.c // add counters\n        blake2bCompress(ctx, false) // compress (not last)\n        ctx.c = 0 // counter to zero\n      }\n      ctx.b[ctx.c++] = input[i]\n    }\n  }\n  \n  // Completes a BLAKE2b streaming hash\n  // Returns a Uint8Array containing the message digest\n  function blake2bFinal (ctx, out) {\n    ctx.t += ctx.c // mark last block offset\n  \n    while (ctx.c < 128) { // fill up with zeros\n      ctx.b[ctx.c++] = 0\n    }\n    blake2bCompress(ctx, true) // final block flag = 1\n  \n    for (var i = 0; i < ctx.outlen; i++) {\n      out[i] = ctx.h[i >> 2] >> (8 * (i & 3))\n    }\n    return out\n  }\n  \n  function hexSlice (buf) {\n    var str = ''\n    for (var i = 0; i < buf.length; i++) str += toHex(buf[i])\n    return str\n  }\n  \n  function toHex (n) {\n    if (n < 16) return '0' + n.toString(16)\n    return n.toString(16)\n  }\n  \n  module.exports = Blake2b;\n  },{}],10:[function(require,module,exports){\n  var JSBigInt = require('./biginteger')['JSBigInt'];\n  \n  /**\n  Copyright (c) 2017, moneroexamples\n  All rights reserved.\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n  1. Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n  2. Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n  3. Neither the name of the copyright holder nor the names of its contributors\n  may be used to endorse or promote products derived from this software without\n  specific prior written permission.\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n  ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n  FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n  DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n  SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n  OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  Parts of the project are originally copyright (c) 2014-2017, MyMonero.com\n  */\n  \n  var cnBase58 = (function () {\n      var b58 = {};\n  \n      var alphabet_str = \"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\";\n      var alphabet = [];\n      for (var i = 0; i < alphabet_str.length; i++) {\n          alphabet.push(alphabet_str.charCodeAt(i));\n      }\n      var encoded_block_sizes = [0, 2, 3, 5, 6, 7, 9, 10, 11];\n  \n      var alphabet_size = alphabet.length;\n      var full_block_size = 8;\n      var full_encoded_block_size = 11;\n  \n      var UINT64_MAX = new JSBigInt(2).pow(64);\n  \n      function hextobin(hex) {\n          if (hex.length % 2 !== 0) throw \"Hex string has invalid length!\";\n          var res = new Uint8Array(hex.length / 2);\n          for (var i = 0; i < hex.length / 2; ++i) {\n              res[i] = parseInt(hex.slice(i * 2, i * 2 + 2), 16);\n          }\n          return res;\n      }\n  \n      function bintohex(bin) {\n          var out = [];\n          for (var i = 0; i < bin.length; ++i) {\n              out.push((\"0\" + bin[i].toString(16)).slice(-2));\n          }\n          return out.join(\"\");\n      }\n  \n      function strtobin(str) {\n          var res = new Uint8Array(str.length);\n          for (var i = 0; i < str.length; i++) {\n              res[i] = str.charCodeAt(i);\n          }\n          return res;\n      }\n  \n      function bintostr(bin) {\n          var out = [];\n          for (var i = 0; i < bin.length; i++) {\n              out.push(String.fromCharCode(bin[i]));\n          }\n          return out.join(\"\");\n      }\n  \n      function uint8_be_to_64(data) {\n          if (data.length < 1 || data.length > 8) {\n              throw \"Invalid input length\";\n          }\n          var res = JSBigInt.ZERO;\n          var twopow8 = new JSBigInt(2).pow(8);\n          var i = 0;\n          switch (9 - data.length) {\n          case 1:\n              res = res.add(data[i++]);\n          case 2:\n              res = res.multiply(twopow8).add(data[i++]);\n          case 3:\n              res = res.multiply(twopow8).add(data[i++]);\n          case 4:\n              res = res.multiply(twopow8).add(data[i++]);\n          case 5:\n              res = res.multiply(twopow8).add(data[i++]);\n          case 6:\n              res = res.multiply(twopow8).add(data[i++]);\n          case 7:\n              res = res.multiply(twopow8).add(data[i++]);\n          case 8:\n              res = res.multiply(twopow8).add(data[i++]);\n              break;\n          default:\n              throw \"Impossible condition\";\n          }\n          return res;\n      }\n  \n      function uint64_to_8be(num, size) {\n          var res = new Uint8Array(size);\n          if (size < 1 || size > 8) {\n              throw \"Invalid input length\";\n          }\n          var twopow8 = new JSBigInt(2).pow(8);\n          for (var i = size - 1; i >= 0; i--) {\n              res[i] = num.remainder(twopow8).toJSValue();\n              num = num.divide(twopow8);\n          }\n          return res;\n      }\n  \n      b58.encode_block = function (data, buf, index) {\n          if (data.length < 1 || data.length > full_encoded_block_size) {\n              throw \"Invalid block length: \" + data.length;\n          }\n          var num = uint8_be_to_64(data);\n          var i = encoded_block_sizes[data.length] - 1;\n          // while num > 0\n          while (num.compare(0) === 1) {\n              var div = num.divRem(alphabet_size);\n              // remainder = num % alphabet_size\n              var remainder = div[1];\n              // num = num / alphabet_size\n              num = div[0];\n              buf[index + i] = alphabet[remainder.toJSValue()];\n              i--;\n          }\n          return buf;\n      };\n  \n      b58.encode = function (hex) {\n          var data = hextobin(hex);\n          if (data.length === 0) {\n              return \"\";\n          }\n          var full_block_count = Math.floor(data.length / full_block_size);\n          var last_block_size = data.length % full_block_size;\n          var res_size = full_block_count * full_encoded_block_size + encoded_block_sizes[last_block_size];\n  \n          var res = new Uint8Array(res_size);\n          var i;\n          for (i = 0; i < res_size; ++i) {\n              res[i] = alphabet[0];\n          }\n          for (i = 0; i < full_block_count; i++) {\n              res = b58.encode_block(data.subarray(i * full_block_size, i * full_block_size + full_block_size), res, i * full_encoded_block_size);\n          }\n          if (last_block_size > 0) {\n              res = b58.encode_block(data.subarray(full_block_count * full_block_size, full_block_count * full_block_size + last_block_size), res, full_block_count * full_encoded_block_size)\n          }\n          return bintostr(res);\n      };\n  \n      b58.decode_block = function (data, buf, index) {\n          if (data.length < 1 || data.length > full_encoded_block_size) {\n              throw \"Invalid block length: \" + data.length;\n          }\n  \n          var res_size = encoded_block_sizes.indexOf(data.length);\n          if (res_size <= 0) {\n              throw \"Invalid block size\";\n          }\n          var res_num = new JSBigInt(0);\n          var order = new JSBigInt(1);\n          for (var i = data.length - 1; i >= 0; i--) {\n              var digit = alphabet.indexOf(data[i]);\n              if (digit < 0) {\n                  throw \"Invalid symbol\";\n              }\n              var product = order.multiply(digit).add(res_num);\n              // if product > UINT64_MAX\n              if (product.compare(UINT64_MAX) === 1) {\n                  throw \"Overflow\";\n              }\n              res_num = product;\n              order = order.multiply(alphabet_size);\n          }\n          if (res_size < full_block_size && (new JSBigInt(2).pow(8 * res_size).compare(res_num) <= 0)) {\n              throw \"Overflow 2\";\n          }\n          buf.set(uint64_to_8be(res_num, res_size), index);\n          return buf;\n      };\n  \n      b58.decode = function (enc) {\n          enc = strtobin(enc);\n          if (enc.length === 0) {\n              return \"\";\n          }\n          var full_block_count = Math.floor(enc.length / full_encoded_block_size);\n          var last_block_size = enc.length % full_encoded_block_size;\n          var last_block_decoded_size = encoded_block_sizes.indexOf(last_block_size);\n          if (last_block_decoded_size < 0) {\n              throw \"Invalid encoded length\";\n          }\n          var data_size = full_block_count * full_block_size + last_block_decoded_size;\n          var data = new Uint8Array(data_size);\n          for (var i = 0; i < full_block_count; i++) {\n              data = b58.decode_block(enc.subarray(i * full_encoded_block_size, i * full_encoded_block_size + full_encoded_block_size), data, i * full_block_size);\n          }\n          if (last_block_size > 0) {\n              data = b58.decode_block(enc.subarray(full_block_count * full_encoded_block_size, full_block_count * full_encoded_block_size + last_block_size), data, full_block_count * full_block_size);\n          }\n          return bintohex(data);\n      };\n  \n      return b58;\n  })();\n  module.exports = cnBase58;\n  },{\"./biginteger\":7}],11:[function(require,module,exports){\n  // Copyright (c) 2017 Pieter Wuille\n  //\n  // Permission is hereby granted, free of charge, to any person obtaining a copy\n  // of this software and associated documentation files (the \"Software\"), to deal\n  // in the Software without restriction, including without limitation the rights\n  // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  // copies of the Software, and to permit persons to whom the Software is\n  // furnished to do so, subject to the following conditions:\n  //\n  // The above copyright notice and this permission notice shall be included in\n  // all copies or substantial portions of the Software.\n  //\n  // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n  // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  // THE SOFTWARE.\n  \n  var bech32 = require('./bech32');\n  \n  function convertbits (data, frombits, tobits, pad) {\n    var acc = 0;\n    var bits = 0;\n    var ret = [];\n    var maxv = (1 << tobits) - 1;\n    for (var p = 0; p < data.length; ++p) {\n      var value = data[p];\n      if (value < 0 || (value >> frombits) !== 0) {\n        return null;\n      }\n      acc = (acc << frombits) | value;\n      bits += frombits;\n      while (bits >= tobits) {\n        bits -= tobits;\n        ret.push((acc >> bits) & maxv);\n      }\n    }\n    if (pad) {\n      if (bits > 0) {\n        ret.push((acc << (tobits - bits)) & maxv);\n      }\n    } else if (bits >= frombits || ((acc << (tobits - bits)) & maxv)) {\n      return null;\n    }\n    return ret;\n  }\n  \n  function decode (hrp, addr) {\n    var dec = bech32.decode(addr);\n    if (dec === null || dec.hrp !== hrp || dec.data.length < 1 || dec.data[0] > 16) {\n      return null;\n    }\n    var res = convertbits(dec.data.slice(1), 5, 8, false);\n    if (res === null || res.length < 2 || res.length > 40) {\n      return null;\n    }\n    if (dec.data[0] === 0 && res.length !== 20 && res.length !== 32) {\n      return null;\n    }\n    return {version: dec.data[0], program: res};\n  }\n  \n  function encode (hrp, version, program) {\n    var ret = bech32.encode(hrp, [version].concat(convertbits(program, 8, 5, true)));\n    if (decode(hrp, ret) === null) {\n      return null;\n    }\n    return ret;\n  }\n  \n  function isValidAddress(address, hrp) {\n      var hrp = hrp || 'bc';\n      var ret = decode(hrp, address);\n  \n      if (ret === null) {\n          hrp = 'tb';\n          ret = decode(hrp, address);\n      }\n  \n      if (ret === null) {\n          return false;\n      }\n  \n      var recreate = encode(hrp, ret.version, ret.program);\n      return recreate === address.toLowerCase();\n  }\n  \n  module.exports = {\n      encode: encode,\n      decode: decode,\n      isValidAddress: isValidAddress,\n  };\n  \n  },{\"./bech32\":6}],12:[function(require,module,exports){\n  (function (process,global){\n  /**\n   * [js-sha3]{@link https://github.com/emn178/js-sha3}\n   *\n   * @version 0.7.0\n   * @author Chen, Yi-Cyuan [emn178@gmail.com]\n   * @copyright Chen, Yi-Cyuan 2015-2017\n   * @license MIT\n   */\n  /*jslint bitwise: true */\n  'use strict';\n  \n  var ERROR = 'input is invalid type';\n  var WINDOW = typeof window === 'object';\n  var root = WINDOW ? window : {};\n  if (root.JS_SHA3_NO_WINDOW) {\n      WINDOW = false;\n  }\n  var WEB_WORKER = !WINDOW && typeof self === 'object';\n  var NODE_JS = !root.JS_SHA3_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n  if (NODE_JS) {\n      root = global;\n  } else if (WEB_WORKER) {\n      root = self;\n  }\n  var ARRAY_BUFFER = !root.JS_SHA3_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\n  var HEX_CHARS = '0123456789abcdef'.split('');\n  var SHAKE_PADDING = [31, 7936, 2031616, 520093696];\n  var CSHAKE_PADDING = [4, 1024, 262144, 67108864];\n  var KECCAK_PADDING = [1, 256, 65536, 16777216];\n  var PADDING = [6, 1536, 393216, 100663296];\n  var SHIFT = [0, 8, 16, 24];\n  var RC = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649,\n      0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0,\n      2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771,\n      2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648,\n      2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648];\n  var BITS = [224, 256, 384, 512];\n  var SHAKE_BITS = [128, 256];\n  var OUTPUT_TYPES = ['hex', 'buffer', 'arrayBuffer', 'array', 'digest'];\n  var CSHAKE_BYTEPAD = {\n      '128': 168,\n      '256': 136\n  };\n  \n  if (root.JS_SHA3_NO_NODE_JS || !Array.isArray) {\n      Array.isArray = function (obj) {\n          return Object.prototype.toString.call(obj) === '[object Array]';\n      };\n  }\n  \n  if (ARRAY_BUFFER && (root.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {\n      ArrayBuffer.isView = function (obj) {\n          return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\n      };\n  }\n  \n  var createOutputMethod = function (bits, padding, outputType) {\n      return function (message) {\n          return new Keccak(bits, padding, bits).update(message)[outputType]();\n      };\n  };\n  \n  var createShakeOutputMethod = function (bits, padding, outputType) {\n      return function (message, outputBits) {\n          return new Keccak(bits, padding, outputBits).update(message)[outputType]();\n      };\n  };\n  \n  var createCshakeOutputMethod = function (bits, padding, outputType) {\n      return function (message, outputBits, n, s) {\n          return methods['cshake' + bits].update(message, outputBits, n, s)[outputType]();\n      };\n  };\n  \n  var createKmacOutputMethod = function (bits, padding, outputType) {\n      return function (key, message, outputBits, s) {\n          return methods['kmac' + bits].update(key, message, outputBits, s)[outputType]();\n      };\n  };\n  \n  var createOutputMethods = function (method, createMethod, bits, padding) {\n      for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n          var type = OUTPUT_TYPES[i];\n          method[type] = createMethod(bits, padding, type);\n      }\n      return method;\n  };\n  \n  var createMethod = function (bits, padding) {\n      var method = createOutputMethod(bits, padding, 'hex');\n      method.create = function () {\n          return new Keccak(bits, padding, bits);\n      };\n      method.update = function (message) {\n          return method.create().update(message);\n      };\n      return createOutputMethods(method, createOutputMethod, bits, padding);\n  };\n  \n  var createShakeMethod = function (bits, padding) {\n      var method = createShakeOutputMethod(bits, padding, 'hex');\n      method.create = function (outputBits) {\n          return new Keccak(bits, padding, outputBits);\n      };\n      method.update = function (message, outputBits) {\n          return method.create(outputBits).update(message);\n      };\n      return createOutputMethods(method, createShakeOutputMethod, bits, padding);\n  };\n  \n  var createCshakeMethod = function (bits, padding) {\n      var w = CSHAKE_BYTEPAD[bits];\n      var method = createCshakeOutputMethod(bits, padding, 'hex');\n      method.create = function (outputBits, n, s) {\n          if (!n && !s) {\n              return methods['shake' + bits].create(outputBits);\n          } else {\n              return new Keccak(bits, padding, outputBits).bytepad([n, s], w);\n          }\n      };\n      method.update = function (message, outputBits, n, s) {\n          return method.create(outputBits, n, s).update(message);\n      };\n      return createOutputMethods(method, createCshakeOutputMethod, bits, padding);\n  };\n  \n  var createKmacMethod = function (bits, padding) {\n      var w = CSHAKE_BYTEPAD[bits];\n      var method = createKmacOutputMethod(bits, padding, 'hex');\n      method.create = function (key, outputBits, s) {\n          return new Kmac(bits, padding, outputBits).bytepad(['KMAC', s], w).bytepad([key], w);\n      };\n      method.update = function (key, message, outputBits, s) {\n          return method.create(key, outputBits, s).update(message);\n      };\n      return createOutputMethods(method, createKmacOutputMethod, bits, padding);\n  };\n  \n  var algorithms = [\n      { name: 'keccak', padding: KECCAK_PADDING, bits: BITS, createMethod: createMethod },\n      { name: 'sha3', padding: PADDING, bits: BITS, createMethod: createMethod },\n      { name: 'shake', padding: SHAKE_PADDING, bits: SHAKE_BITS, createMethod: createShakeMethod },\n      { name: 'cshake', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createCshakeMethod },\n      { name: 'kmac', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createKmacMethod }\n  ];\n  \n  var methods = {}, methodNames = [];\n  \n  for (var i = 0; i < algorithms.length; ++i) {\n      var algorithm = algorithms[i];\n      var bits = algorithm.bits;\n      for (var j = 0; j < bits.length; ++j) {\n          var methodName = algorithm.name + '_' + bits[j];\n          methodNames.push(methodName);\n          methods[methodName] = algorithm.createMethod(bits[j], algorithm.padding);\n          if (algorithm.name !== 'sha3') {\n              var newMethodName = algorithm.name + bits[j];\n              methodNames.push(newMethodName);\n              methods[newMethodName] = methods[methodName];\n          }\n      }\n  }\n  \n  function Keccak(bits, padding, outputBits) {\n      this.blocks = [];\n      this.s = [];\n      this.padding = padding;\n      this.outputBits = outputBits;\n      this.reset = true;\n      this.finalized = false;\n      this.block = 0;\n      this.start = 0;\n      this.blockCount = (1600 - (bits << 1)) >> 5;\n      this.byteCount = this.blockCount << 2;\n      this.outputBlocks = outputBits >> 5;\n      this.extraBytes = (outputBits & 31) >> 3;\n  \n      for (var i = 0; i < 50; ++i) {\n          this.s[i] = 0;\n      }\n  }\n  \n  Keccak.prototype.update = function (message) {\n      if (this.finalized) {\n          return;\n      }\n      var notString, type = typeof message;\n      if (type !== 'string') {\n          if (type === 'object') {\n              if (message === null) {\n                  throw ERROR;\n              } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\n                  message = new Uint8Array(message);\n              } else if (!Array.isArray(message)) {\n                  if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {\n                      throw ERROR;\n                  }\n              }\n          } else {\n              throw ERROR;\n          }\n          notString = true;\n      }\n      var blocks = this.blocks, byteCount = this.byteCount, length = message.length,\n          blockCount = this.blockCount, index = 0, s = this.s, i, code;\n  \n      while (index < length) {\n          if (this.reset) {\n              this.reset = false;\n              blocks[0] = this.block;\n              for (i = 1; i < blockCount + 1; ++i) {\n                  blocks[i] = 0;\n              }\n          }\n          if (notString) {\n              for (i = this.start; index < length && i < byteCount; ++index) {\n                  blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n              }\n          } else {\n              for (i = this.start; index < length && i < byteCount; ++index) {\n                  code = message.charCodeAt(index);\n                  if (code < 0x80) {\n                      blocks[i >> 2] |= code << SHIFT[i++ & 3];\n                  } else if (code < 0x800) {\n                      blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\n                      blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n                  } else if (code < 0xd800 || code >= 0xe000) {\n                      blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\n                      blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n                      blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n                  } else {\n                      code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n                      blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\n                      blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\n                      blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n                      blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n                  }\n              }\n          }\n          this.lastByteIndex = i;\n          if (i >= byteCount) {\n              this.start = i - byteCount;\n              this.block = blocks[blockCount];\n              for (i = 0; i < blockCount; ++i) {\n                  s[i] ^= blocks[i];\n              }\n              f(s);\n              this.reset = true;\n          } else {\n              this.start = i;\n          }\n      }\n      return this;\n  };\n  \n  Keccak.prototype.encode = function (x, right) {\n      var o = x & 255, n = 1;\n      var bytes = [o];\n      x = x >> 8;\n      o = x & 255;\n      while (o > 0) {\n          bytes.unshift(o);\n          x = x >> 8;\n          o = x & 255;\n          ++n;\n      }\n      if (right) {\n          bytes.push(n);\n      } else {\n          bytes.unshift(n);\n      }\n      this.update(bytes);\n      return bytes.length;\n  };\n  \n  Keccak.prototype.encodeString = function (str) {\n      var notString, type = typeof str;\n      if (type !== 'string') {\n          if (type === 'object') {\n              if (str === null) {\n                  throw ERROR;\n              } else if (ARRAY_BUFFER && str.constructor === ArrayBuffer) {\n                  str = new Uint8Array(str);\n              } else if (!Array.isArray(str)) {\n                  if (!ARRAY_BUFFER || !ArrayBuffer.isView(str)) {\n                      throw ERROR;\n                  }\n              }\n          } else {\n              throw ERROR;\n          }\n          notString = true;\n      }\n      var bytes = 0, length = str.length;\n      if (notString) {\n          bytes = length;\n      } else {\n          for (var i = 0; i < str.length; ++i) {\n              var code = str.charCodeAt(i);\n              if (code < 0x80) {\n                  bytes += 1;\n              } else if (code < 0x800) {\n                  bytes += 2;\n              } else if (code < 0xd800 || code >= 0xe000) {\n                  bytes += 3;\n              } else {\n                  code = 0x10000 + (((code & 0x3ff) << 10) | (str.charCodeAt(++i) & 0x3ff));\n                  bytes += 4;\n              }\n          }\n      }\n      bytes += this.encode(bytes * 8);\n      this.update(str);\n      return bytes;\n  };\n  \n  Keccak.prototype.bytepad = function (strs, w) {\n      var bytes = this.encode(w);\n      for (var i = 0; i < strs.length; ++i) {\n          bytes += this.encodeString(strs[i]);\n      }\n      var paddingBytes = w - bytes % w;\n      var zeros = [];\n      zeros.length = paddingBytes;\n      this.update(zeros);\n      return this;\n  };\n  \n  Keccak.prototype.finalize = function () {\n      if (this.finalized) {\n          return;\n      }\n      this.finalized = true;\n      var blocks = this.blocks, i = this.lastByteIndex, blockCount = this.blockCount, s = this.s;\n      blocks[i >> 2] |= this.padding[i & 3];\n      if (this.lastByteIndex === this.byteCount) {\n          blocks[0] = blocks[blockCount];\n          for (i = 1; i < blockCount + 1; ++i) {\n              blocks[i] = 0;\n          }\n      }\n      blocks[blockCount - 1] |= 0x80000000;\n      for (i = 0; i < blockCount; ++i) {\n          s[i] ^= blocks[i];\n      }\n      f(s);\n  };\n  \n  Keccak.prototype.toString = Keccak.prototype.hex = function () {\n      this.finalize();\n  \n      var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n          extraBytes = this.extraBytes, i = 0, j = 0;\n      var hex = '', block;\n      while (j < outputBlocks) {\n          for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n              block = s[i];\n              hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F] +\n                  HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F] +\n                  HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F] +\n                  HEX_CHARS[(block >> 28) & 0x0F] + HEX_CHARS[(block >> 24) & 0x0F];\n          }\n          if (j % blockCount === 0) {\n              f(s);\n              i = 0;\n          }\n      }\n      if (extraBytes) {\n          block = s[i];\n          hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F];\n          if (extraBytes > 1) {\n              hex += HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F];\n          }\n          if (extraBytes > 2) {\n              hex += HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F];\n          }\n      }\n      return hex;\n  };\n  \n  Keccak.prototype.arrayBuffer = function () {\n      this.finalize();\n  \n      var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n          extraBytes = this.extraBytes, i = 0, j = 0;\n      var bytes = this.outputBits >> 3;\n      var buffer;\n      if (extraBytes) {\n          buffer = new ArrayBuffer((outputBlocks + 1) << 2);\n      } else {\n          buffer = new ArrayBuffer(bytes);\n      }\n      var array = new Uint32Array(buffer);\n      while (j < outputBlocks) {\n          for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n              array[j] = s[i];\n          }\n          if (j % blockCount === 0) {\n              f(s);\n          }\n      }\n      if (extraBytes) {\n          array[i] = s[i];\n          buffer = buffer.slice(0, bytes);\n      }\n      return buffer;\n  };\n  \n  Keccak.prototype.buffer = Keccak.prototype.arrayBuffer;\n  \n  Keccak.prototype.digest = Keccak.prototype.array = function () {\n      this.finalize();\n  \n      var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n          extraBytes = this.extraBytes, i = 0, j = 0;\n      var array = [], offset, block;\n      while (j < outputBlocks) {\n          for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n              offset = j << 2;\n              block = s[i];\n              array[offset] = block & 0xFF;\n              array[offset + 1] = (block >> 8) & 0xFF;\n              array[offset + 2] = (block >> 16) & 0xFF;\n              array[offset + 3] = (block >> 24) & 0xFF;\n          }\n          if (j % blockCount === 0) {\n              f(s);\n          }\n      }\n      if (extraBytes) {\n          offset = j << 2;\n          block = s[i];\n          array[offset] = block & 0xFF;\n          if (extraBytes > 1) {\n              array[offset + 1] = (block >> 8) & 0xFF;\n          }\n          if (extraBytes > 2) {\n              array[offset + 2] = (block >> 16) & 0xFF;\n          }\n      }\n      return array;\n  };\n  \n  function Kmac(bits, padding, outputBits) {\n      Keccak.call(this, bits, padding, outputBits);\n  }\n  \n  Kmac.prototype = new Keccak();\n  \n  Kmac.prototype.finalize = function () {\n      this.encode(this.outputBits, true);\n      return Keccak.prototype.finalize.call(this);\n  };\n  \n  var f = function (s) {\n      var h, l, n, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9,\n          b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17,\n          b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33,\n          b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;\n      for (n = 0; n < 48; n += 2) {\n          c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];\n          c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];\n          c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];\n          c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];\n          c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];\n          c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];\n          c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];\n          c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];\n          c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];\n          c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];\n  \n          h = c8 ^ ((c2 << 1) | (c3 >>> 31));\n          l = c9 ^ ((c3 << 1) | (c2 >>> 31));\n          s[0] ^= h;\n          s[1] ^= l;\n          s[10] ^= h;\n          s[11] ^= l;\n          s[20] ^= h;\n          s[21] ^= l;\n          s[30] ^= h;\n          s[31] ^= l;\n          s[40] ^= h;\n          s[41] ^= l;\n          h = c0 ^ ((c4 << 1) | (c5 >>> 31));\n          l = c1 ^ ((c5 << 1) | (c4 >>> 31));\n          s[2] ^= h;\n          s[3] ^= l;\n          s[12] ^= h;\n          s[13] ^= l;\n          s[22] ^= h;\n          s[23] ^= l;\n          s[32] ^= h;\n          s[33] ^= l;\n          s[42] ^= h;\n          s[43] ^= l;\n          h = c2 ^ ((c6 << 1) | (c7 >>> 31));\n          l = c3 ^ ((c7 << 1) | (c6 >>> 31));\n          s[4] ^= h;\n          s[5] ^= l;\n          s[14] ^= h;\n          s[15] ^= l;\n          s[24] ^= h;\n          s[25] ^= l;\n          s[34] ^= h;\n          s[35] ^= l;\n          s[44] ^= h;\n          s[45] ^= l;\n          h = c4 ^ ((c8 << 1) | (c9 >>> 31));\n          l = c5 ^ ((c9 << 1) | (c8 >>> 31));\n          s[6] ^= h;\n          s[7] ^= l;\n          s[16] ^= h;\n          s[17] ^= l;\n          s[26] ^= h;\n          s[27] ^= l;\n          s[36] ^= h;\n          s[37] ^= l;\n          s[46] ^= h;\n          s[47] ^= l;\n          h = c6 ^ ((c0 << 1) | (c1 >>> 31));\n          l = c7 ^ ((c1 << 1) | (c0 >>> 31));\n          s[8] ^= h;\n          s[9] ^= l;\n          s[18] ^= h;\n          s[19] ^= l;\n          s[28] ^= h;\n          s[29] ^= l;\n          s[38] ^= h;\n          s[39] ^= l;\n          s[48] ^= h;\n          s[49] ^= l;\n  \n          b0 = s[0];\n          b1 = s[1];\n          b32 = (s[11] << 4) | (s[10] >>> 28);\n          b33 = (s[10] << 4) | (s[11] >>> 28);\n          b14 = (s[20] << 3) | (s[21] >>> 29);\n          b15 = (s[21] << 3) | (s[20] >>> 29);\n          b46 = (s[31] << 9) | (s[30] >>> 23);\n          b47 = (s[30] << 9) | (s[31] >>> 23);\n          b28 = (s[40] << 18) | (s[41] >>> 14);\n          b29 = (s[41] << 18) | (s[40] >>> 14);\n          b20 = (s[2] << 1) | (s[3] >>> 31);\n          b21 = (s[3] << 1) | (s[2] >>> 31);\n          b2 = (s[13] << 12) | (s[12] >>> 20);\n          b3 = (s[12] << 12) | (s[13] >>> 20);\n          b34 = (s[22] << 10) | (s[23] >>> 22);\n          b35 = (s[23] << 10) | (s[22] >>> 22);\n          b16 = (s[33] << 13) | (s[32] >>> 19);\n          b17 = (s[32] << 13) | (s[33] >>> 19);\n          b48 = (s[42] << 2) | (s[43] >>> 30);\n          b49 = (s[43] << 2) | (s[42] >>> 30);\n          b40 = (s[5] << 30) | (s[4] >>> 2);\n          b41 = (s[4] << 30) | (s[5] >>> 2);\n          b22 = (s[14] << 6) | (s[15] >>> 26);\n          b23 = (s[15] << 6) | (s[14] >>> 26);\n          b4 = (s[25] << 11) | (s[24] >>> 21);\n          b5 = (s[24] << 11) | (s[25] >>> 21);\n          b36 = (s[34] << 15) | (s[35] >>> 17);\n          b37 = (s[35] << 15) | (s[34] >>> 17);\n          b18 = (s[45] << 29) | (s[44] >>> 3);\n          b19 = (s[44] << 29) | (s[45] >>> 3);\n          b10 = (s[6] << 28) | (s[7] >>> 4);\n          b11 = (s[7] << 28) | (s[6] >>> 4);\n          b42 = (s[17] << 23) | (s[16] >>> 9);\n          b43 = (s[16] << 23) | (s[17] >>> 9);\n          b24 = (s[26] << 25) | (s[27] >>> 7);\n          b25 = (s[27] << 25) | (s[26] >>> 7);\n          b6 = (s[36] << 21) | (s[37] >>> 11);\n          b7 = (s[37] << 21) | (s[36] >>> 11);\n          b38 = (s[47] << 24) | (s[46] >>> 8);\n          b39 = (s[46] << 24) | (s[47] >>> 8);\n          b30 = (s[8] << 27) | (s[9] >>> 5);\n          b31 = (s[9] << 27) | (s[8] >>> 5);\n          b12 = (s[18] << 20) | (s[19] >>> 12);\n          b13 = (s[19] << 20) | (s[18] >>> 12);\n          b44 = (s[29] << 7) | (s[28] >>> 25);\n          b45 = (s[28] << 7) | (s[29] >>> 25);\n          b26 = (s[38] << 8) | (s[39] >>> 24);\n          b27 = (s[39] << 8) | (s[38] >>> 24);\n          b8 = (s[48] << 14) | (s[49] >>> 18);\n          b9 = (s[49] << 14) | (s[48] >>> 18);\n  \n          s[0] = b0 ^ (~b2 & b4);\n          s[1] = b1 ^ (~b3 & b5);\n          s[10] = b10 ^ (~b12 & b14);\n          s[11] = b11 ^ (~b13 & b15);\n          s[20] = b20 ^ (~b22 & b24);\n          s[21] = b21 ^ (~b23 & b25);\n          s[30] = b30 ^ (~b32 & b34);\n          s[31] = b31 ^ (~b33 & b35);\n          s[40] = b40 ^ (~b42 & b44);\n          s[41] = b41 ^ (~b43 & b45);\n          s[2] = b2 ^ (~b4 & b6);\n          s[3] = b3 ^ (~b5 & b7);\n          s[12] = b12 ^ (~b14 & b16);\n          s[13] = b13 ^ (~b15 & b17);\n          s[22] = b22 ^ (~b24 & b26);\n          s[23] = b23 ^ (~b25 & b27);\n          s[32] = b32 ^ (~b34 & b36);\n          s[33] = b33 ^ (~b35 & b37);\n          s[42] = b42 ^ (~b44 & b46);\n          s[43] = b43 ^ (~b45 & b47);\n          s[4] = b4 ^ (~b6 & b8);\n          s[5] = b5 ^ (~b7 & b9);\n          s[14] = b14 ^ (~b16 & b18);\n          s[15] = b15 ^ (~b17 & b19);\n          s[24] = b24 ^ (~b26 & b28);\n          s[25] = b25 ^ (~b27 & b29);\n          s[34] = b34 ^ (~b36 & b38);\n          s[35] = b35 ^ (~b37 & b39);\n          s[44] = b44 ^ (~b46 & b48);\n          s[45] = b45 ^ (~b47 & b49);\n          s[6] = b6 ^ (~b8 & b0);\n          s[7] = b7 ^ (~b9 & b1);\n          s[16] = b16 ^ (~b18 & b10);\n          s[17] = b17 ^ (~b19 & b11);\n          s[26] = b26 ^ (~b28 & b20);\n          s[27] = b27 ^ (~b29 & b21);\n          s[36] = b36 ^ (~b38 & b30);\n          s[37] = b37 ^ (~b39 & b31);\n          s[46] = b46 ^ (~b48 & b40);\n          s[47] = b47 ^ (~b49 & b41);\n          s[8] = b8 ^ (~b0 & b2);\n          s[9] = b9 ^ (~b1 & b3);\n          s[18] = b18 ^ (~b10 & b12);\n          s[19] = b19 ^ (~b11 & b13);\n          s[28] = b28 ^ (~b20 & b22);\n          s[29] = b29 ^ (~b21 & b23);\n          s[38] = b38 ^ (~b30 & b32);\n          s[39] = b39 ^ (~b31 & b33);\n          s[48] = b48 ^ (~b40 & b42);\n          s[49] = b49 ^ (~b41 & b43);\n  \n          s[0] ^= RC[n];\n          s[1] ^= RC[n + 1];\n      }\n  };\n  \n  module.exports = methods;\n  \n  }).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n  },{\"_process\":24}],13:[function(require,module,exports){\n  var jsSHA = require('jssha/src/sha256');\n  var Blake256 = require('./blake256');\n  var keccak256 = require('./sha3')['keccak256'];\n  var Blake2B = require('./blake2b');\n  \n  function numberToHex (number) {\n      var hex = Math.round(number).toString(16);\n      if(hex.length === 1) {\n          hex = '0' + hex;\n      }\n      return hex;\n  }\n  \n  function hexToUint8(hexString) {\n      var arr = [];\n      for (var i = 0; i < hexString.length; i += 2) {\n          arr.push(parseInt(hexString.substr(i, 2), 16));\n      }\n  \n      return new Uint8Array(arr);\n  }\n  \n  module.exports = {\n      toHex: function (arrayOfBytes) {\n          var hex = '';\n          for(var i = 0; i < arrayOfBytes.length; i++) {\n              hex += numberToHex(arrayOfBytes[i]);\n          }\n          return hex;\n      },\n      sha256: function (hexString) {\n          var sha = new jsSHA('SHA-256', 'HEX');\n          sha.update(hexString);\n          return sha.getHash('HEX');\n      },\n      sha256Checksum: function (payload) {\n          return this.sha256(this.sha256(payload)).substr(0, 8);\n      },\n      blake256: function (hexString) {\n          return new Blake256().update(hexString, 'hex').digest('hex');\n      },\n      blake256Checksum: function (payload) {\n          return this.blake256(this.blake256(payload)).substr(0, 8);\n      },\n      blake2b: function (hexString, outlen) {\n          return new Blake2B(outlen).update(hexToUint8(hexString)).digest('hex');\n      },\n      keccak256: function (hexString) {\n          return keccak256(hexString);\n      },\n      keccak256Checksum: function (payload) {\n          return keccak256(payload).toString().substr(0, 8);\n      }\n  };\n  \n  },{\"./blake256\":8,\"./blake2b\":9,\"./sha3\":12,\"jssha/src/sha256\":2}],14:[function(require,module,exports){\n  var XRPValidator = require('./ripple_validator');\n  var ETHValidator = require('./ethereum_validator');\n  var BTCValidator = require('./bitcoin_validator');\n  var XMRValidator = require('./monero_validator');\n  var NANOValidator = require('./nano_validator');\n  \n  // defines P2PKH and P2SH address types for standard (prod) and testnet networks\n  var CURRENCIES = [{\n      name: 'bitcoin',\n      symbol: 'btc',\n      addressTypes: {prod: ['00', '05'], testnet: ['6f', 'c4']},\n      validator: BTCValidator\n  },{\n      name: 'bitcoincash',\n      symbol: 'bch',\n      addressTypes: {prod: ['00', '05'], testnet: ['6f', 'c4']},\n      validator: BTCValidator\n  },{\n      name: 'litecoin',\n      symbol: 'ltc',\n      addressTypes: {prod: ['30', '05', '32'], testnet: ['6f', 'c4', '3a']},\n      validator: BTCValidator\n  },{\n      name: 'peercoin',\n      symbol: 'ppc',\n      addressTypes: {prod: ['37', '75'], testnet: ['6f', 'c4']},\n      validator: BTCValidator\n  },{\n      name: 'dogecoin',\n      symbol: 'doge',\n      addressTypes: {prod: ['1e', '16'], testnet: ['71', 'c4']},\n      validator: BTCValidator\n  },{\n      name: 'beavercoin',\n      symbol: 'bvc',\n      addressTypes: {prod: ['19', '05'], testnet: ['6f', 'c4']},\n      validator: BTCValidator,\n  },{\n      name: 'freicoin',\n      symbol: 'frc',\n      addressTypes: {prod: ['00', '05'], testnet: ['6f', 'c4']},\n      validator: BTCValidator\n  },{\n      name: 'protoshares',\n      symbol: 'pts',\n      addressTypes: {prod: ['38', '05'], testnet: ['6f', 'c4']},\n      validator: BTCValidator\n  },{\n      name: 'megacoin',\n      symbol: 'mec',\n      addressTypes: {prod: ['32', '05'], testnet: ['6f', 'c4']},\n      validator: BTCValidator\n  },{\n      name: 'primecoin',\n      symbol: 'xpm',\n      addressTypes: {prod: ['17', '53'], testnet: ['6f', 'c4']},\n      validator: BTCValidator\n  },{\n      name: 'auroracoin',\n      symbol: 'aur',\n      addressTypes: {prod: ['17', '05'], testnet: ['6f', 'c4']},\n      validator: BTCValidator\n  },{\n      name: 'namecoin',\n      symbol: 'nmc',\n      addressTypes: {prod: ['34'], testnet: []},\n      validator: BTCValidator\n  },{\n      name: 'biocoin',\n      symbol: 'bio',\n      addressTypes: {prod: ['19', '14'], testnet: ['6f', 'c4']},\n      validator: BTCValidator\n  },{\n      name: 'garlicoin',\n      symbol: 'grlc',\n      addressTypes: {prod: ['26', '05'], testnet: ['6f', 'c4']},\n      validator: BTCValidator\n  },{\n      name: 'vertcoin',\n      symbol: 'vtc',\n      addressTypes: {prod: ['0x', '47'], testnet: ['6f', 'c4']},\n      segwitHrp: 'vtc',\n      validator: BTCValidator\n  },{\n      name: 'bitcoingold',\n      symbol: 'btg',\n      addressTypes: {prod: ['26', '17'], testnet: ['6f', 'c4']},\n      validator: BTCValidator\n  },{\n      name: 'komodo',\n      symbol: 'kmd',\n      addressTypes: {prod: ['3c', '55'], testnet: ['0','5']},\n      validator: BTCValidator\n  },{\n      name: 'bitcoinz',\n      symbol: 'btcz',\n      expectedLength: 26,\n      addressTypes: {prod: ['1cb8','1cbd'], testnet: ['1d25', '1cba']},\n      validator: BTCValidator\n  },{\n      name: 'bitcoinprivate',\n      symbol: 'btcp',\n      expectedLength: 26,\n      addressTypes: {prod: ['1325','13af'], testnet: ['1957', '19e0']},\n      validator: BTCValidator\n  },{\n      name: 'hush',\n      symbol: 'hush',\n      expectedLength: 26,\n      addressTypes: {prod: ['1cb8','1cbd'], testnet: ['1d25', '1cba']},\n      validator: BTCValidator\n  },{\n      name: 'snowgem',\n      symbol: 'sng',\n      expectedLength: 26,\n      addressTypes: {prod: ['1c28','1c2d'], testnet: ['1d25', '1cba']},\n      validator: BTCValidator\n  },{\n      name: 'zcash',\n      symbol: 'zec',\n      expectedLength: 26,\n      addressTypes: {prod: ['1cb8','1cbd'], testnet: ['1d25', '1cba']},\n      validator: BTCValidator\n  },{\n      name: 'zclassic',\n      symbol: 'zcl',\n      expectedLength: 26,\n      addressTypes: {prod: ['1cb8','1cbd'], testnet: ['1d25', '1cba']},\n      validator: BTCValidator\n  },{\n      name: 'zencash',\n      symbol: 'zen',\n      expectedLength: 26,\n      addressTypes: {prod: ['2089','2096'], testnet: ['2092','2098']},\n      validator: BTCValidator\n  },{\n      name: 'votecoin',\n      symbol: 'vot',\n      expectedLength: 26,\n      addressTypes: {prod: ['1cb8','1cbd'], testnet: ['1d25', '1cba']},\n      validator: BTCValidator\n  },{\n      name: 'decred',\n      symbol: 'dcr',\n      addressTypes: {prod: ['073f', '071a'], testnet: ['0f21', '0efc']},\n      hashFunction: 'blake256',\n      expectedLength: 26,\n      validator: BTCValidator\n  },{\n      name: 'digibyte',\n      symbol: 'dgb',\n      addressTypes: {prod: ['1e'], testnet: []},\n      validator: BTCValidator\n  },{\n      name: 'ethereum',\n      symbol: 'eth',\n      validator: ETHValidator,\n  },{\n      name: 'etherzero',\n      symbol: 'etz',\n      validator: ETHValidator,\n  },{\n      name: 'ethereumclassic',\n      symbol: 'etc',\n      validator: ETHValidator,\n  },{\n      name: 'callisto',\n      symbol: 'clo',\n      validator: ETHValidator,\n  },{\n      name: 'ripple',\n      symbol: 'xrp',\n      validator: XRPValidator,\n  },{\n      name: 'dash',\n      symbol: 'dash',\n      addressTypes: {prod: ['4c', '10'], testnet: ['8c', '13']},\n      validator: BTCValidator\n  },{\n      name: 'neo',\n      symbol: 'neo',\n      addressTypes: {prod: ['17'], testnet: []},\n      validator: BTCValidator\n  },{\n      name: 'neogas',\n      symbol: 'gas',\n      addressTypes: {prod: ['17'], testnet: []},\n      validator: BTCValidator\n  },{\n      name: 'qtum',\n      symbol: 'qtum',\n      addressTypes: {prod: ['3a', '32'], testnet: ['78', '6e']},\n      validator: BTCValidator\n  },{\n      name: 'bankex',\n      symbol: 'bkx',\n      validator: ETHValidator\n  },{\n      name: 'monero',\n      symbol: 'xmr',\n      addressTypes: {prod: ['18'], testnet: ['53']},\n      iAddressTypes: {prod: ['19'], testnet: ['54']},\n      validator: XMRValidator\n  },{\n      name: 'nano',\n      symbol: 'nano',\n      validator: NANOValidator,\n  },{\n      name: 'raiblocks',\n      symbol: 'xrb',\n      validator: NANOValidator,\n  }];\n  \n  \n  module.exports = {\n      getByNameOrSymbol: function (currencyNameOrSymbol) {\n          var nameOrSymbol = currencyNameOrSymbol.toLowerCase();\n          for (var i = 0; i < CURRENCIES.length; i++) {\n              var currency = CURRENCIES[i];\n              if(currency.name === nameOrSymbol || currency.symbol === nameOrSymbol) {\n                  return currency;\n              }\n          }\n          return null;\n      }\n  };\n  \n  },{\"./bitcoin_validator\":4,\"./ethereum_validator\":15,\"./monero_validator\":16,\"./nano_validator\":17,\"./ripple_validator\":18}],15:[function(require,module,exports){\n  var cryptoUtils = require('./crypto/utils');\n  \n  module.exports = {\n      isValidAddress: function (address) {\n          if (!/^0x[0-9a-fA-F]{40}$/.test(address)) {\n              // Check if it has the basic requirements of an address\n              return false;\n          }\n  \n          if (/^0x[0-9a-f]{40}$/.test(address) || /^0x?[0-9A-F]{40}$/.test(address)) {\n              // If it's all small caps or all all caps, return true\n              return true;\n          }\n  \n          // Otherwise check each case\n          return this.verifyChecksum(address);\n      },\n      verifyChecksum: function (address) {\n          // Check each case\n          address = address.replace('0x','');\n  \n          var addressHash = cryptoUtils.keccak256(address.toLowerCase());\n  \n          for (var i = 0; i < 40; i++ ) {\n              // The nth letter should be uppercase if the nth digit of casemap is 1\n              if ((parseInt(addressHash[i], 16) > 7 && address[i].toUpperCase() !== address[i]) ||\n                  (parseInt(addressHash[i], 16) <= 7 && address[i].toLowerCase() !== address[i])) {\n                  return false;\n              }\n          }\n  \n          return true;\n      }\n  };\n  \n  },{\"./crypto/utils\":13}],16:[function(require,module,exports){\n  var cryptoUtils = require('./crypto/utils');\n  var cnBase58 = require('./crypto/cnBase58');\n  \n  var DEFAULT_NETWORK_TYPE = 'prod';\n  var addressRegTest = new RegExp('^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{95}$');\n  var integratedAddressRegTest = new RegExp('^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{106}$');\n  \n  function validateNetwork(decoded, currency, networkType, addressType){\n      var network = currency.addressTypes;\n      if(addressType == 'integrated'){\n          network = currency.iAddressTypes;\n      }\n  \n      switch(networkType){\n          case 'prod':\n              return parseInt(decoded.substr(0,2), 16) == network.prod[0];\n          case 'testnet':\n              return parseInt(decoded.substr(0,2), 16) == network.testnet[0];\n          case 'both':\n              return parseInt(decoded.substr(0,2), 16) == network.prod[0] || parseInt(decoded.substr(0,2), 16) == network.testnet[0];\n          default:\n              return false;\n      }\n  }\n  \n  function hextobin(hex) {\n      if (hex.length % 2 !== 0) return null;\n      var res = new Uint8Array(hex.length / 2);\n      for (var i = 0; i < hex.length / 2; ++i) {\n          res[i] = parseInt(hex.slice(i * 2, i * 2 + 2), 16);\n      }\n      return res;\n  }\n  \n  module.exports = {\n      isValidAddress: function (address, currency, networkType) {\n          networkType = networkType || DEFAULT_NETWORK_TYPE;\n          var addressType = 'standard';\n          if(!addressRegTest.test(address)){\n              if(integratedAddressRegTest.test(address)){\n                  addressType = 'integrated';\n              }\n              else{\n                  return false;\n              }\n          }\n  \n          var decodedAddrStr = cnBase58.decode(address);\n          if(!decodedAddrStr)\n              return false;\n  \n          if(!validateNetwork(decodedAddrStr, currency, networkType, addressType))\n              return false;\n  \n          var addrChecksum = decodedAddrStr.slice(-8);\n          var hashChecksum = cryptoUtils.keccak256Checksum(hextobin(decodedAddrStr.slice(0, -8)));\n          \n          return addrChecksum === hashChecksum;\n      }\n  };\n  \n  },{\"./crypto/cnBase58\":10,\"./crypto/utils\":13}],17:[function(require,module,exports){\n  var cryptoUtils = require('./crypto/utils');\n  var baseX = require('base-x');\n  \n  var ALLOWED_CHARS = '13456789abcdefghijkmnopqrstuwxyz';\n  \n  var codec = baseX(ALLOWED_CHARS);\n  // https://github.com/nanocurrency/raiblocks/wiki/Accounts,-Keys,-Seeds,-and-Wallet-Identifiers\n  var regexp = new RegExp('^(xrb|nano)_([' + ALLOWED_CHARS + ']{60})$');\n  \n  module.exports = {\n      isValidAddress: function (address) {\n          if (regexp.test(address)) {\n              return this.verifyChecksum(address);\n          }\n  \n          return false;\n      },\n  \n      verifyChecksum: function (address) {\n          var bytes = codec.decode(regexp.exec(address)[2]).slice(-37);\n          // https://github.com/nanocurrency/raiblocks/blob/master/rai/lib/numbers.cpp#L73\n          var computedChecksum = cryptoUtils.blake2b(cryptoUtils.toHex(bytes.slice(0, -5)), 5);\n          var checksum = cryptoUtils.toHex(bytes.slice(-5).reverse());\n  \n          return computedChecksum === checksum\n      }\n  };\n  \n  },{\"./crypto/utils\":13,\"base-x\":1}],18:[function(require,module,exports){\n  var cryptoUtils = require('./crypto/utils');\n  var baseX = require('base-x');\n  \n  var ALLOWED_CHARS = 'rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz';\n  \n  var codec = baseX(ALLOWED_CHARS);\n  var regexp = new RegExp('^r[' + ALLOWED_CHARS + ']{27,35}$');\n  \n  module.exports = {\n      /**\n       * ripple address validation\n       */\n      isValidAddress: function (address) {\n          if (regexp.test(address)) {\n              return this.verifyChecksum(address);\n          }\n  \n          return false;\n      },\n  \n      verifyChecksum: function (address) {\n          var bytes = codec.decode(address);\n          var computedChecksum = cryptoUtils.sha256Checksum(cryptoUtils.toHex(bytes.slice(0, -4)));\n          var checksum = cryptoUtils.toHex(bytes.slice(-4));\n  \n          return computedChecksum === checksum\n      }\n  };\n  \n  },{\"./crypto/utils\":13,\"base-x\":1}],19:[function(require,module,exports){\n  var currencies = require('./currencies');\n  \n  var DEFAULT_CURRENCY_NAME = 'bitcoin';\n  \n  module.exports = {\n      validate: function (address, currencyNameOrSymbol, networkType) {\n          var currency = currencies.getByNameOrSymbol(currencyNameOrSymbol || DEFAULT_CURRENCY_NAME);\n  \n          if (currency.validator) {\n              return currency.validator.isValidAddress(address, currency, networkType);\n          }\n  \n          throw new Error('Missing validator for currency: ' + currencyNameOrSymbol);\n      },\n  };\n  \n  },{\"./currencies\":14}],20:[function(require,module,exports){\n  WAValidator = require('wallet-address-validator');\n  module.exports = WAValidator;\n  },{\"wallet-address-validator\":19}],21:[function(require,module,exports){\n  'use strict'\n  \n  exports.byteLength = byteLength\n  exports.toByteArray = toByteArray\n  exports.fromByteArray = fromByteArray\n  \n  var lookup = []\n  var revLookup = []\n  var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n  \n  var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n  for (var i = 0, len = code.length; i < len; ++i) {\n    lookup[i] = code[i]\n    revLookup[code.charCodeAt(i)] = i\n  }\n  \n  // Support decoding URL-safe base64 strings, as Node.js does.\n  // See: https://en.wikipedia.org/wiki/Base64#URL_applications\n  revLookup['-'.charCodeAt(0)] = 62\n  revLookup['_'.charCodeAt(0)] = 63\n  \n  function getLens (b64) {\n    var len = b64.length\n  \n    if (len % 4 > 0) {\n      throw new Error('Invalid string. Length must be a multiple of 4')\n    }\n  \n    // Trim off extra bytes after placeholder bytes are found\n    // See: https://github.com/beatgammit/base64-js/issues/42\n    var validLen = b64.indexOf('=')\n    if (validLen === -1) validLen = len\n  \n    var placeHoldersLen = validLen === len\n      ? 0\n      : 4 - (validLen % 4)\n  \n    return [validLen, placeHoldersLen]\n  }\n  \n  // base64 is 4/3 + up to two characters of the original data\n  function byteLength (b64) {\n    var lens = getLens(b64)\n    var validLen = lens[0]\n    var placeHoldersLen = lens[1]\n    return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n  }\n  \n  function _byteLength (b64, validLen, placeHoldersLen) {\n    return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n  }\n  \n  function toByteArray (b64) {\n    var tmp\n    var lens = getLens(b64)\n    var validLen = lens[0]\n    var placeHoldersLen = lens[1]\n  \n    var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n  \n    var curByte = 0\n  \n    // if there are placeholders, only get up to the last complete 4 chars\n    var len = placeHoldersLen > 0\n      ? validLen - 4\n      : validLen\n  \n    for (var i = 0; i < len; i += 4) {\n      tmp =\n        (revLookup[b64.charCodeAt(i)] << 18) |\n        (revLookup[b64.charCodeAt(i + 1)] << 12) |\n        (revLookup[b64.charCodeAt(i + 2)] << 6) |\n        revLookup[b64.charCodeAt(i + 3)]\n      arr[curByte++] = (tmp >> 16) & 0xFF\n      arr[curByte++] = (tmp >> 8) & 0xFF\n      arr[curByte++] = tmp & 0xFF\n    }\n  \n    if (placeHoldersLen === 2) {\n      tmp =\n        (revLookup[b64.charCodeAt(i)] << 2) |\n        (revLookup[b64.charCodeAt(i + 1)] >> 4)\n      arr[curByte++] = tmp & 0xFF\n    }\n  \n    if (placeHoldersLen === 1) {\n      tmp =\n        (revLookup[b64.charCodeAt(i)] << 10) |\n        (revLookup[b64.charCodeAt(i + 1)] << 4) |\n        (revLookup[b64.charCodeAt(i + 2)] >> 2)\n      arr[curByte++] = (tmp >> 8) & 0xFF\n      arr[curByte++] = tmp & 0xFF\n    }\n  \n    return arr\n  }\n  \n  function tripletToBase64 (num) {\n    return lookup[num >> 18 & 0x3F] +\n      lookup[num >> 12 & 0x3F] +\n      lookup[num >> 6 & 0x3F] +\n      lookup[num & 0x3F]\n  }\n  \n  function encodeChunk (uint8, start, end) {\n    var tmp\n    var output = []\n    for (var i = start; i < end; i += 3) {\n      tmp =\n        ((uint8[i] << 16) & 0xFF0000) +\n        ((uint8[i + 1] << 8) & 0xFF00) +\n        (uint8[i + 2] & 0xFF)\n      output.push(tripletToBase64(tmp))\n    }\n    return output.join('')\n  }\n  \n  function fromByteArray (uint8) {\n    var tmp\n    var len = uint8.length\n    var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n    var parts = []\n    var maxChunkLength = 16383 // must be multiple of 3\n  \n    // go through the array every three bytes, we'll deal with trailing stuff later\n    for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n      parts.push(encodeChunk(\n        uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n      ))\n    }\n  \n    // pad the end with zeros, but make sure to not forget the extra bytes\n    if (extraBytes === 1) {\n      tmp = uint8[len - 1]\n      parts.push(\n        lookup[tmp >> 2] +\n        lookup[(tmp << 4) & 0x3F] +\n        '=='\n      )\n    } else if (extraBytes === 2) {\n      tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n      parts.push(\n        lookup[tmp >> 10] +\n        lookup[(tmp >> 4) & 0x3F] +\n        lookup[(tmp << 2) & 0x3F] +\n        '='\n      )\n    }\n  \n    return parts.join('')\n  }\n  \n  },{}],22:[function(require,module,exports){\n  /*!\n   * The buffer module from node.js, for the browser.\n   *\n   * @author   Feross Aboukhadijeh <https://feross.org>\n   * @license  MIT\n   */\n  /* eslint-disable no-proto */\n  \n  'use strict'\n  \n  var base64 = require('base64-js')\n  var ieee754 = require('ieee754')\n  \n  exports.Buffer = Buffer\n  exports.SlowBuffer = SlowBuffer\n  exports.INSPECT_MAX_BYTES = 50\n  \n  var K_MAX_LENGTH = 0x7fffffff\n  exports.kMaxLength = K_MAX_LENGTH\n  \n  /**\n   * If `Buffer.TYPED_ARRAY_SUPPORT`:\n   *   === true    Use Uint8Array implementation (fastest)\n   *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n   *               implementation (most compatible, even IE6)\n   *\n   * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n   * Opera 11.6+, iOS 4.2+.\n   *\n   * We report that the browser does not support typed arrays if the are not subclassable\n   * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n   * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n   * for __proto__ and has a buggy typed array implementation.\n   */\n  Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n  \n  if (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n      typeof console.error === 'function') {\n    console.error(\n      'This browser lacks typed array (Uint8Array) support which is required by ' +\n      '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n    )\n  }\n  \n  function typedArraySupport () {\n    // Can typed array instances can be augmented?\n    try {\n      var arr = new Uint8Array(1)\n      arr.__proto__ = { __proto__: Uint8Array.prototype, foo: function () { return 42 } }\n      return arr.foo() === 42\n    } catch (e) {\n      return false\n    }\n  }\n  \n  Object.defineProperty(Buffer.prototype, 'parent', {\n    enumerable: true,\n    get: function () {\n      if (!Buffer.isBuffer(this)) return undefined\n      return this.buffer\n    }\n  })\n  \n  Object.defineProperty(Buffer.prototype, 'offset', {\n    enumerable: true,\n    get: function () {\n      if (!Buffer.isBuffer(this)) return undefined\n      return this.byteOffset\n    }\n  })\n  \n  function createBuffer (length) {\n    if (length > K_MAX_LENGTH) {\n      throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n    }\n    // Return an augmented `Uint8Array` instance\n    var buf = new Uint8Array(length)\n    buf.__proto__ = Buffer.prototype\n    return buf\n  }\n  \n  /**\n   * The Buffer constructor returns instances of `Uint8Array` that have their\n   * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n   * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n   * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n   * returns a single octet.\n   *\n   * The `Uint8Array` prototype remains unmodified.\n   */\n  \n  function Buffer (arg, encodingOrOffset, length) {\n    // Common case.\n    if (typeof arg === 'number') {\n      if (typeof encodingOrOffset === 'string') {\n        throw new TypeError(\n          'The \"string\" argument must be of type string. Received type number'\n        )\n      }\n      return allocUnsafe(arg)\n    }\n    return from(arg, encodingOrOffset, length)\n  }\n  \n  // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n  if (typeof Symbol !== 'undefined' && Symbol.species != null &&\n      Buffer[Symbol.species] === Buffer) {\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true,\n      enumerable: false,\n      writable: false\n    })\n  }\n  \n  Buffer.poolSize = 8192 // not used by this implementation\n  \n  function from (value, encodingOrOffset, length) {\n    if (typeof value === 'string') {\n      return fromString(value, encodingOrOffset)\n    }\n  \n    if (ArrayBuffer.isView(value)) {\n      return fromArrayLike(value)\n    }\n  \n    if (value == null) {\n      throw TypeError(\n        'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n        'or Array-like Object. Received type ' + (typeof value)\n      )\n    }\n  \n    if (isInstance(value, ArrayBuffer) ||\n        (value && isInstance(value.buffer, ArrayBuffer))) {\n      return fromArrayBuffer(value, encodingOrOffset, length)\n    }\n  \n    if (typeof value === 'number') {\n      throw new TypeError(\n        'The \"value\" argument must not be of type number. Received type number'\n      )\n    }\n  \n    var valueOf = value.valueOf && value.valueOf()\n    if (valueOf != null && valueOf !== value) {\n      return Buffer.from(valueOf, encodingOrOffset, length)\n    }\n  \n    var b = fromObject(value)\n    if (b) return b\n  \n    if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n        typeof value[Symbol.toPrimitive] === 'function') {\n      return Buffer.from(\n        value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n      )\n    }\n  \n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n  \n  /**\n   * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n   * if value is a number.\n   * Buffer.from(str[, encoding])\n   * Buffer.from(array)\n   * Buffer.from(buffer)\n   * Buffer.from(arrayBuffer[, byteOffset[, length]])\n   **/\n  Buffer.from = function (value, encodingOrOffset, length) {\n    return from(value, encodingOrOffset, length)\n  }\n  \n  // Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n  // https://github.com/feross/buffer/pull/148\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  \n  function assertSize (size) {\n    if (typeof size !== 'number') {\n      throw new TypeError('\"size\" argument must be of type number')\n    } else if (size < 0) {\n      throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n    }\n  }\n  \n  function alloc (size, fill, encoding) {\n    assertSize(size)\n    if (size <= 0) {\n      return createBuffer(size)\n    }\n    if (fill !== undefined) {\n      // Only pay attention to encoding if it's a string. This\n      // prevents accidentally sending in a number that would\n      // be interpretted as a start offset.\n      return typeof encoding === 'string'\n        ? createBuffer(size).fill(fill, encoding)\n        : createBuffer(size).fill(fill)\n    }\n    return createBuffer(size)\n  }\n  \n  /**\n   * Creates a new filled Buffer instance.\n   * alloc(size[, fill[, encoding]])\n   **/\n  Buffer.alloc = function (size, fill, encoding) {\n    return alloc(size, fill, encoding)\n  }\n  \n  function allocUnsafe (size) {\n    assertSize(size)\n    return createBuffer(size < 0 ? 0 : checked(size) | 0)\n  }\n  \n  /**\n   * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n   * */\n  Buffer.allocUnsafe = function (size) {\n    return allocUnsafe(size)\n  }\n  /**\n   * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n   */\n  Buffer.allocUnsafeSlow = function (size) {\n    return allocUnsafe(size)\n  }\n  \n  function fromString (string, encoding) {\n    if (typeof encoding !== 'string' || encoding === '') {\n      encoding = 'utf8'\n    }\n  \n    if (!Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  \n    var length = byteLength(string, encoding) | 0\n    var buf = createBuffer(length)\n  \n    var actual = buf.write(string, encoding)\n  \n    if (actual !== length) {\n      // Writing a hex string, for example, that contains invalid characters will\n      // cause everything after the first invalid character to be ignored. (e.g.\n      // 'abxxcd' will be treated as 'ab')\n      buf = buf.slice(0, actual)\n    }\n  \n    return buf\n  }\n  \n  function fromArrayLike (array) {\n    var length = array.length < 0 ? 0 : checked(array.length) | 0\n    var buf = createBuffer(length)\n    for (var i = 0; i < length; i += 1) {\n      buf[i] = array[i] & 255\n    }\n    return buf\n  }\n  \n  function fromArrayBuffer (array, byteOffset, length) {\n    if (byteOffset < 0 || array.byteLength < byteOffset) {\n      throw new RangeError('\"offset\" is outside of buffer bounds')\n    }\n  \n    if (array.byteLength < byteOffset + (length || 0)) {\n      throw new RangeError('\"length\" is outside of buffer bounds')\n    }\n  \n    var buf\n    if (byteOffset === undefined && length === undefined) {\n      buf = new Uint8Array(array)\n    } else if (length === undefined) {\n      buf = new Uint8Array(array, byteOffset)\n    } else {\n      buf = new Uint8Array(array, byteOffset, length)\n    }\n  \n    // Return an augmented `Uint8Array` instance\n    buf.__proto__ = Buffer.prototype\n    return buf\n  }\n  \n  function fromObject (obj) {\n    if (Buffer.isBuffer(obj)) {\n      var len = checked(obj.length) | 0\n      var buf = createBuffer(len)\n  \n      if (buf.length === 0) {\n        return buf\n      }\n  \n      obj.copy(buf, 0, 0, len)\n      return buf\n    }\n  \n    if (obj.length !== undefined) {\n      if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n        return createBuffer(0)\n      }\n      return fromArrayLike(obj)\n    }\n  \n    if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n      return fromArrayLike(obj.data)\n    }\n  }\n  \n  function checked (length) {\n    // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n    // length is NaN (which is otherwise coerced to zero.)\n    if (length >= K_MAX_LENGTH) {\n      throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                           'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n    }\n    return length | 0\n  }\n  \n  function SlowBuffer (length) {\n    if (+length != length) { // eslint-disable-line eqeqeq\n      length = 0\n    }\n    return Buffer.alloc(+length)\n  }\n  \n  Buffer.isBuffer = function isBuffer (b) {\n    return b != null && b._isBuffer === true &&\n      b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n  }\n  \n  Buffer.compare = function compare (a, b) {\n    if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n    if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n    if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n      throw new TypeError(\n        'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n      )\n    }\n  \n    if (a === b) return 0\n  \n    var x = a.length\n    var y = b.length\n  \n    for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n      if (a[i] !== b[i]) {\n        x = a[i]\n        y = b[i]\n        break\n      }\n    }\n  \n    if (x < y) return -1\n    if (y < x) return 1\n    return 0\n  }\n  \n  Buffer.isEncoding = function isEncoding (encoding) {\n    switch (String(encoding).toLowerCase()) {\n      case 'hex':\n      case 'utf8':\n      case 'utf-8':\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n      case 'base64':\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return true\n      default:\n        return false\n    }\n  }\n  \n  Buffer.concat = function concat (list, length) {\n    if (!Array.isArray(list)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n  \n    if (list.length === 0) {\n      return Buffer.alloc(0)\n    }\n  \n    var i\n    if (length === undefined) {\n      length = 0\n      for (i = 0; i < list.length; ++i) {\n        length += list[i].length\n      }\n    }\n  \n    var buffer = Buffer.allocUnsafe(length)\n    var pos = 0\n    for (i = 0; i < list.length; ++i) {\n      var buf = list[i]\n      if (isInstance(buf, Uint8Array)) {\n        buf = Buffer.from(buf)\n      }\n      if (!Buffer.isBuffer(buf)) {\n        throw new TypeError('\"list\" argument must be an Array of Buffers')\n      }\n      buf.copy(buffer, pos)\n      pos += buf.length\n    }\n    return buffer\n  }\n  \n  function byteLength (string, encoding) {\n    if (Buffer.isBuffer(string)) {\n      return string.length\n    }\n    if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n      return string.byteLength\n    }\n    if (typeof string !== 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n        'Received type ' + typeof string\n      )\n    }\n  \n    var len = string.length\n    var mustMatch = (arguments.length > 2 && arguments[2] === true)\n    if (!mustMatch && len === 0) return 0\n  \n    // Use a for loop to avoid recursion\n    var loweredCase = false\n    for (;;) {\n      switch (encoding) {\n        case 'ascii':\n        case 'latin1':\n        case 'binary':\n          return len\n        case 'utf8':\n        case 'utf-8':\n          return utf8ToBytes(string).length\n        case 'ucs2':\n        case 'ucs-2':\n        case 'utf16le':\n        case 'utf-16le':\n          return len * 2\n        case 'hex':\n          return len >>> 1\n        case 'base64':\n          return base64ToBytes(string).length\n        default:\n          if (loweredCase) {\n            return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n          }\n          encoding = ('' + encoding).toLowerCase()\n          loweredCase = true\n      }\n    }\n  }\n  Buffer.byteLength = byteLength\n  \n  function slowToString (encoding, start, end) {\n    var loweredCase = false\n  \n    // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n    // property of a typed array.\n  \n    // This behaves neither like String nor Uint8Array in that we set start/end\n    // to their upper/lower bounds if the value passed is out of range.\n    // undefined is handled specially as per ECMA-262 6th Edition,\n    // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n    if (start === undefined || start < 0) {\n      start = 0\n    }\n    // Return early if start > this.length. Done here to prevent potential uint32\n    // coercion fail below.\n    if (start > this.length) {\n      return ''\n    }\n  \n    if (end === undefined || end > this.length) {\n      end = this.length\n    }\n  \n    if (end <= 0) {\n      return ''\n    }\n  \n    // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n    end >>>= 0\n    start >>>= 0\n  \n    if (end <= start) {\n      return ''\n    }\n  \n    if (!encoding) encoding = 'utf8'\n  \n    while (true) {\n      switch (encoding) {\n        case 'hex':\n          return hexSlice(this, start, end)\n  \n        case 'utf8':\n        case 'utf-8':\n          return utf8Slice(this, start, end)\n  \n        case 'ascii':\n          return asciiSlice(this, start, end)\n  \n        case 'latin1':\n        case 'binary':\n          return latin1Slice(this, start, end)\n  \n        case 'base64':\n          return base64Slice(this, start, end)\n  \n        case 'ucs2':\n        case 'ucs-2':\n        case 'utf16le':\n        case 'utf-16le':\n          return utf16leSlice(this, start, end)\n  \n        default:\n          if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n          encoding = (encoding + '').toLowerCase()\n          loweredCase = true\n      }\n    }\n  }\n  \n  // This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n  // to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n  // reliably in a browserify context because there could be multiple different\n  // copies of the 'buffer' package in use. This method works even for Buffer\n  // instances that were created from another copy of the `buffer` package.\n  // See: https://github.com/feross/buffer/issues/154\n  Buffer.prototype._isBuffer = true\n  \n  function swap (b, n, m) {\n    var i = b[n]\n    b[n] = b[m]\n    b[m] = i\n  }\n  \n  Buffer.prototype.swap16 = function swap16 () {\n    var len = this.length\n    if (len % 2 !== 0) {\n      throw new RangeError('Buffer size must be a multiple of 16-bits')\n    }\n    for (var i = 0; i < len; i += 2) {\n      swap(this, i, i + 1)\n    }\n    return this\n  }\n  \n  Buffer.prototype.swap32 = function swap32 () {\n    var len = this.length\n    if (len % 4 !== 0) {\n      throw new RangeError('Buffer size must be a multiple of 32-bits')\n    }\n    for (var i = 0; i < len; i += 4) {\n      swap(this, i, i + 3)\n      swap(this, i + 1, i + 2)\n    }\n    return this\n  }\n  \n  Buffer.prototype.swap64 = function swap64 () {\n    var len = this.length\n    if (len % 8 !== 0) {\n      throw new RangeError('Buffer size must be a multiple of 64-bits')\n    }\n    for (var i = 0; i < len; i += 8) {\n      swap(this, i, i + 7)\n      swap(this, i + 1, i + 6)\n      swap(this, i + 2, i + 5)\n      swap(this, i + 3, i + 4)\n    }\n    return this\n  }\n  \n  Buffer.prototype.toString = function toString () {\n    var length = this.length\n    if (length === 0) return ''\n    if (arguments.length === 0) return utf8Slice(this, 0, length)\n    return slowToString.apply(this, arguments)\n  }\n  \n  Buffer.prototype.toLocaleString = Buffer.prototype.toString\n  \n  Buffer.prototype.equals = function equals (b) {\n    if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n    if (this === b) return true\n    return Buffer.compare(this, b) === 0\n  }\n  \n  Buffer.prototype.inspect = function inspect () {\n    var str = ''\n    var max = exports.INSPECT_MAX_BYTES\n    str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n    if (this.length > max) str += ' ... '\n    return '<Buffer ' + str + '>'\n  }\n  \n  Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n    if (isInstance(target, Uint8Array)) {\n      target = Buffer.from(target, target.offset, target.byteLength)\n    }\n    if (!Buffer.isBuffer(target)) {\n      throw new TypeError(\n        'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n        'Received type ' + (typeof target)\n      )\n    }\n  \n    if (start === undefined) {\n      start = 0\n    }\n    if (end === undefined) {\n      end = target ? target.length : 0\n    }\n    if (thisStart === undefined) {\n      thisStart = 0\n    }\n    if (thisEnd === undefined) {\n      thisEnd = this.length\n    }\n  \n    if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n      throw new RangeError('out of range index')\n    }\n  \n    if (thisStart >= thisEnd && start >= end) {\n      return 0\n    }\n    if (thisStart >= thisEnd) {\n      return -1\n    }\n    if (start >= end) {\n      return 1\n    }\n  \n    start >>>= 0\n    end >>>= 0\n    thisStart >>>= 0\n    thisEnd >>>= 0\n  \n    if (this === target) return 0\n  \n    var x = thisEnd - thisStart\n    var y = end - start\n    var len = Math.min(x, y)\n  \n    var thisCopy = this.slice(thisStart, thisEnd)\n    var targetCopy = target.slice(start, end)\n  \n    for (var i = 0; i < len; ++i) {\n      if (thisCopy[i] !== targetCopy[i]) {\n        x = thisCopy[i]\n        y = targetCopy[i]\n        break\n      }\n    }\n  \n    if (x < y) return -1\n    if (y < x) return 1\n    return 0\n  }\n  \n  // Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n  // OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n  //\n  // Arguments:\n  // - buffer - a Buffer to search\n  // - val - a string, Buffer, or number\n  // - byteOffset - an index into `buffer`; will be clamped to an int32\n  // - encoding - an optional encoding, relevant is val is a string\n  // - dir - true for indexOf, false for lastIndexOf\n  function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n    // Empty buffer means no match\n    if (buffer.length === 0) return -1\n  \n    // Normalize byteOffset\n    if (typeof byteOffset === 'string') {\n      encoding = byteOffset\n      byteOffset = 0\n    } else if (byteOffset > 0x7fffffff) {\n      byteOffset = 0x7fffffff\n    } else if (byteOffset < -0x80000000) {\n      byteOffset = -0x80000000\n    }\n    byteOffset = +byteOffset // Coerce to Number.\n    if (numberIsNaN(byteOffset)) {\n      // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n      byteOffset = dir ? 0 : (buffer.length - 1)\n    }\n  \n    // Normalize byteOffset: negative offsets start from the end of the buffer\n    if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n    if (byteOffset >= buffer.length) {\n      if (dir) return -1\n      else byteOffset = buffer.length - 1\n    } else if (byteOffset < 0) {\n      if (dir) byteOffset = 0\n      else return -1\n    }\n  \n    // Normalize val\n    if (typeof val === 'string') {\n      val = Buffer.from(val, encoding)\n    }\n  \n    // Finally, search either indexOf (if dir is true) or lastIndexOf\n    if (Buffer.isBuffer(val)) {\n      // Special case: looking for empty string/buffer always fails\n      if (val.length === 0) {\n        return -1\n      }\n      return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n    } else if (typeof val === 'number') {\n      val = val & 0xFF // Search for a byte value [0-255]\n      if (typeof Uint8Array.prototype.indexOf === 'function') {\n        if (dir) {\n          return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n        } else {\n          return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n        }\n      }\n      return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n    }\n  \n    throw new TypeError('val must be string, number or Buffer')\n  }\n  \n  function arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n    var indexSize = 1\n    var arrLength = arr.length\n    var valLength = val.length\n  \n    if (encoding !== undefined) {\n      encoding = String(encoding).toLowerCase()\n      if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n          encoding === 'utf16le' || encoding === 'utf-16le') {\n        if (arr.length < 2 || val.length < 2) {\n          return -1\n        }\n        indexSize = 2\n        arrLength /= 2\n        valLength /= 2\n        byteOffset /= 2\n      }\n    }\n  \n    function read (buf, i) {\n      if (indexSize === 1) {\n        return buf[i]\n      } else {\n        return buf.readUInt16BE(i * indexSize)\n      }\n    }\n  \n    var i\n    if (dir) {\n      var foundIndex = -1\n      for (i = byteOffset; i < arrLength; i++) {\n        if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n          if (foundIndex === -1) foundIndex = i\n          if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n        } else {\n          if (foundIndex !== -1) i -= i - foundIndex\n          foundIndex = -1\n        }\n      }\n    } else {\n      if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n      for (i = byteOffset; i >= 0; i--) {\n        var found = true\n        for (var j = 0; j < valLength; j++) {\n          if (read(arr, i + j) !== read(val, j)) {\n            found = false\n            break\n          }\n        }\n        if (found) return i\n      }\n    }\n  \n    return -1\n  }\n  \n  Buffer.prototype.includes = function includes (val, byteOffset, encoding) {\n    return this.indexOf(val, byteOffset, encoding) !== -1\n  }\n  \n  Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n    return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n  }\n  \n  Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n    return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n  }\n  \n  function hexWrite (buf, string, offset, length) {\n    offset = Number(offset) || 0\n    var remaining = buf.length - offset\n    if (!length) {\n      length = remaining\n    } else {\n      length = Number(length)\n      if (length > remaining) {\n        length = remaining\n      }\n    }\n  \n    var strLen = string.length\n  \n    if (length > strLen / 2) {\n      length = strLen / 2\n    }\n    for (var i = 0; i < length; ++i) {\n      var parsed = parseInt(string.substr(i * 2, 2), 16)\n      if (numberIsNaN(parsed)) return i\n      buf[offset + i] = parsed\n    }\n    return i\n  }\n  \n  function utf8Write (buf, string, offset, length) {\n    return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n  }\n  \n  function asciiWrite (buf, string, offset, length) {\n    return blitBuffer(asciiToBytes(string), buf, offset, length)\n  }\n  \n  function latin1Write (buf, string, offset, length) {\n    return asciiWrite(buf, string, offset, length)\n  }\n  \n  function base64Write (buf, string, offset, length) {\n    return blitBuffer(base64ToBytes(string), buf, offset, length)\n  }\n  \n  function ucs2Write (buf, string, offset, length) {\n    return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n  }\n  \n  Buffer.prototype.write = function write (string, offset, length, encoding) {\n    // Buffer#write(string)\n    if (offset === undefined) {\n      encoding = 'utf8'\n      length = this.length\n      offset = 0\n    // Buffer#write(string, encoding)\n    } else if (length === undefined && typeof offset === 'string') {\n      encoding = offset\n      length = this.length\n      offset = 0\n    // Buffer#write(string, offset[, length][, encoding])\n    } else if (isFinite(offset)) {\n      offset = offset >>> 0\n      if (isFinite(length)) {\n        length = length >>> 0\n        if (encoding === undefined) encoding = 'utf8'\n      } else {\n        encoding = length\n        length = undefined\n      }\n    } else {\n      throw new Error(\n        'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n      )\n    }\n  \n    var remaining = this.length - offset\n    if (length === undefined || length > remaining) length = remaining\n  \n    if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n      throw new RangeError('Attempt to write outside buffer bounds')\n    }\n  \n    if (!encoding) encoding = 'utf8'\n  \n    var loweredCase = false\n    for (;;) {\n      switch (encoding) {\n        case 'hex':\n          return hexWrite(this, string, offset, length)\n  \n        case 'utf8':\n        case 'utf-8':\n          return utf8Write(this, string, offset, length)\n  \n        case 'ascii':\n          return asciiWrite(this, string, offset, length)\n  \n        case 'latin1':\n        case 'binary':\n          return latin1Write(this, string, offset, length)\n  \n        case 'base64':\n          // Warning: maxLength not taken into account in base64Write\n          return base64Write(this, string, offset, length)\n  \n        case 'ucs2':\n        case 'ucs-2':\n        case 'utf16le':\n        case 'utf-16le':\n          return ucs2Write(this, string, offset, length)\n  \n        default:\n          if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n          encoding = ('' + encoding).toLowerCase()\n          loweredCase = true\n      }\n    }\n  }\n  \n  Buffer.prototype.toJSON = function toJSON () {\n    return {\n      type: 'Buffer',\n      data: Array.prototype.slice.call(this._arr || this, 0)\n    }\n  }\n  \n  function base64Slice (buf, start, end) {\n    if (start === 0 && end === buf.length) {\n      return base64.fromByteArray(buf)\n    } else {\n      return base64.fromByteArray(buf.slice(start, end))\n    }\n  }\n  \n  function utf8Slice (buf, start, end) {\n    end = Math.min(buf.length, end)\n    var res = []\n  \n    var i = start\n    while (i < end) {\n      var firstByte = buf[i]\n      var codePoint = null\n      var bytesPerSequence = (firstByte > 0xEF) ? 4\n        : (firstByte > 0xDF) ? 3\n          : (firstByte > 0xBF) ? 2\n            : 1\n  \n      if (i + bytesPerSequence <= end) {\n        var secondByte, thirdByte, fourthByte, tempCodePoint\n  \n        switch (bytesPerSequence) {\n          case 1:\n            if (firstByte < 0x80) {\n              codePoint = firstByte\n            }\n            break\n          case 2:\n            secondByte = buf[i + 1]\n            if ((secondByte & 0xC0) === 0x80) {\n              tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n              if (tempCodePoint > 0x7F) {\n                codePoint = tempCodePoint\n              }\n            }\n            break\n          case 3:\n            secondByte = buf[i + 1]\n            thirdByte = buf[i + 2]\n            if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n              tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n              if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n                codePoint = tempCodePoint\n              }\n            }\n            break\n          case 4:\n            secondByte = buf[i + 1]\n            thirdByte = buf[i + 2]\n            fourthByte = buf[i + 3]\n            if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n              tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n              if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n                codePoint = tempCodePoint\n              }\n            }\n        }\n      }\n  \n      if (codePoint === null) {\n        // we did not generate a valid codePoint so insert a\n        // replacement char (U+FFFD) and advance only 1 byte\n        codePoint = 0xFFFD\n        bytesPerSequence = 1\n      } else if (codePoint > 0xFFFF) {\n        // encode to utf16 (surrogate pair dance)\n        codePoint -= 0x10000\n        res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n        codePoint = 0xDC00 | codePoint & 0x3FF\n      }\n  \n      res.push(codePoint)\n      i += bytesPerSequence\n    }\n  \n    return decodeCodePointsArray(res)\n  }\n  \n  // Based on http://stackoverflow.com/a/22747272/680742, the browser with\n  // the lowest limit is Chrome, with 0x10000 args.\n  // We go 1 magnitude less, for safety\n  var MAX_ARGUMENTS_LENGTH = 0x1000\n  \n  function decodeCodePointsArray (codePoints) {\n    var len = codePoints.length\n    if (len <= MAX_ARGUMENTS_LENGTH) {\n      return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n    }\n  \n    // Decode in chunks to avoid \"call stack size exceeded\".\n    var res = ''\n    var i = 0\n    while (i < len) {\n      res += String.fromCharCode.apply(\n        String,\n        codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n      )\n    }\n    return res\n  }\n  \n  function asciiSlice (buf, start, end) {\n    var ret = ''\n    end = Math.min(buf.length, end)\n  \n    for (var i = start; i < end; ++i) {\n      ret += String.fromCharCode(buf[i] & 0x7F)\n    }\n    return ret\n  }\n  \n  function latin1Slice (buf, start, end) {\n    var ret = ''\n    end = Math.min(buf.length, end)\n  \n    for (var i = start; i < end; ++i) {\n      ret += String.fromCharCode(buf[i])\n    }\n    return ret\n  }\n  \n  function hexSlice (buf, start, end) {\n    var len = buf.length\n  \n    if (!start || start < 0) start = 0\n    if (!end || end < 0 || end > len) end = len\n  \n    var out = ''\n    for (var i = start; i < end; ++i) {\n      out += toHex(buf[i])\n    }\n    return out\n  }\n  \n  function utf16leSlice (buf, start, end) {\n    var bytes = buf.slice(start, end)\n    var res = ''\n    for (var i = 0; i < bytes.length; i += 2) {\n      res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n    }\n    return res\n  }\n  \n  Buffer.prototype.slice = function slice (start, end) {\n    var len = this.length\n    start = ~~start\n    end = end === undefined ? len : ~~end\n  \n    if (start < 0) {\n      start += len\n      if (start < 0) start = 0\n    } else if (start > len) {\n      start = len\n    }\n  \n    if (end < 0) {\n      end += len\n      if (end < 0) end = 0\n    } else if (end > len) {\n      end = len\n    }\n  \n    if (end < start) end = start\n  \n    var newBuf = this.subarray(start, end)\n    // Return an augmented `Uint8Array` instance\n    newBuf.__proto__ = Buffer.prototype\n    return newBuf\n  }\n  \n  /*\n   * Need to make sure that buffer isn't trying to write out of bounds.\n   */\n  function checkOffset (offset, ext, length) {\n    if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n    if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n  }\n  \n  Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n    offset = offset >>> 0\n    byteLength = byteLength >>> 0\n    if (!noAssert) checkOffset(offset, byteLength, this.length)\n  \n    var val = this[offset]\n    var mul = 1\n    var i = 0\n    while (++i < byteLength && (mul *= 0x100)) {\n      val += this[offset + i] * mul\n    }\n  \n    return val\n  }\n  \n  Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n    offset = offset >>> 0\n    byteLength = byteLength >>> 0\n    if (!noAssert) {\n      checkOffset(offset, byteLength, this.length)\n    }\n  \n    var val = this[offset + --byteLength]\n    var mul = 1\n    while (byteLength > 0 && (mul *= 0x100)) {\n      val += this[offset + --byteLength] * mul\n    }\n  \n    return val\n  }\n  \n  Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n    offset = offset >>> 0\n    if (!noAssert) checkOffset(offset, 1, this.length)\n    return this[offset]\n  }\n  \n  Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n    offset = offset >>> 0\n    if (!noAssert) checkOffset(offset, 2, this.length)\n    return this[offset] | (this[offset + 1] << 8)\n  }\n  \n  Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n    offset = offset >>> 0\n    if (!noAssert) checkOffset(offset, 2, this.length)\n    return (this[offset] << 8) | this[offset + 1]\n  }\n  \n  Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n    offset = offset >>> 0\n    if (!noAssert) checkOffset(offset, 4, this.length)\n  \n    return ((this[offset]) |\n        (this[offset + 1] << 8) |\n        (this[offset + 2] << 16)) +\n        (this[offset + 3] * 0x1000000)\n  }\n  \n  Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n    offset = offset >>> 0\n    if (!noAssert) checkOffset(offset, 4, this.length)\n  \n    return (this[offset] * 0x1000000) +\n      ((this[offset + 1] << 16) |\n      (this[offset + 2] << 8) |\n      this[offset + 3])\n  }\n  \n  Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n    offset = offset >>> 0\n    byteLength = byteLength >>> 0\n    if (!noAssert) checkOffset(offset, byteLength, this.length)\n  \n    var val = this[offset]\n    var mul = 1\n    var i = 0\n    while (++i < byteLength && (mul *= 0x100)) {\n      val += this[offset + i] * mul\n    }\n    mul *= 0x80\n  \n    if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n  \n    return val\n  }\n  \n  Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n    offset = offset >>> 0\n    byteLength = byteLength >>> 0\n    if (!noAssert) checkOffset(offset, byteLength, this.length)\n  \n    var i = byteLength\n    var mul = 1\n    var val = this[offset + --i]\n    while (i > 0 && (mul *= 0x100)) {\n      val += this[offset + --i] * mul\n    }\n    mul *= 0x80\n  \n    if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n  \n    return val\n  }\n  \n  Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n    offset = offset >>> 0\n    if (!noAssert) checkOffset(offset, 1, this.length)\n    if (!(this[offset] & 0x80)) return (this[offset])\n    return ((0xff - this[offset] + 1) * -1)\n  }\n  \n  Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n    offset = offset >>> 0\n    if (!noAssert) checkOffset(offset, 2, this.length)\n    var val = this[offset] | (this[offset + 1] << 8)\n    return (val & 0x8000) ? val | 0xFFFF0000 : val\n  }\n  \n  Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n    offset = offset >>> 0\n    if (!noAssert) checkOffset(offset, 2, this.length)\n    var val = this[offset + 1] | (this[offset] << 8)\n    return (val & 0x8000) ? val | 0xFFFF0000 : val\n  }\n  \n  Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n    offset = offset >>> 0\n    if (!noAssert) checkOffset(offset, 4, this.length)\n  \n    return (this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16) |\n      (this[offset + 3] << 24)\n  }\n  \n  Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n    offset = offset >>> 0\n    if (!noAssert) checkOffset(offset, 4, this.length)\n  \n    return (this[offset] << 24) |\n      (this[offset + 1] << 16) |\n      (this[offset + 2] << 8) |\n      (this[offset + 3])\n  }\n  \n  Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n    offset = offset >>> 0\n    if (!noAssert) checkOffset(offset, 4, this.length)\n    return ieee754.read(this, offset, true, 23, 4)\n  }\n  \n  Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n    offset = offset >>> 0\n    if (!noAssert) checkOffset(offset, 4, this.length)\n    return ieee754.read(this, offset, false, 23, 4)\n  }\n  \n  Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n    offset = offset >>> 0\n    if (!noAssert) checkOffset(offset, 8, this.length)\n    return ieee754.read(this, offset, true, 52, 8)\n  }\n  \n  Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n    offset = offset >>> 0\n    if (!noAssert) checkOffset(offset, 8, this.length)\n    return ieee754.read(this, offset, false, 52, 8)\n  }\n  \n  function checkInt (buf, value, offset, ext, max, min) {\n    if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n    if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n    if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  }\n  \n  Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n    value = +value\n    offset = offset >>> 0\n    byteLength = byteLength >>> 0\n    if (!noAssert) {\n      var maxBytes = Math.pow(2, 8 * byteLength) - 1\n      checkInt(this, value, offset, byteLength, maxBytes, 0)\n    }\n  \n    var mul = 1\n    var i = 0\n    this[offset] = value & 0xFF\n    while (++i < byteLength && (mul *= 0x100)) {\n      this[offset + i] = (value / mul) & 0xFF\n    }\n  \n    return offset + byteLength\n  }\n  \n  Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n    value = +value\n    offset = offset >>> 0\n    byteLength = byteLength >>> 0\n    if (!noAssert) {\n      var maxBytes = Math.pow(2, 8 * byteLength) - 1\n      checkInt(this, value, offset, byteLength, maxBytes, 0)\n    }\n  \n    var i = byteLength - 1\n    var mul = 1\n    this[offset + i] = value & 0xFF\n    while (--i >= 0 && (mul *= 0x100)) {\n      this[offset + i] = (value / mul) & 0xFF\n    }\n  \n    return offset + byteLength\n  }\n  \n  Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n    value = +value\n    offset = offset >>> 0\n    if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n    this[offset] = (value & 0xff)\n    return offset + 1\n  }\n  \n  Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n    value = +value\n    offset = offset >>> 0\n    if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    return offset + 2\n  }\n  \n  Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n    value = +value\n    offset = offset >>> 0\n    if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n    return offset + 2\n  }\n  \n  Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n    value = +value\n    offset = offset >>> 0\n    if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n    return offset + 4\n  }\n  \n  Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n    value = +value\n    offset = offset >>> 0\n    if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n    return offset + 4\n  }\n  \n  Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n    value = +value\n    offset = offset >>> 0\n    if (!noAssert) {\n      var limit = Math.pow(2, (8 * byteLength) - 1)\n  \n      checkInt(this, value, offset, byteLength, limit - 1, -limit)\n    }\n  \n    var i = 0\n    var mul = 1\n    var sub = 0\n    this[offset] = value & 0xFF\n    while (++i < byteLength && (mul *= 0x100)) {\n      if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n        sub = 1\n      }\n      this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n    }\n  \n    return offset + byteLength\n  }\n  \n  Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n    value = +value\n    offset = offset >>> 0\n    if (!noAssert) {\n      var limit = Math.pow(2, (8 * byteLength) - 1)\n  \n      checkInt(this, value, offset, byteLength, limit - 1, -limit)\n    }\n  \n    var i = byteLength - 1\n    var mul = 1\n    var sub = 0\n    this[offset + i] = value & 0xFF\n    while (--i >= 0 && (mul *= 0x100)) {\n      if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n        sub = 1\n      }\n      this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n    }\n  \n    return offset + byteLength\n  }\n  \n  Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n    value = +value\n    offset = offset >>> 0\n    if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n    if (value < 0) value = 0xff + value + 1\n    this[offset] = (value & 0xff)\n    return offset + 1\n  }\n  \n  Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n    value = +value\n    offset = offset >>> 0\n    if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    return offset + 2\n  }\n  \n  Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n    value = +value\n    offset = offset >>> 0\n    if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n    return offset + 2\n  }\n  \n  Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n    value = +value\n    offset = offset >>> 0\n    if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n    return offset + 4\n  }\n  \n  Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n    value = +value\n    offset = offset >>> 0\n    if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n    if (value < 0) value = 0xffffffff + value + 1\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n    return offset + 4\n  }\n  \n  function checkIEEE754 (buf, value, offset, ext, max, min) {\n    if (offset + ext > buf.length) throw new RangeError('Index out of range')\n    if (offset < 0) throw new RangeError('Index out of range')\n  }\n  \n  function writeFloat (buf, value, offset, littleEndian, noAssert) {\n    value = +value\n    offset = offset >>> 0\n    if (!noAssert) {\n      checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n    }\n    ieee754.write(buf, value, offset, littleEndian, 23, 4)\n    return offset + 4\n  }\n  \n  Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n    return writeFloat(this, value, offset, true, noAssert)\n  }\n  \n  Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n    return writeFloat(this, value, offset, false, noAssert)\n  }\n  \n  function writeDouble (buf, value, offset, littleEndian, noAssert) {\n    value = +value\n    offset = offset >>> 0\n    if (!noAssert) {\n      checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n    }\n    ieee754.write(buf, value, offset, littleEndian, 52, 8)\n    return offset + 8\n  }\n  \n  Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n    return writeDouble(this, value, offset, true, noAssert)\n  }\n  \n  Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n    return writeDouble(this, value, offset, false, noAssert)\n  }\n  \n  // copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\n  Buffer.prototype.copy = function copy (target, targetStart, start, end) {\n    if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n    if (!start) start = 0\n    if (!end && end !== 0) end = this.length\n    if (targetStart >= target.length) targetStart = target.length\n    if (!targetStart) targetStart = 0\n    if (end > 0 && end < start) end = start\n  \n    // Copy 0 bytes; we're done\n    if (end === start) return 0\n    if (target.length === 0 || this.length === 0) return 0\n  \n    // Fatal error conditions\n    if (targetStart < 0) {\n      throw new RangeError('targetStart out of bounds')\n    }\n    if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n    if (end < 0) throw new RangeError('sourceEnd out of bounds')\n  \n    // Are we oob?\n    if (end > this.length) end = this.length\n    if (target.length - targetStart < end - start) {\n      end = target.length - targetStart + start\n    }\n  \n    var len = end - start\n  \n    if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n      // Use built-in when available, missing from IE11\n      this.copyWithin(targetStart, start, end)\n    } else if (this === target && start < targetStart && targetStart < end) {\n      // descending copy from end\n      for (var i = len - 1; i >= 0; --i) {\n        target[i + targetStart] = this[i + start]\n      }\n    } else {\n      Uint8Array.prototype.set.call(\n        target,\n        this.subarray(start, end),\n        targetStart\n      )\n    }\n  \n    return len\n  }\n  \n  // Usage:\n  //    buffer.fill(number[, offset[, end]])\n  //    buffer.fill(buffer[, offset[, end]])\n  //    buffer.fill(string[, offset[, end]][, encoding])\n  Buffer.prototype.fill = function fill (val, start, end, encoding) {\n    // Handle string cases:\n    if (typeof val === 'string') {\n      if (typeof start === 'string') {\n        encoding = start\n        start = 0\n        end = this.length\n      } else if (typeof end === 'string') {\n        encoding = end\n        end = this.length\n      }\n      if (encoding !== undefined && typeof encoding !== 'string') {\n        throw new TypeError('encoding must be a string')\n      }\n      if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n        throw new TypeError('Unknown encoding: ' + encoding)\n      }\n      if (val.length === 1) {\n        var code = val.charCodeAt(0)\n        if ((encoding === 'utf8' && code < 128) ||\n            encoding === 'latin1') {\n          // Fast path: If `val` fits into a single byte, use that numeric value.\n          val = code\n        }\n      }\n    } else if (typeof val === 'number') {\n      val = val & 255\n    }\n  \n    // Invalid ranges are not set to a default, so can range check early.\n    if (start < 0 || this.length < start || this.length < end) {\n      throw new RangeError('Out of range index')\n    }\n  \n    if (end <= start) {\n      return this\n    }\n  \n    start = start >>> 0\n    end = end === undefined ? this.length : end >>> 0\n  \n    if (!val) val = 0\n  \n    var i\n    if (typeof val === 'number') {\n      for (i = start; i < end; ++i) {\n        this[i] = val\n      }\n    } else {\n      var bytes = Buffer.isBuffer(val)\n        ? val\n        : Buffer.from(val, encoding)\n      var len = bytes.length\n      if (len === 0) {\n        throw new TypeError('The value \"' + val +\n          '\" is invalid for argument \"value\"')\n      }\n      for (i = 0; i < end - start; ++i) {\n        this[i + start] = bytes[i % len]\n      }\n    }\n  \n    return this\n  }\n  \n  // HELPER FUNCTIONS\n  // ================\n  \n  var INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n  \n  function base64clean (str) {\n    // Node takes equal signs as end of the Base64 encoding\n    str = str.split('=')[0]\n    // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n    str = str.trim().replace(INVALID_BASE64_RE, '')\n    // Node converts strings with length < 2 to ''\n    if (str.length < 2) return ''\n    // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n    while (str.length % 4 !== 0) {\n      str = str + '='\n    }\n    return str\n  }\n  \n  function toHex (n) {\n    if (n < 16) return '0' + n.toString(16)\n    return n.toString(16)\n  }\n  \n  function utf8ToBytes (string, units) {\n    units = units || Infinity\n    var codePoint\n    var length = string.length\n    var leadSurrogate = null\n    var bytes = []\n  \n    for (var i = 0; i < length; ++i) {\n      codePoint = string.charCodeAt(i)\n  \n      // is surrogate component\n      if (codePoint > 0xD7FF && codePoint < 0xE000) {\n        // last char was a lead\n        if (!leadSurrogate) {\n          // no lead yet\n          if (codePoint > 0xDBFF) {\n            // unexpected trail\n            if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n            continue\n          } else if (i + 1 === length) {\n            // unpaired lead\n            if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n            continue\n          }\n  \n          // valid lead\n          leadSurrogate = codePoint\n  \n          continue\n        }\n  \n        // 2 leads in a row\n        if (codePoint < 0xDC00) {\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          leadSurrogate = codePoint\n          continue\n        }\n  \n        // valid surrogate pair\n        codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n      } else if (leadSurrogate) {\n        // valid bmp char, but last char was a lead\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n      }\n  \n      leadSurrogate = null\n  \n      // encode utf8\n      if (codePoint < 0x80) {\n        if ((units -= 1) < 0) break\n        bytes.push(codePoint)\n      } else if (codePoint < 0x800) {\n        if ((units -= 2) < 0) break\n        bytes.push(\n          codePoint >> 0x6 | 0xC0,\n          codePoint & 0x3F | 0x80\n        )\n      } else if (codePoint < 0x10000) {\n        if ((units -= 3) < 0) break\n        bytes.push(\n          codePoint >> 0xC | 0xE0,\n          codePoint >> 0x6 & 0x3F | 0x80,\n          codePoint & 0x3F | 0x80\n        )\n      } else if (codePoint < 0x110000) {\n        if ((units -= 4) < 0) break\n        bytes.push(\n          codePoint >> 0x12 | 0xF0,\n          codePoint >> 0xC & 0x3F | 0x80,\n          codePoint >> 0x6 & 0x3F | 0x80,\n          codePoint & 0x3F | 0x80\n        )\n      } else {\n        throw new Error('Invalid code point')\n      }\n    }\n  \n    return bytes\n  }\n  \n  function asciiToBytes (str) {\n    var byteArray = []\n    for (var i = 0; i < str.length; ++i) {\n      // Node's code seems to be doing this and not & 0x7F..\n      byteArray.push(str.charCodeAt(i) & 0xFF)\n    }\n    return byteArray\n  }\n  \n  function utf16leToBytes (str, units) {\n    var c, hi, lo\n    var byteArray = []\n    for (var i = 0; i < str.length; ++i) {\n      if ((units -= 2) < 0) break\n  \n      c = str.charCodeAt(i)\n      hi = c >> 8\n      lo = c % 256\n      byteArray.push(lo)\n      byteArray.push(hi)\n    }\n  \n    return byteArray\n  }\n  \n  function base64ToBytes (str) {\n    return base64.toByteArray(base64clean(str))\n  }\n  \n  function blitBuffer (src, dst, offset, length) {\n    for (var i = 0; i < length; ++i) {\n      if ((i + offset >= dst.length) || (i >= src.length)) break\n      dst[i + offset] = src[i]\n    }\n    return i\n  }\n  \n  // ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n  // the `instanceof` check but they should be treated as of that type.\n  // See: https://github.com/feross/buffer/issues/166\n  function isInstance (obj, type) {\n    return obj instanceof type ||\n      (obj != null && obj.constructor != null && obj.constructor.name != null &&\n        obj.constructor.name === type.name)\n  }\n  function numberIsNaN (obj) {\n    // For IE11 support\n    return obj !== obj // eslint-disable-line no-self-compare\n  }\n  \n  },{\"base64-js\":21,\"ieee754\":23}],23:[function(require,module,exports){\n  exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n    var e, m\n    var eLen = (nBytes * 8) - mLen - 1\n    var eMax = (1 << eLen) - 1\n    var eBias = eMax >> 1\n    var nBits = -7\n    var i = isLE ? (nBytes - 1) : 0\n    var d = isLE ? -1 : 1\n    var s = buffer[offset + i]\n  \n    i += d\n  \n    e = s & ((1 << (-nBits)) - 1)\n    s >>= (-nBits)\n    nBits += eLen\n    for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n  \n    m = e & ((1 << (-nBits)) - 1)\n    e >>= (-nBits)\n    nBits += mLen\n    for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n  \n    if (e === 0) {\n      e = 1 - eBias\n    } else if (e === eMax) {\n      return m ? NaN : ((s ? -1 : 1) * Infinity)\n    } else {\n      m = m + Math.pow(2, mLen)\n      e = e - eBias\n    }\n    return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n  }\n  \n  exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n    var e, m, c\n    var eLen = (nBytes * 8) - mLen - 1\n    var eMax = (1 << eLen) - 1\n    var eBias = eMax >> 1\n    var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n    var i = isLE ? 0 : (nBytes - 1)\n    var d = isLE ? 1 : -1\n    var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n  \n    value = Math.abs(value)\n  \n    if (isNaN(value) || value === Infinity) {\n      m = isNaN(value) ? 1 : 0\n      e = eMax\n    } else {\n      e = Math.floor(Math.log(value) / Math.LN2)\n      if (value * (c = Math.pow(2, -e)) < 1) {\n        e--\n        c *= 2\n      }\n      if (e + eBias >= 1) {\n        value += rt / c\n      } else {\n        value += rt * Math.pow(2, 1 - eBias)\n      }\n      if (value * c >= 2) {\n        e++\n        c /= 2\n      }\n  \n      if (e + eBias >= eMax) {\n        m = 0\n        e = eMax\n      } else if (e + eBias >= 1) {\n        m = ((value * c) - 1) * Math.pow(2, mLen)\n        e = e + eBias\n      } else {\n        m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n        e = 0\n      }\n    }\n  \n    for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n  \n    e = (e << mLen) | m\n    eLen += mLen\n    for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n  \n    buffer[offset + i - d] |= s * 128\n  }\n  \n  },{}],24:[function(require,module,exports){\n  // shim for using process in browser\n  var process = module.exports = {};\n  \n  // cached from whatever global is present so that test runners that stub it\n  // don't break things.  But we need to wrap it in a try catch in case it is\n  // wrapped in strict mode code which doesn't define any globals.  It's inside a\n  // function because try/catches deoptimize in certain engines.\n  \n  var cachedSetTimeout;\n  var cachedClearTimeout;\n  \n  function defaultSetTimout() {\n      throw new Error('setTimeout has not been defined');\n  }\n  function defaultClearTimeout () {\n      throw new Error('clearTimeout has not been defined');\n  }\n  (function () {\n      try {\n          if (typeof setTimeout === 'function') {\n              cachedSetTimeout = setTimeout;\n          } else {\n              cachedSetTimeout = defaultSetTimout;\n          }\n      } catch (e) {\n          cachedSetTimeout = defaultSetTimout;\n      }\n      try {\n          if (typeof clearTimeout === 'function') {\n              cachedClearTimeout = clearTimeout;\n          } else {\n              cachedClearTimeout = defaultClearTimeout;\n          }\n      } catch (e) {\n          cachedClearTimeout = defaultClearTimeout;\n      }\n  } ())\n  function runTimeout(fun) {\n      if (cachedSetTimeout === setTimeout) {\n          //normal enviroments in sane situations\n          return setTimeout(fun, 0);\n      }\n      // if setTimeout wasn't available but was latter defined\n      if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n          cachedSetTimeout = setTimeout;\n          return setTimeout(fun, 0);\n      }\n      try {\n          // when when somebody has screwed with setTimeout but no I.E. maddness\n          return cachedSetTimeout(fun, 0);\n      } catch(e){\n          try {\n              // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n              return cachedSetTimeout.call(null, fun, 0);\n          } catch(e){\n              // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n              return cachedSetTimeout.call(this, fun, 0);\n          }\n      }\n  \n  \n  }\n  function runClearTimeout(marker) {\n      if (cachedClearTimeout === clearTimeout) {\n          //normal enviroments in sane situations\n          return clearTimeout(marker);\n      }\n      // if clearTimeout wasn't available but was latter defined\n      if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n          cachedClearTimeout = clearTimeout;\n          return clearTimeout(marker);\n      }\n      try {\n          // when when somebody has screwed with setTimeout but no I.E. maddness\n          return cachedClearTimeout(marker);\n      } catch (e){\n          try {\n              // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n              return cachedClearTimeout.call(null, marker);\n          } catch (e){\n              // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n              // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n              return cachedClearTimeout.call(this, marker);\n          }\n      }\n  \n  \n  \n  }\n  var queue = [];\n  var draining = false;\n  var currentQueue;\n  var queueIndex = -1;\n  \n  function cleanUpNextTick() {\n      if (!draining || !currentQueue) {\n          return;\n      }\n      draining = false;\n      if (currentQueue.length) {\n          queue = currentQueue.concat(queue);\n      } else {\n          queueIndex = -1;\n      }\n      if (queue.length) {\n          drainQueue();\n      }\n  }\n  \n  function drainQueue() {\n      if (draining) {\n          return;\n      }\n      var timeout = runTimeout(cleanUpNextTick);\n      draining = true;\n  \n      var len = queue.length;\n      while(len) {\n          currentQueue = queue;\n          queue = [];\n          while (++queueIndex < len) {\n              if (currentQueue) {\n                  currentQueue[queueIndex].run();\n              }\n          }\n          queueIndex = -1;\n          len = queue.length;\n      }\n      currentQueue = null;\n      draining = false;\n      runClearTimeout(timeout);\n  }\n  \n  process.nextTick = function (fun) {\n      var args = new Array(arguments.length - 1);\n      if (arguments.length > 1) {\n          for (var i = 1; i < arguments.length; i++) {\n              args[i - 1] = arguments[i];\n          }\n      }\n      queue.push(new Item(fun, args));\n      if (queue.length === 1 && !draining) {\n          runTimeout(drainQueue);\n      }\n  };\n  \n  // v8 likes predictible objects\n  function Item(fun, array) {\n      this.fun = fun;\n      this.array = array;\n  }\n  Item.prototype.run = function () {\n      this.fun.apply(null, this.array);\n  };\n  process.title = 'browser';\n  process.browser = true;\n  process.env = {};\n  process.argv = [];\n  process.version = ''; // empty string to avoid regexp issues\n  process.versions = {};\n  \n  function noop() {}\n  \n  process.on = noop;\n  process.addListener = noop;\n  process.once = noop;\n  process.off = noop;\n  process.removeListener = noop;\n  process.removeAllListeners = noop;\n  process.emit = noop;\n  process.prependListener = noop;\n  process.prependOnceListener = noop;\n  \n  process.listeners = function (name) { return [] }\n  \n  process.binding = function (name) {\n      throw new Error('process.binding is not supported');\n  };\n  \n  process.cwd = function () { return '/' };\n  process.chdir = function (dir) {\n      throw new Error('process.chdir is not supported');\n  };\n  process.umask = function() { return 0; };\n  \n  },{}]},{},[20]);\n  \n  module.exports = WAValidator;"]},"metadata":{},"sourceType":"module"}