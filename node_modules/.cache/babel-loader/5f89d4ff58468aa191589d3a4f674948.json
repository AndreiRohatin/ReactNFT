{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rohat\\\\Desktop\\\\nft exercise\\\\reactApp\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport Form from './Form';\nimport NFTCard from './Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleResponse = response => {\n      const rspv = JSON.parse(response[\"data\"]);\n\n      if (rspv[\"isSuccessful\"]) {\n        this.setState({\n          response: response\n        });\n        this.setState({\n          isSuccessful: true\n        });\n        this.setState({\n          NFTs: JSON.parse(response[\"data\"])[\"data\"]\n        });\n      } else {\n        this.setState({\n          isSuccessful: false\n        });\n      }\n    };\n\n    this.state = {\n      response: {},\n      NFTs: [],\n      isSucessful: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          my: 4\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          component: \"h1\",\n          style: {\n            \"textAlign\": \"center\"\n          },\n          gutterBottom: true,\n          children: \"NFT Searcher using WebSockets\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        getResponse: this.handleResponse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [() => {\n          if (true) {}\n        }, this.state.NFTs.map(elm => /*#__PURE__*/_jsxDEV(NFTCard, {\n          NFT: elm,\n          sx: {\n            my: 10\n          },\n          className: \"col-4\"\n        }, elm[\"blockNumber\"], false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 40\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/rohat/Desktop/nft exercise/reactApp/src/App.js"],"names":["React","Component","Container","Typography","Box","Form","NFTCard","App","constructor","props","handleResponse","response","rspv","JSON","parse","setState","isSuccessful","NFTs","state","isSucessful","render","my","map","elm"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAiC,yBAAjC;AACA,OAAOC,UAAP,MAAiC,0BAAjC;AACA,OAAOC,GAAP,MAAiC,mBAAjC;AACA,OAAOC,IAAP,MAAiC,QAAjC;AACA,OAAOC,OAAP,MAAiC,QAAjC;;;AAGA,MAAMC,GAAN,SAAkBN,SAAlB,CAA4B;AAC1BO,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SASlBC,cATkB,GASAC,QAAD,IAAa;AAC5B,YAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWH,QAAQ,CAAC,MAAD,CAAnB,CAAb;;AACA,UAAGC,IAAI,CAAC,cAAD,CAAP,EAAwB;AACtB,aAAKG,QAAL,CAAc;AAACJ,UAAAA,QAAQ,EAAOA;AAAhB,SAAd;AACA,aAAKI,QAAL,CAAc;AAACC,UAAAA,YAAY,EAAG;AAAhB,SAAd;AACA,aAAKD,QAAL,CAAc;AAACE,UAAAA,IAAI,EAAWJ,IAAI,CAACC,KAAL,CAAWH,QAAQ,CAAC,MAAD,CAAnB,EAA6B,MAA7B;AAAhB,SAAd;AACD,OAJD,MAIK;AACH,aAAKI,QAAL,CAAc;AAACC,UAAAA,YAAY,EAAG;AAAhB,SAAd;AACD;AACF,KAlBiB;;AAEhB,SAAKE,KAAL,GAAW;AACTP,MAAAA,QAAQ,EAAM,EADL;AAETM,MAAAA,IAAI,EAAU,EAFL;AAGTE,MAAAA,WAAW,EAAG;AAHL,KAAX;AAKD;;AAaDC,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAC,IAApB;AAAA,8BACE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAAT;AAAA,+BACE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,IAApB;AAAyB,UAAA,SAAS,EAAC,IAAnC;AAAwC,UAAA,KAAK,EAAE;AAAC,yBAAY;AAAb,WAA/C;AAAuE,UAAA,YAAY,MAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,IAAD;AAAM,QAAA,WAAW,EAAE,KAAKX;AAAxB;AAAA;AAAA;AAAA;AAAA,cANF,eAOE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,mBACI,MAAI;AACJ,cAAG,IAAH,EAAQ,CAAE;AACX,SAHH,EAKI,KAAKQ,KAAL,CAAWD,IAAX,CAAgBK,GAAhB,CAAoBC,GAAG,iBAAI,QAAC,OAAD;AAAkC,UAAA,GAAG,EAAEA,GAAvC;AAA6C,UAAA,EAAE,EAAE;AAAEF,YAAAA,EAAE,EAAE;AAAN,WAAjD;AAA6D,UAAA,SAAS,EAAC;AAAvE,WAAcE,GAAG,CAAC,aAAD,CAAjB;AAAA;AAAA;AAAA;AAAA,gBAA3B,CALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAkBD;;AAxCyB;;AA2C5B,eAAehB,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport Container            from '@mui/material/Container';\nimport Typography           from '@mui/material/Typography';\nimport Box                  from '@mui/material/Box';\nimport Form                 from './Form';\nimport NFTCard              from './Card'\n\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state={\n      response:     {},\n      NFTs:         [],\n      isSucessful:  false\n    }\n  }\n  \n  handleResponse = (response) =>{\n    const rspv = JSON.parse(response[\"data\"]);\n    if(rspv[\"isSuccessful\"]){\n      this.setState({response:      response});\n      this.setState({isSuccessful:  true});\n      this.setState({NFTs:          JSON.parse(response[\"data\"])[\"data\"]});\n    }else{\n      this.setState({isSuccessful:  false});\n    }\n  }\n\n  render() {\n    return (\n      <Container maxWidth=\"lg\">\n        <Box sx={{ my: 4 }}>\n          <Typography variant=\"h4\" component=\"h1\" style={{\"textAlign\":\"center\"}} gutterBottom>\n            NFT Searcher using WebSockets\n          </Typography>\n        </Box>\n        <Form getResponse={this.handleResponse} />\n        <div className=\"row\">\n          {(()=>{\n            if(true){}\n          })}\n          {\n            this.state.NFTs.map(elm => <NFTCard key={elm[\"blockNumber\"]} NFT={elm}  sx={{ my: 10 }} className=\"col-4\" />)\n          }\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}