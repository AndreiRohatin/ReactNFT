{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rohat\\\\Desktop\\\\nft exercise\\\\reactApp\\\\src\\\\Card.js\";\nimport React, { Component } from 'react';\nimport { styled } from '@mui/material/styles';\nimport Card from '@mui/material/Card';\nimport CardHeader from '@mui/material/CardHeader';\nimport CardMedia from '@mui/material/CardMedia';\nimport CardContent from '@mui/material/CardContent';\nimport CardActions from '@mui/material/CardActions';\nimport Collapse from '@mui/material/Collapse';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar imposibil = 1;\n\nclass NFTCard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isExpanded: true,\n      NFT: this.props.NFT\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        maxWidth: 345\n      },\n      onClick: () => {\n        imposibil = (imposibil + 1) % 2;\n        console.log(\"caca\");\n      },\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        title: this.state.NFT[\"name\"],\n        subheader: this.state.NFT[\"blockNumber\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(CardMedia, {\n        component: \"img\",\n        height: \"194\",\n        src: this.state.NFT[\"imageURL\"],\n        alt: this.state.NFT[\"name\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          children: this.state.NFT[\"contractType\"]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n        in: imposibil === 0,\n        timeout: \"auto\",\n        unmountOnExit: true,\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            paragraph: true,\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            paragraph: true,\n            children: this.state.NFT[\"description\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            paragraph: true,\n            children: \"Symbol:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            paragraph: true,\n            children: this.state.NFT[\"symbol\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default NFTCard;","map":{"version":3,"sources":["C:/Users/rohat/Desktop/nft exercise/reactApp/src/Card.js"],"names":["React","Component","styled","Card","CardHeader","CardMedia","CardContent","CardActions","Collapse","IconButton","Typography","imposibil","NFTCard","constructor","props","state","isExpanded","NFT","render","maxWidth","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;AAEA,IAAIC,SAAS,GAAC,CAAd;;AAEA,MAAMC,OAAN,SAAsBX,SAAtB,CAA+B;AAC3BY,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAG,IADJ;AAETC,MAAAA,GAAG,EAAU,KAAKH,KAAL,CAAWG;AAFf,KAAb;AAIH;;AACDC,EAAAA,MAAM,GAAE;AACJ,wBACI,QAAC,IAAD;AAAM,MAAA,EAAE,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAAV;AAA6B,MAAA,OAAO,EAAE,MAAI;AAACR,QAAAA,SAAS,GAAC,CAACA,SAAS,GAAC,CAAX,IAAc,CAAxB;AAA0BS,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AAAoB,OAAzF;AAAA,8BACA,QAAC,UAAD;AACI,QAAA,KAAK,EAAE,KAAKN,KAAL,CAAWE,GAAX,CAAe,MAAf,CADX;AAEI,QAAA,SAAS,EAAE,KAAKF,KAAL,CAAWE,GAAX,CAAe,aAAf;AAFf;AAAA;AAAA;AAAA;AAAA,cADA,eAKA,QAAC,SAAD;AACI,QAAA,SAAS,EAAC,KADd;AAEI,QAAA,MAAM,EAAC,KAFX;AAGI,QAAA,GAAG,EAAE,KAAKF,KAAL,CAAWE,GAAX,CAAe,UAAf,CAHT;AAII,QAAA,GAAG,EAAE,KAAKF,KAAL,CAAWE,GAAX,CAAe,MAAf;AAJT;AAAA;AAAA;AAAA;AAAA,cALA,eAWA,QAAC,WAAD;AAAA,+BACI,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,OAApB;AAA4B,UAAA,KAAK,EAAC,gBAAlC;AAAA,oBACK,KAAKF,KAAL,CAAWE,GAAX,CAAe,cAAf;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAXA,eAgBA,QAAC,QAAD;AAAU,QAAA,EAAE,EAAEN,SAAS,KAAG,CAA1B;AAA6B,QAAA,OAAO,EAAC,MAArC;AAA4C,QAAA,aAAa,MAAzD;AAAA,+BACI,QAAC,WAAD;AAAA,kCACA,QAAC,UAAD;AAAY,YAAA,SAAS,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA,QAAC,UAAD;AAAY,YAAA,SAAS,MAArB;AAAA,sBACK,KAAKI,KAAL,CAAWE,GAAX,CAAe,aAAf;AADL;AAAA;AAAA;AAAA;AAAA,kBAFA,eAKA,QAAC,UAAD;AAAY,YAAA,SAAS,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALA,eAQA,QAAC,UAAD;AAAY,YAAA,SAAS,MAArB;AAAA,sBACK,KAAKF,KAAL,CAAWE,GAAX,CAAe,QAAf;AADL;AAAA;AAAA;AAAA;AAAA,kBARA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAhBA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAiCH;;AA1C0B;;AA6C/B,eAAeL,OAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport Card from '@mui/material/Card';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nvar imposibil=1;\r\n\r\nclass NFTCard extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isExpanded  :true,\r\n            NFT         :this.props.NFT,\r\n        };\r\n    }\r\n    render(){\r\n        return(\r\n            <Card sx={{ maxWidth: 345 }} onClick={()=>{imposibil=(imposibil+1)%2;console.log(\"caca\")}}>\r\n            <CardHeader\r\n                title={this.state.NFT[\"name\"]}\r\n                subheader={this.state.NFT[\"blockNumber\"]}\r\n            />\r\n            <CardMedia\r\n                component=\"img\"\r\n                height=\"194\"\r\n                src={this.state.NFT[\"imageURL\"]}\r\n                alt={this.state.NFT[\"name\"]}\r\n            />\r\n            <CardContent>\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    {this.state.NFT[\"contractType\"]}\r\n                </Typography>\r\n            </CardContent>\r\n            <Collapse in={imposibil===0} timeout=\"auto\" unmountOnExit>\r\n                <CardContent>\r\n                <Typography paragraph>Description:</Typography>\r\n                <Typography paragraph>\r\n                    {this.state.NFT[\"description\"]}\r\n                </Typography>\r\n                <Typography paragraph>\r\n                    Symbol:\r\n                </Typography>\r\n                <Typography paragraph>\r\n                    {this.state.NFT[\"symbol\"]}\r\n                </Typography>\r\n                </CardContent>\r\n            </Collapse>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NFTCard;"]},"metadata":{},"sourceType":"module"}